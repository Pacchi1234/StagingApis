<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="196" passed="186" failed="1" skipped="9">
  <reporter-output>
  </reporter-output>
  <suite started-at="2023-08-18T15:24:38 IST" name="Suite" finished-at="2023-08-18T15:30:29 IST" duration-ms="350725">
    <groups>
      <group name="gamification">
        <method signature="CouponControllerGetApi.getCouponsByActivityId()[pri:91, instance:com.ripplestreet.AllGetApis.CouponControllerGetApi@147a5d08]" name="getCouponsByActivityId" class="com.ripplestreet.AllGetApis.CouponControllerGetApi"/>
        <method signature="GameControllerGetApi.getAllgames()[pri:92, instance:com.ripplestreet.AllGetApis.GameControllerGetApi@1b45c0e]" name="getAllgames" class="com.ripplestreet.AllGetApis.GameControllerGetApi"/>
        <method signature="GameControllerGetApi.getGameBygameId()[pri:93, instance:com.ripplestreet.AllGetApis.GameControllerGetApi@1b45c0e]" name="getGameBygameId" class="com.ripplestreet.AllGetApis.GameControllerGetApi"/>
        <method signature="GameControllerGetApi.GetGameTrackerRedisObjByGameId()[pri:94, instance:com.ripplestreet.AllGetApis.GameControllerGetApi@1b45c0e]" name="GetGameTrackerRedisObjByGameId" class="com.ripplestreet.AllGetApis.GameControllerGetApi"/>
        <method signature="GameControllerGetApi.getWinningoptionBasedOnTheProbability()[pri:95, instance:com.ripplestreet.AllGetApis.GameControllerGetApi@1b45c0e]" name="getWinningoptionBasedOnTheProbability" class="com.ripplestreet.AllGetApis.GameControllerGetApi"/>
        <method signature="gameOptionControllerGetApi.getGameOptionBySlug()[pri:96, instance:com.ripplestreet.AllGetApis.gameOptionControllerGetApi@68d279ec]" name="getGameOptionBySlug" class="com.ripplestreet.AllGetApis.gameOptionControllerGetApi"/>
        <method signature="gameOptionControllerGetApi.getListOfOptionsByGameId()[pri:97, instance:com.ripplestreet.AllGetApis.gameOptionControllerGetApi@68d279ec]" name="getListOfOptionsByGameId" class="com.ripplestreet.AllGetApis.gameOptionControllerGetApi"/>
      </group> <!-- gamification -->
      <group name="activityugcreview">
        <method signature="UgcControllerGetApi.downloadAsset()[pri:0, instance:com.ripplestreet.AllGetApis.UgcControllerGetApi@9573584]" name="downloadAsset" class="com.ripplestreet.AllGetApis.UgcControllerGetApi"/>
        <method signature="UgcControllerGetApi.getUgcDetailsByTaskId()[pri:0, instance:com.ripplestreet.AllGetApis.UgcControllerGetApi@9573584]" name="getUgcDetailsByTaskId" class="com.ripplestreet.AllGetApis.UgcControllerGetApi"/>
        <method signature="ReviewControllerGetApi.getExternalReview()[pri:46, instance:com.ripplestreet.AllGetApis.ReviewControllerGetApi@1fb19a0]" name="getExternalReview" class="com.ripplestreet.AllGetApis.ReviewControllerGetApi"/>
        <method signature="ReviewControllerGetApi.getReviewsByTaskId()[pri:47, instance:com.ripplestreet.AllGetApis.ReviewControllerGetApi@1fb19a0]" name="getReviewsByTaskId" class="com.ripplestreet.AllGetApis.ReviewControllerGetApi"/>
        <method signature="ReviewControllerGetApi.getReview()[pri:48, instance:com.ripplestreet.AllGetApis.ReviewControllerGetApi@1fb19a0]" name="getReview" class="com.ripplestreet.AllGetApis.ReviewControllerGetApi"/>
        <method signature="UgcControllerGetApi.downloadAssetByURL()[pri:51, instance:com.ripplestreet.AllGetApis.UgcControllerGetApi@9573584]" name="downloadAssetByURL" class="com.ripplestreet.AllGetApis.UgcControllerGetApi"/>
        <method signature="UgcControllerGetApi.getImageRecognitionResponse()[pri:52, instance:com.ripplestreet.AllGetApis.UgcControllerGetApi@9573584]" name="getImageRecognitionResponse" class="com.ripplestreet.AllGetApis.UgcControllerGetApi"/>
        <method signature="UgcControllerGetApi.getUgcDetailsById()[pri:53, instance:com.ripplestreet.AllGetApis.UgcControllerGetApi@9573584]" name="getUgcDetailsById" class="com.ripplestreet.AllGetApis.UgcControllerGetApi"/>
        <method signature="UgcControllerGetApi.getUserAsset()[pri:54, instance:com.ripplestreet.AllGetApis.UgcControllerGetApi@9573584]" name="getUserAsset" class="com.ripplestreet.AllGetApis.UgcControllerGetApi"/>
        <method signature="SocialShareControllerGetApi.getReview()[pri:57, instance:com.ripplestreet.AllGetApis.SocialShareControllerGetApi@50dfbc58]" name="getReview" class="com.ripplestreet.AllGetApis.SocialShareControllerGetApi"/>
        <method signature="SocialShareControllerGetApi.getAllReviews()[pri:58, instance:com.ripplestreet.AllGetApis.SocialShareControllerGetApi@50dfbc58]" name="getAllReviews" class="com.ripplestreet.AllGetApis.SocialShareControllerGetApi"/>
      </group> <!-- activityugcreview -->
      <group name="notification">
        <method signature="NotificationControllerGetApi.isEmailExistInSuppressionList()[pri:0, instance:com.ripplestreet.AllGetApis.NotificationControllerGetApi@571c5681]" name="isEmailExistInSuppressionList" class="com.ripplestreet.AllGetApis.NotificationControllerGetApi"/>
        <method signature="NotificationControllerGetApi.getAllNotification()[pri:127, instance:com.ripplestreet.AllGetApis.NotificationControllerGetApi@571c5681]" name="getAllNotification" class="com.ripplestreet.AllGetApis.NotificationControllerGetApi"/>
        <method signature="NotificationControllerGetApi.GetCampaignByNotificationId()[pri:128, instance:com.ripplestreet.AllGetApis.NotificationControllerGetApi@571c5681]" name="GetCampaignByNotificationId" class="com.ripplestreet.AllGetApis.NotificationControllerGetApi"/>
        <method signature="NotificationControllerGetApi.GetStatusByNotificationId()[pri:129, instance:com.ripplestreet.AllGetApis.NotificationControllerGetApi@571c5681]" name="GetStatusByNotificationId" class="com.ripplestreet.AllGetApis.NotificationControllerGetApi"/>
        <method signature="NotificationControllerGetApi.SearchCampaignforNotification()[pri:130, instance:com.ripplestreet.AllGetApis.NotificationControllerGetApi@571c5681]" name="SearchCampaignforNotification" class="com.ripplestreet.AllGetApis.NotificationControllerGetApi"/>
        <method signature="NotificationControllerGetApi.GetKPIMatrixByCampaignId()[pri:132, instance:com.ripplestreet.AllGetApis.NotificationControllerGetApi@571c5681]" name="GetKPIMatrixByCampaignId" class="com.ripplestreet.AllGetApis.NotificationControllerGetApi"/>
        <method signature="TemplateControllerGetApi.template()[pri:133, instance:com.ripplestreet.AllGetApis.TemplateControllerGetApi@11f0a5a1]" name="template" class="com.ripplestreet.AllGetApis.TemplateControllerGetApi"/>
        <method signature="TemplateControllerGetApi.AllEmailList()[pri:134, instance:com.ripplestreet.AllGetApis.TemplateControllerGetApi@11f0a5a1]" name="AllEmailList" class="com.ripplestreet.AllGetApis.TemplateControllerGetApi"/>
        <method signature="TemplateControllerGetApi.PreviewTemplateContent()[pri:135, instance:com.ripplestreet.AllGetApis.TemplateControllerGetApi@11f0a5a1]" name="PreviewTemplateContent" class="com.ripplestreet.AllGetApis.TemplateControllerGetApi"/>
        <method signature="TemplateControllerGetApi.GettemplateByTrasactionalType()[pri:136, instance:com.ripplestreet.AllGetApis.TemplateControllerGetApi@11f0a5a1]" name="GettemplateByTrasactionalType" class="com.ripplestreet.AllGetApis.TemplateControllerGetApi"/>
        <method signature="TemplateControllerGetApi.DownloadCSVLoader()[pri:137, instance:com.ripplestreet.AllGetApis.TemplateControllerGetApi@11f0a5a1]" name="DownloadCSVLoader" class="com.ripplestreet.AllGetApis.TemplateControllerGetApi"/>
        <method signature="TemplateControllerGetApi.GetTemplateListByTransactionalTypeAndEventId()[pri:138, instance:com.ripplestreet.AllGetApis.TemplateControllerGetApi@11f0a5a1]" name="GetTemplateListByTransactionalTypeAndEventId" class="com.ripplestreet.AllGetApis.TemplateControllerGetApi"/>
        <method signature="TemplateControllerGetApi.getTransactionalTemplateById()[pri:139, instance:com.ripplestreet.AllGetApis.TemplateControllerGetApi@11f0a5a1]" name="getTransactionalTemplateById" class="com.ripplestreet.AllGetApis.TemplateControllerGetApi"/>
        <method signature="RecipientsController.GetAllRecipientForCampaignId()[pri:140, instance:com.ripplestreet.AllGetApis.RecipientsController@44c73c26]" name="GetAllRecipientForCampaignId" class="com.ripplestreet.AllGetApis.RecipientsController"/>
      </group> <!-- notification -->
      <group name="common-service">
        <method signature="CommonServiceFeedControllerGeApi.getAllFeedsForEvents()[pri:98, instance:com.ripplestreet.AllGetApis.CommonServiceFeedControllerGeApi@48d61b48]" name="getAllFeedsForEvents" class="com.ripplestreet.AllGetApis.CommonServiceFeedControllerGeApi"/>
        <method signature="jobControllerGetApi.getAllJobByTypeAndId()[pri:99, instance:com.ripplestreet.AllGetApis.jobControllerGetApi@5965be2d]" name="getAllJobByTypeAndId" class="com.ripplestreet.AllGetApis.jobControllerGetApi"/>
        <method signature="jobControllerGetApi.getAllListOfJobsBySourcetype()[pri:100, instance:com.ripplestreet.AllGetApis.jobControllerGetApi@5965be2d]" name="getAllListOfJobsBySourcetype" class="com.ripplestreet.AllGetApis.jobControllerGetApi"/>
        <method signature="ReceiptControllerGetApi.getReceiptRecordWithData()[pri:101, instance:com.ripplestreet.AllGetApis.ReceiptControllerGetApi@5c45d770]" name="getReceiptRecordWithData" class="com.ripplestreet.AllGetApis.ReceiptControllerGetApi"/>
        <method signature="ReceiptControllerGetApi.getReceiptList()[pri:102, instance:com.ripplestreet.AllGetApis.ReceiptControllerGetApi@5c45d770]" name="getReceiptList" class="com.ripplestreet.AllGetApis.ReceiptControllerGetApi"/>
        <method signature="storesControllerGetApi.getAllStoreCollection()[pri:103, instance:com.ripplestreet.AllGetApis.storesControllerGetApi@7d898981]" name="getAllStoreCollection" class="com.ripplestreet.AllGetApis.storesControllerGetApi"/>
        <method signature="storesControllerGetApi.getStoreListByCollectionName()[pri:104, instance:com.ripplestreet.AllGetApis.storesControllerGetApi@7d898981]" name="getStoreListByCollectionName" class="com.ripplestreet.AllGetApis.storesControllerGetApi"/>
      </group> <!-- common-service -->
      <group name="activity-hub">
        <method signature="ActivityControllerGetApi.getListOfActivities()[pri:68, instance:com.ripplestreet.AllGetApis.ActivityControllerGetApi@6ee4d9ab]" name="getListOfActivities" class="com.ripplestreet.AllGetApis.ActivityControllerGetApi"/>
        <method signature="ActivityControllerGetApi.getActivity()[pri:69, instance:com.ripplestreet.AllGetApis.ActivityControllerGetApi@6ee4d9ab]" name="getActivity" class="com.ripplestreet.AllGetApis.ActivityControllerGetApi"/>
        <method signature="ActivityGroupControllerGetApi.GetListofActivityGroups()[pri:70, instance:com.ripplestreet.AllGetApis.ActivityGroupControllerGetApi@6d07a63d]" name="GetListofActivityGroups" class="com.ripplestreet.AllGetApis.ActivityGroupControllerGetApi"/>
        <method signature="ActivityGroupControllerGetApi.GetActivityGroupsByyEventId()[pri:71, instance:com.ripplestreet.AllGetApis.ActivityGroupControllerGetApi@6d07a63d]" name="GetActivityGroupsByyEventId" class="com.ripplestreet.AllGetApis.ActivityGroupControllerGetApi"/>
        <method signature="ActivityGroupControllerGetApi.GetActivityGroup()[pri:72, instance:com.ripplestreet.AllGetApis.ActivityGroupControllerGetApi@6d07a63d]" name="GetActivityGroup" class="com.ripplestreet.AllGetApis.ActivityGroupControllerGetApi"/>
        <method signature="TaskControllerGetApi.getListOfTasks()[pri:73, instance:com.ripplestreet.AllGetApis.TaskControllerGetApi@75d2da2d]" name="getListOfTasks" class="com.ripplestreet.AllGetApis.TaskControllerGetApi"/>
        <method signature="TaskControllerGetApi.getTask()[pri:74, instance:com.ripplestreet.AllGetApis.TaskControllerGetApi@75d2da2d]" name="getTask" class="com.ripplestreet.AllGetApis.TaskControllerGetApi"/>
        <method signature="MobileAppControllerGetApi.GetListOfMyActivities()[pri:75, instance:com.ripplestreet.AllGetApis.MobileAppControllerGetApi@41005828]" name="GetListOfMyActivities" class="com.ripplestreet.AllGetApis.MobileAppControllerGetApi"/>
      </group> <!-- activity-hub -->
      <group name="benefits-platform">
        <method signature="AchievementControllerGetApi.GetListofAchievements()[pri:59, instance:com.ripplestreet.AllGetApis.AchievementControllerGetApi@7d286fb6]" name="GetListofAchievements" class="com.ripplestreet.AllGetApis.AchievementControllerGetApi"/>
        <method signature="AchievementControllerGetApi.getAchivements()[pri:60, instance:com.ripplestreet.AllGetApis.AchievementControllerGetApi@7d286fb6]" name="getAchivements" class="com.ripplestreet.AllGetApis.AchievementControllerGetApi"/>
        <method signature="AchievementControllerGetApi.GetListofAchievementsforTriggerId()[pri:61, instance:com.ripplestreet.AllGetApis.AchievementControllerGetApi@7d286fb6]" name="GetListofAchievementsforTriggerId" class="com.ripplestreet.AllGetApis.AchievementControllerGetApi"/>
        <method signature="AchievementProgramControllerGetApi.GetListofAchievementPrograms()[pri:62, instance:com.ripplestreet.AllGetApis.AchievementProgramControllerGetApi@41294f8]" name="GetListofAchievementPrograms" class="com.ripplestreet.AllGetApis.AchievementProgramControllerGetApi"/>
        <method signature="AchievementProgramControllerGetApi.GetListOfAchievementProgramsforAchievementId()[pri:63, instance:com.ripplestreet.AllGetApis.AchievementProgramControllerGetApi@41294f8]" name="GetListOfAchievementProgramsforAchievementId" class="com.ripplestreet.AllGetApis.AchievementProgramControllerGetApi"/>
        <method signature="AchievementProgramControllerGetApi.GetAchievementProgram()[pri:64, instance:com.ripplestreet.AllGetApis.AchievementProgramControllerGetApi@41294f8]" name="GetAchievementProgram" class="com.ripplestreet.AllGetApis.AchievementProgramControllerGetApi"/>
        <method signature="BenefitControllerGetApi.GetListofBenefit()[pri:65, instance:com.ripplestreet.AllGetApis.BenefitControllerGetApi@332729ad]" name="GetListofBenefit" class="com.ripplestreet.AllGetApis.BenefitControllerGetApi"/>
        <method signature="UserAchievementControllerGetApi.getUserAchivmentsDetails()[pri:66, instance:com.ripplestreet.AllGetApis.UserAchievementControllerGetApi@4196c360]" name="getUserAchivmentsDetails" class="com.ripplestreet.AllGetApis.UserAchievementControllerGetApi"/>
        <method signature="UserAchievementControllerGetApi.getUserProgramsDetailes()[pri:67, instance:com.ripplestreet.AllGetApis.UserAchievementControllerGetApi@4196c360]" name="getUserProgramsDetailes" class="com.ripplestreet.AllGetApis.UserAchievementControllerGetApi"/>
      </group> <!-- benefits-platform -->
      <group name="event-campaign-manager">
        <method signature="AgencyControllerGetApi.findAllAgencies()[pri:141, instance:com.ripplestreet.AllGetApis.AgencyControllerGetApi@573906eb]" name="findAllAgencies" class="com.ripplestreet.AllGetApis.AgencyControllerGetApi"/>
        <method signature="AgencyControllerGetApi.getAgencyById()[pri:142, instance:com.ripplestreet.AllGetApis.AgencyControllerGetApi@573906eb]" name="getAgencyById" class="com.ripplestreet.AllGetApis.AgencyControllerGetApi"/>
        <method signature="AssetControllerGetApi.getAssetById()[pri:143, instance:com.ripplestreet.AllGetApis.AssetControllerGetApi@479ceda0]" name="getAssetById" class="com.ripplestreet.AllGetApis.AssetControllerGetApi"/>
        <method signature="CampaignControllerGetApi.findCampaignById()[pri:144, instance:com.ripplestreet.AllGetApis.CampaignControllerGetApi@2ce6c6ec]" name="findCampaignById" class="com.ripplestreet.AllGetApis.CampaignControllerGetApi"/>
        <method signature="CampaignControllerGetApi.findAllCampaingn()[pri:145, instance:com.ripplestreet.AllGetApis.CampaignControllerGetApi@2ce6c6ec]" name="findAllCampaingn" class="com.ripplestreet.AllGetApis.CampaignControllerGetApi"/>
        <method signature="ConfigurationController.getAllconfigs()[pri:146, instance:com.ripplestreet.AllGetApis.ConfigurationController@13d4992d]" name="getAllconfigs" class="com.ripplestreet.AllGetApis.ConfigurationController"/>
        <method signature="CreativeControllerGetApi.findHeroPlaylistById()[pri:147, instance:com.ripplestreet.AllGetApis.CreativeControllerGetApi@5082d622]" name="findHeroPlaylistById" class="com.ripplestreet.AllGetApis.CreativeControllerGetApi"/>
        <method signature="CreativeControllerGetApi.findAllHeroPlaylistByModelId()[pri:148, instance:com.ripplestreet.AllGetApis.CreativeControllerGetApi@5082d622]" name="findAllHeroPlaylistByModelId" class="com.ripplestreet.AllGetApis.CreativeControllerGetApi"/>
        <method signature="CreativeControllerGetApi.getBannerByEventIdandId()[pri:149, instance:com.ripplestreet.AllGetApis.CreativeControllerGetApi@5082d622]" name="getBannerByEventIdandId" class="com.ripplestreet.AllGetApis.CreativeControllerGetApi"/>
        <method signature="CreativeControllerGetApi.getFavorByEventIdAndId()[pri:150, instance:com.ripplestreet.AllGetApis.CreativeControllerGetApi@5082d622]" name="getFavorByEventIdAndId" class="com.ripplestreet.AllGetApis.CreativeControllerGetApi"/>
        <method signature="CreativeControllerGetApi.finAllBannerByEventId()[pri:151, instance:com.ripplestreet.AllGetApis.CreativeControllerGetApi@5082d622]" name="finAllBannerByEventId" class="com.ripplestreet.AllGetApis.CreativeControllerGetApi"/>
        <method signature="CreativeControllerGetApi.FinfAllfavousByEventId()[pri:152, instance:com.ripplestreet.AllGetApis.CreativeControllerGetApi@5082d622]" name="FinfAllfavousByEventId" class="com.ripplestreet.AllGetApis.CreativeControllerGetApi"/>
        <method signature="CreativeControllerGetApi.FindHeroplaylistitemById()[pri:153, instance:com.ripplestreet.AllGetApis.CreativeControllerGetApi@5082d622]" name="FindHeroplaylistitemById" class="com.ripplestreet.AllGetApis.CreativeControllerGetApi"/>
        <method signature="CreativeControllerGetApi.findAllHeroPlaylistItemsByPlayListId()[pri:154, instance:com.ripplestreet.AllGetApis.CreativeControllerGetApi@5082d622]" name="findAllHeroPlaylistItemsByPlayListId" class="com.ripplestreet.AllGetApis.CreativeControllerGetApi"/>
        <method signature="DraftEventControllerGetApi.getListOfEventsBycampaignId()[pri:155, instance:com.ripplestreet.AllGetApis.DraftEventControllerGetApi@7b8b43c7]" name="getListOfEventsBycampaignId" class="com.ripplestreet.AllGetApis.DraftEventControllerGetApi"/>
        <method signature="DraftEventControllerGetApi.getDraftEventByEventId()[pri:156, instance:com.ripplestreet.AllGetApis.DraftEventControllerGetApi@7b8b43c7]" name="getDraftEventByEventId" class="com.ripplestreet.AllGetApis.DraftEventControllerGetApi"/>
        <method signature="EventDetailControllerGetApi.getBasicEventDetailByEventID()[pri:157, instance:com.ripplestreet.AllGetApis.EventDetailControllerGetApi@488d1cd7]" name="getBasicEventDetailByEventID" class="com.ripplestreet.AllGetApis.EventDetailControllerGetApi"/>
        <method signature="EventDetailControllerGetApi.findAllmileStonesByEvent()[pri:158, instance:com.ripplestreet.AllGetApis.EventDetailControllerGetApi@488d1cd7]" name="findAllmileStonesByEvent" class="com.ripplestreet.AllGetApis.EventDetailControllerGetApi"/>
        <method signature="EventDetailControllerGetApi.findMileStoneById()[pri:159, instance:com.ripplestreet.AllGetApis.EventDetailControllerGetApi@488d1cd7]" name="findMileStoneById" class="com.ripplestreet.AllGetApis.EventDetailControllerGetApi"/>
        <method signature="EventDetailControllerGetApi.getListoftargetsByEventId()[pri:160, instance:com.ripplestreet.AllGetApis.EventDetailControllerGetApi@488d1cd7]" name="getListoftargetsByEventId" class="com.ripplestreet.AllGetApis.EventDetailControllerGetApi"/>
        <method signature="EventDetailControllerGetApi.findAllMilestonesTypeByEventtypes()[pri:161, instance:com.ripplestreet.AllGetApis.EventDetailControllerGetApi@488d1cd7]" name="findAllMilestonesTypeByEventtypes" class="com.ripplestreet.AllGetApis.EventDetailControllerGetApi"/>
        <method signature="FAQcontrollerGetApi.getFAQbyEventId()[pri:163, instance:com.ripplestreet.AllGetApis.FAQcontrollerGetApi@53251a66]" name="getFAQbyEventId" class="com.ripplestreet.AllGetApis.FAQcontrollerGetApi"/>
        <method signature="FAQcontrollerGetApi.getFAQById()[pri:164, instance:com.ripplestreet.AllGetApis.FAQcontrollerGetApi@53251a66]" name="getFAQById" class="com.ripplestreet.AllGetApis.FAQcontrollerGetApi"/>
        <method signature="FAQcontrollerGetApi.GetFAQDetailByEventIdforCommunity()[pri:165, instance:com.ripplestreet.AllGetApis.FAQcontrollerGetApi@53251a66]" name="GetFAQDetailByEventIdforCommunity" class="com.ripplestreet.AllGetApis.FAQcontrollerGetApi"/>
        <method signature="FAQcontrollerGetApi.getlistofFaqTopicbyFaqId()[pri:166, instance:com.ripplestreet.AllGetApis.FAQcontrollerGetApi@53251a66]" name="getlistofFaqTopicbyFaqId" class="com.ripplestreet.AllGetApis.FAQcontrollerGetApi"/>
        <method signature="EventTemplateControllerGetApi.findAllEventTemplate()[pri:167, instance:com.ripplestreet.AllGetApis.EventTemplateControllerGetApi@176b75f7]" name="findAllEventTemplate" class="com.ripplestreet.AllGetApis.EventTemplateControllerGetApi"/>
        <method signature="FAQcontrollerGetApi.FAQTopicByID()[pri:167, instance:com.ripplestreet.AllGetApis.FAQcontrollerGetApi@53251a66]" name="FAQTopicByID" class="com.ripplestreet.AllGetApis.FAQcontrollerGetApi"/>
        <method signature="FAQcontrollerGetApi.GetlistofFaqTopicItemsbyFaqTopicId()[pri:168, instance:com.ripplestreet.AllGetApis.FAQcontrollerGetApi@53251a66]" name="GetlistofFaqTopicItemsbyFaqTopicId" class="com.ripplestreet.AllGetApis.FAQcontrollerGetApi"/>
        <method signature="FAQcontrollerGetApi.getFAQTopicitemsById()[pri:169, instance:com.ripplestreet.AllGetApis.FAQcontrollerGetApi@53251a66]" name="getFAQTopicitemsById" class="com.ripplestreet.AllGetApis.FAQcontrollerGetApi"/>
        <method signature="LegalControllerGetApi.getLegalDesclaimer()[pri:170, instance:com.ripplestreet.AllGetApis.LegalControllerGetApi@73a8da0f]" name="getLegalDesclaimer" class="com.ripplestreet.AllGetApis.LegalControllerGetApi"/>
        <method signature="MarketingGoalsControllerGetApi.getMarketingGoalsForEvent()[pri:171, instance:com.ripplestreet.AllGetApis.MarketingGoalsControllerGetApi@1bae316d]" name="getMarketingGoalsForEvent" class="com.ripplestreet.AllGetApis.MarketingGoalsControllerGetApi"/>
        <method signature="ProductControllerGetApi.getListOfProdutsByEventID()[pri:172, instance:com.ripplestreet.AllGetApis.ProductControllerGetApi@7fcf2fc1]" name="getListOfProdutsByEventID" class="com.ripplestreet.AllGetApis.ProductControllerGetApi"/>
        <method signature="ProductControllerGetApi.getProductsById()[pri:173, instance:com.ripplestreet.AllGetApis.ProductControllerGetApi@7fcf2fc1]" name="getProductsById" class="com.ripplestreet.AllGetApis.ProductControllerGetApi"/>
        <method signature="RoleControllerGetApi.getLlistOfPeopleByRoleID()[pri:174, instance:com.ripplestreet.AllGetApis.RoleControllerGetApi@21129f1f]" name="getLlistOfPeopleByRoleID" class="com.ripplestreet.AllGetApis.RoleControllerGetApi"/>
        <method signature="RoleControllerGetApi.getListOfRoles()[pri:175, instance:com.ripplestreet.AllGetApis.RoleControllerGetApi@21129f1f]" name="getListOfRoles" class="com.ripplestreet.AllGetApis.RoleControllerGetApi"/>
        <method signature="SponserControllerGetApi.findSponsorById()[pri:176, instance:com.ripplestreet.AllGetApis.SponserControllerGetApi@3eb77ea8]" name="findSponsorById" class="com.ripplestreet.AllGetApis.SponserControllerGetApi"/>
        <method signature="SponserControllerGetApi.getAllSponsors()[pri:177, instance:com.ripplestreet.AllGetApis.SponserControllerGetApi@3eb77ea8]" name="getAllSponsors" class="com.ripplestreet.AllGetApis.SponserControllerGetApi"/>
        <method signature="SponserControllerGetApi.findAllsponsorAssetsbysponsorId()[pri:178, instance:com.ripplestreet.AllGetApis.SponserControllerGetApi@3eb77ea8]" name="findAllsponsorAssetsbysponsorId" class="com.ripplestreet.AllGetApis.SponserControllerGetApi"/>
        <method signature="SurveyControllerGetApi.getSurveyStatusByEventIdAndPid()[pri:179, instance:com.ripplestreet.AllGetApis.SurveyControllerGetApi@6853425f]" name="getSurveyStatusByEventIdAndPid" class="com.ripplestreet.AllGetApis.SurveyControllerGetApi"/>
        <method signature="SurveyControllerGetApi.getAllLinksByEventId()[pri:180, instance:com.ripplestreet.AllGetApis.SurveyControllerGetApi@6853425f]" name="getAllLinksByEventId" class="com.ripplestreet.AllGetApis.SurveyControllerGetApi"/>
        <method signature="SurveyControllerGetApi.getSurveyListByEventIdAndPid()[pri:181, instance:com.ripplestreet.AllGetApis.SurveyControllerGetApi@6853425f]" name="getSurveyListByEventIdAndPid" class="com.ripplestreet.AllGetApis.SurveyControllerGetApi"/>
        <method signature="TargetsControllerGetApi.getAlltargets()[pri:182, instance:com.ripplestreet.AllGetApis.TargetsControllerGetApi@71e693fa]" name="getAlltargets" class="com.ripplestreet.AllGetApis.TargetsControllerGetApi"/>
        <method signature="TrackableLinkcontrollerGetApi.findAllLinksForAnEvent()[pri:183, instance:com.ripplestreet.AllGetApis.TrackableLinkcontrollerGetApi@14f9390f]" name="findAllLinksForAnEvent" class="com.ripplestreet.AllGetApis.TrackableLinkcontrollerGetApi"/>
        <method signature="TrackableLinkcontrollerGetApi.getLinkById()[pri:184, instance:com.ripplestreet.AllGetApis.TrackableLinkcontrollerGetApi@14f9390f]" name="getLinkById" class="com.ripplestreet.AllGetApis.TrackableLinkcontrollerGetApi"/>
        <method signature="WorkFlowTemplateControllerGetApi.getEventWorkflowTemplateByEventId()[pri:185, instance:com.ripplestreet.AllGetApis.WorkFlowTemplateControllerGetApi@6676f6a0]" name="getEventWorkflowTemplateByEventId" class="com.ripplestreet.AllGetApis.WorkFlowTemplateControllerGetApi"/>
        <method signature="WorkFlowTemplateControllerGetApi.getListOfWorkFlowTemplates()[pri:186, instance:com.ripplestreet.AllGetApis.WorkFlowTemplateControllerGetApi@6676f6a0]" name="getListOfWorkFlowTemplates" class="com.ripplestreet.AllGetApis.WorkFlowTemplateControllerGetApi"/>
        <method signature="WorkFlowTemplateControllerGetApi.getStepFunctionByArn()[pri:187, instance:com.ripplestreet.AllGetApis.WorkFlowTemplateControllerGetApi@6676f6a0]" name="getStepFunctionByArn" class="com.ripplestreet.AllGetApis.WorkFlowTemplateControllerGetApi"/>
      </group> <!-- event-campaign-manager -->
      <group name="community-service">
        <method signature="UserStatusControllerGetApi.GetUserStatusActionByEventIdAndPersonId()[pri:0, instance:com.ripplestreet.AllGetApis.UserStatusControllerGetApi@225129c]" name="GetUserStatusActionByEventIdAndPersonId" class="com.ripplestreet.AllGetApis.UserStatusControllerGetApi"/>
        <method signature="webMvcLinkshandlerGetApi.links()[pri:0, instance:com.ripplestreet.AllGetApis.webMvcLinkshandlerGetApi@6bf08014]" name="links" class="com.ripplestreet.AllGetApis.webMvcLinkshandlerGetApi"/>
        <method signature="ApplicationControllerGetApi.getAllApplications()[pri:19, instance:com.ripplestreet.AllGetApis.ApplicationControllerGetApi@3370f42]" name="getAllApplications" class="com.ripplestreet.AllGetApis.ApplicationControllerGetApi"/>
        <method signature="AudienceControllerGetApi.getParticipantsWithApplicationsForEvent()[pri:20, instance:com.ripplestreet.AllGetApis.AudienceControllerGetApi@4f6f416f]" name="getParticipantsWithApplicationsForEvent" class="com.ripplestreet.AllGetApis.AudienceControllerGetApi"/>
        <method signature="AudiencePromotionControllerGetApi.getListOfAudiencePromotionJobsByEventId()[pri:21, instance:com.ripplestreet.AllGetApis.AudiencePromotionControllerGetApi@48793bef]" name="getListOfAudiencePromotionJobsByEventId" class="com.ripplestreet.AllGetApis.AudiencePromotionControllerGetApi"/>
        <method signature="AudiencePromotionControllerGetApi.getListOfInviteOnlyUsersByEventId()[pri:22, instance:com.ripplestreet.AllGetApis.AudiencePromotionControllerGetApi@48793bef]" name="getListOfInviteOnlyUsersByEventId" class="com.ripplestreet.AllGetApis.AudiencePromotionControllerGetApi"/>
        <method signature="CommunityControllerGetApi.getAllAddressEntriesByPersonId()[pri:23, instance:com.ripplestreet.AllGetApis.CommunityControllerGetApi@2141a12]" name="getAllAddressEntriesByPersonId" class="com.ripplestreet.AllGetApis.CommunityControllerGetApi"/>
        <method signature="CommunityControllerGetApi.getAllEventsByUserAndParticipantType()[pri:24, instance:com.ripplestreet.AllGetApis.CommunityControllerGetApi@2141a12]" name="getAllEventsByUserAndParticipantType" class="com.ripplestreet.AllGetApis.CommunityControllerGetApi"/>
        <method signature="CommunityControllerGetApi.getAllUsersByEventAndParticipantType()[pri:25, instance:com.ripplestreet.AllGetApis.CommunityControllerGetApi@2141a12]" name="getAllUsersByEventAndParticipantType" class="com.ripplestreet.AllGetApis.CommunityControllerGetApi"/>
        <method signature="CommunityControllerGetApi.GettingDetailOfHeadHostByPersonId()[pri:26, instance:com.ripplestreet.AllGetApis.CommunityControllerGetApi@2141a12]" name="GettingDetailOfHeadHostByPersonId" class="com.ripplestreet.AllGetApis.CommunityControllerGetApi"/>
        <method signature="CommunityControllerGetApi.getUserEventParticipationBit()[pri:27, instance:com.ripplestreet.AllGetApis.CommunityControllerGetApi@2141a12]" name="getUserEventParticipationBit" class="com.ripplestreet.AllGetApis.CommunityControllerGetApi"/>
        <method signature="CommunityControllerGetApi.getUserListByFilters()[pri:28, instance:com.ripplestreet.AllGetApis.CommunityControllerGetApi@2141a12]" name="getUserListByFilters" class="com.ripplestreet.AllGetApis.CommunityControllerGetApi"/>
        <method signature="CommunityControllerGetApi.getUserParticipationBits()[pri:29, instance:com.ripplestreet.AllGetApis.CommunityControllerGetApi@2141a12]" name="getUserParticipationBits" class="com.ripplestreet.AllGetApis.CommunityControllerGetApi"/>
        <method signature="CommunityControllerGetApi.getUserProfile()[pri:30, instance:com.ripplestreet.AllGetApis.CommunityControllerGetApi@2141a12]" name="getUserProfile" class="com.ripplestreet.AllGetApis.CommunityControllerGetApi"/>
        <method signature="CommunityControllerGetApi.getUserDetails()[pri:31, instance:com.ripplestreet.AllGetApis.CommunityControllerGetApi@2141a12]" name="getUserDetails" class="com.ripplestreet.AllGetApis.CommunityControllerGetApi"/>
        <method signature="EnrollmentControllerGetApi.EnrollmentList()[pri:32, instance:com.ripplestreet.AllGetApis.EnrollmentControllerGetApi@6c0d7c83]" name="EnrollmentList" class="com.ripplestreet.AllGetApis.EnrollmentControllerGetApi"/>
        <method signature="EnrollmentControllerGetApi.GetUserEnrollments()[pri:33, instance:com.ripplestreet.AllGetApis.EnrollmentControllerGetApi@6c0d7c83]" name="GetUserEnrollments" class="com.ripplestreet.AllGetApis.EnrollmentControllerGetApi"/>
        <method signature="IntrestesControllerGetApi.Allcategorieslist()[pri:34, instance:com.ripplestreet.AllGetApis.IntrestesControllerGetApi@1672fe87]" name="Allcategorieslist" class="com.ripplestreet.AllGetApis.IntrestesControllerGetApi"/>
        <method signature="IntrestesControllerGetApi.getUserInterestByPersonId()[pri:35, instance:com.ripplestreet.AllGetApis.IntrestesControllerGetApi@1672fe87]" name="getUserInterestByPersonId" class="com.ripplestreet.AllGetApis.IntrestesControllerGetApi"/>
        <method signature="MobileCommunityControllerGetApi.getAllEventsByUserAndParticipantTypeApplicant()[pri:36, instance:com.ripplestreet.AllGetApis.MobileCommunityControllerGetApi@732d0d24]" name="getAllEventsByUserAndParticipantTypeApplicant" class="com.ripplestreet.AllGetApis.MobileCommunityControllerGetApi"/>
        <method signature="MobileCommunityControllerGetApi.getActiveEventsDetailForUser()[pri:37, instance:com.ripplestreet.AllGetApis.MobileCommunityControllerGetApi@732d0d24]" name="getActiveEventsDetailForUser" class="com.ripplestreet.AllGetApis.MobileCommunityControllerGetApi"/>
        <method signature="OptinInflightActivationControllerGetApi.getListOfAllocationTransientRecordByEventId()[pri:38, instance:com.ripplestreet.AllGetApis.OptinInflightActivationControllerGetApi@18e36d14]" name="getListOfAllocationTransientRecordByEventId" class="com.ripplestreet.AllGetApis.OptinInflightActivationControllerGetApi"/>
        <method signature="OptinInflightActivationControllerGetApi.getAllocationTransientRecordByEventIdAndPersonId()[pri:39, instance:com.ripplestreet.AllGetApis.OptinInflightActivationControllerGetApi@18e36d14]" name="getAllocationTransientRecordByEventIdAndPersonId" class="com.ripplestreet.AllGetApis.OptinInflightActivationControllerGetApi"/>
        <method signature="PartyControllerGetApi.getlistofparties()[pri:40, instance:com.ripplestreet.AllGetApis.PartyControllerGetApi@4278284b]" name="getlistofparties" class="com.ripplestreet.AllGetApis.PartyControllerGetApi"/>
        <method signature="ReservationControllerGetApi.GetUserStatusCountbyEventId()[pri:41, instance:com.ripplestreet.AllGetApis.ReservationControllerGetApi@7cbd9d24]" name="GetUserStatusCountbyEventId" class="com.ripplestreet.AllGetApis.ReservationControllerGetApi"/>
        <method signature="userFamilyControllerGetApi.getUserChildern()[pri:42, instance:com.ripplestreet.AllGetApis.userFamilyControllerGetApi@60b4beb4]" name="getUserChildern" class="com.ripplestreet.AllGetApis.userFamilyControllerGetApi"/>
        <method signature="userFamilyControllerGetApi.getAllPetTypes()[pri:43, instance:com.ripplestreet.AllGetApis.userFamilyControllerGetApi@60b4beb4]" name="getAllPetTypes" class="com.ripplestreet.AllGetApis.userFamilyControllerGetApi"/>
        <method signature="userFamilyControllerGetApi.getAllPetsForUser()[pri:44, instance:com.ripplestreet.AllGetApis.userFamilyControllerGetApi@60b4beb4]" name="getAllPetsForUser" class="com.ripplestreet.AllGetApis.userFamilyControllerGetApi"/>
        <method signature="UserStatusControllerGetApi.GetUserAndEventDataByEventIdandPersonId()[pri:45, instance:com.ripplestreet.AllGetApis.UserStatusControllerGetApi@225129c]" name="GetUserAndEventDataByEventIdandPersonId" class="com.ripplestreet.AllGetApis.UserStatusControllerGetApi"/>
      </group> <!-- community-service -->
      <group name="segmentation">
        <method signature="AudienceSearchControllerGetApi.searchableFields()[pri:76, instance:com.ripplestreet.AllGetApis.AudienceSearchControllerGetApi@10f7f7de]" name="searchableFields" class="com.ripplestreet.AllGetApis.AudienceSearchControllerGetApi"/>
        <method signature="SegmentationDataControllerGetApi.FindIfUserExistInGivenSegment()[pri:77, instance:com.ripplestreet.AllGetApis.SegmentationDataControllerGetApi@282cb7c7]" name="FindIfUserExistInGivenSegment" class="com.ripplestreet.AllGetApis.SegmentationDataControllerGetApi"/>
        <method signature="SegmentationDataControllerGetApi.GetSegmentIdBySegmentName()[pri:78, instance:com.ripplestreet.AllGetApis.SegmentationDataControllerGetApi@282cb7c7]" name="GetSegmentIdBySegmentName" class="com.ripplestreet.AllGetApis.SegmentationDataControllerGetApi"/>
        <method signature="SegmentationDataControllerGetApi.GetSegmentsOfaUser()[pri:79, instance:com.ripplestreet.AllGetApis.SegmentationDataControllerGetApi@282cb7c7]" name="GetSegmentsOfaUser" class="com.ripplestreet.AllGetApis.SegmentationDataControllerGetApi"/>
        <method signature="SegmentationDataControllerGetApi.GetUsersOfaSegment()[pri:80, instance:com.ripplestreet.AllGetApis.SegmentationDataControllerGetApi@282cb7c7]" name="GetUsersOfaSegment" class="com.ripplestreet.AllGetApis.SegmentationDataControllerGetApi"/>
        <method signature="SegmentationDataControllerGetApi.GetUserDetailsOfaSegment()[pri:81, instance:com.ripplestreet.AllGetApis.SegmentationDataControllerGetApi@282cb7c7]" name="GetUserDetailsOfaSegment" class="com.ripplestreet.AllGetApis.SegmentationDataControllerGetApi"/>
        <method signature="SegmentationDefinitionControllerVersion2.getGetSegmentDefinitionByFolderIdAndSegmentId()[pri:82, instance:com.ripplestreet.AllGetApis.SegmentationDefinitionControllerVersion2@352c1b98]" name="getGetSegmentDefinitionByFolderIdAndSegmentId" class="com.ripplestreet.AllGetApis.SegmentationDefinitionControllerVersion2"/>
        <method signature="SegmentationDefinitionControllerVersion2.getAllSegments()[pri:83, instance:com.ripplestreet.AllGetApis.SegmentationDefinitionControllerVersion2@352c1b98]" name="getAllSegments" class="com.ripplestreet.AllGetApis.SegmentationDefinitionControllerVersion2"/>
        <method signature="SegmentationDefinitionControllerVersion2.getSegmentDefinitionById()[pri:84, instance:com.ripplestreet.AllGetApis.SegmentationDefinitionControllerVersion2@352c1b98]" name="getSegmentDefinitionById" class="com.ripplestreet.AllGetApis.SegmentationDefinitionControllerVersion2"/>
        <method signature="SegmentationFolderControllerGetApi.getAllSegmentFolder()[pri:85, instance:com.ripplestreet.AllGetApis.SegmentationFolderControllerGetApi@5e3d57c7]" name="getAllSegmentFolder" class="com.ripplestreet.AllGetApis.SegmentationFolderControllerGetApi"/>
        <method signature="SegmentationFolderControllerGetApi.GetSegmentFolderFromCampaignSegment()[pri:86, instance:com.ripplestreet.AllGetApis.SegmentationFolderControllerGetApi@5e3d57c7]" name="GetSegmentFolderFromCampaignSegment" class="com.ripplestreet.AllGetApis.SegmentationFolderControllerGetApi"/>
        <method signature="SegmentationJobsControllerGetApi.getAllSegmentJobsForSegmentId()[pri:87, instance:com.ripplestreet.AllGetApis.SegmentationJobsControllerGetApi@6057aebb]" name="getAllSegmentJobsForSegmentId" class="com.ripplestreet.AllGetApis.SegmentationJobsControllerGetApi"/>
        <method signature="TriggerControllerGetApi.GetAllTriggers()[pri:88, instance:com.ripplestreet.AllGetApis.TriggerControllerGetApi@7aaca91a]" name="GetAllTriggers" class="com.ripplestreet.AllGetApis.TriggerControllerGetApi"/>
        <method signature="TriggerControllerGetApi.getTriggerInfoByTableNameAndOperation()[pri:90, instance:com.ripplestreet.AllGetApis.TriggerControllerGetApi@7aaca91a]" name="getTriggerInfoByTableNameAndOperation" class="com.ripplestreet.AllGetApis.TriggerControllerGetApi"/>
        <method signature="TriggerControllerGetApi.getTriggerDefinition()[pri:189, instance:com.ripplestreet.AllGetApis.TriggerControllerGetApi@7aaca91a]" name="getTriggerDefinition" class="com.ripplestreet.AllGetApis.TriggerControllerGetApi"/>
      </group> <!-- segmentation -->
      <group name="event">
        <method signature="EventControllerGetApi.getAllEvents()[pri:0, instance:com.ripplestreet.AllGetApis.EventControllerGetApi@63eef88a]" name="getAllEvents" class="com.ripplestreet.AllGetApis.EventControllerGetApi"/>
        <method signature="EventControllerGetApi.getAllSpotLightEventDetail()[pri:0, instance:com.ripplestreet.AllGetApis.EventControllerGetApi@63eef88a]" name="getAllSpotLightEventDetail" class="com.ripplestreet.AllGetApis.EventControllerGetApi"/>
        <method signature="EventControllerGetApi.getAllCurrentMileStoneByEvent()[pri:1, instance:com.ripplestreet.AllGetApis.EventControllerGetApi@63eef88a]" name="getAllCurrentMileStoneByEvent" class="com.ripplestreet.AllGetApis.EventControllerGetApi"/>
        <method signature="EventControllerGetApi.getAllMileStonesByEvent()[pri:3, instance:com.ripplestreet.AllGetApis.EventControllerGetApi@63eef88a]" name="getAllMileStonesByEvent" class="com.ripplestreet.AllGetApis.EventControllerGetApi"/>
        <method signature="EventControllerGetApi.getAllProductByEvents()[pri:4, instance:com.ripplestreet.AllGetApis.EventControllerGetApi@63eef88a]" name="getAllProductByEvents" class="com.ripplestreet.AllGetApis.EventControllerGetApi"/>
        <method signature="EventControllerGetApi.getAllServices()[pri:5, instance:com.ripplestreet.AllGetApis.EventControllerGetApi@63eef88a]" name="getAllServices" class="com.ripplestreet.AllGetApis.EventControllerGetApi"/>
        <method signature="EventControllerGetApi.getAllSubscriptionsByEvent()[pri:6, instance:com.ripplestreet.AllGetApis.EventControllerGetApi@63eef88a]" name="getAllSubscriptionsByEvent" class="com.ripplestreet.AllGetApis.EventControllerGetApi"/>
        <method signature="EventControllerGetApi.getAllSubscriptionsByServiceName()[pri:7, instance:com.ripplestreet.AllGetApis.EventControllerGetApi@63eef88a]" name="getAllSubscriptionsByServiceName" class="com.ripplestreet.AllGetApis.EventControllerGetApi"/>
        <method signature="EventControllerGetApi.getEventById()[pri:8, instance:com.ripplestreet.AllGetApis.EventControllerGetApi@63eef88a]" name="getEventById" class="com.ripplestreet.AllGetApis.EventControllerGetApi"/>
        <method signature="EventControllerGetApi.getEventDetailBySlug()[pri:9, instance:com.ripplestreet.AllGetApis.EventControllerGetApi@63eef88a]" name="getEventDetailBySlug" class="com.ripplestreet.AllGetApis.EventControllerGetApi"/>
        <method signature="EventControllerGetApi.getProductDetailEventIdAndProductId()[pri:10, instance:com.ripplestreet.AllGetApis.EventControllerGetApi@63eef88a]" name="getProductDetailEventIdAndProductId" class="com.ripplestreet.AllGetApis.EventControllerGetApi"/>
        <method signature="EventControllerGetApi.getpackAndApplicationCountByEventId()[pri:11, instance:com.ripplestreet.AllGetApis.EventControllerGetApi@63eef88a]" name="getpackAndApplicationCountByEventId" class="com.ripplestreet.AllGetApis.EventControllerGetApi"/>
        <method signature="EventControllerGetApi.getByEventName()[pri:12, instance:com.ripplestreet.AllGetApis.EventControllerGetApi@63eef88a]" name="getByEventName" class="com.ripplestreet.AllGetApis.EventControllerGetApi"/>
        <method signature="EventControllerGetApi.getCurrentMileStonesByEvent()[pri:13, instance:com.ripplestreet.AllGetApis.EventControllerGetApi@63eef88a]" name="getCurrentMileStonesByEvent" class="com.ripplestreet.AllGetApis.EventControllerGetApi"/>
        <method signature="EventControllerGetApi.getEventDetailForWorkFlow()[pri:14, instance:com.ripplestreet.AllGetApis.EventControllerGetApi@63eef88a]" name="getEventDetailForWorkFlow" class="com.ripplestreet.AllGetApis.EventControllerGetApi"/>
        <method signature="EventFeedControllerGetApi.getFeedInfoById()[pri:14, instance:com.ripplestreet.AllGetApis.EventFeedControllerGetApi@3e74829]" name="getFeedInfoById" class="com.ripplestreet.AllGetApis.EventFeedControllerGetApi"/>
        <method signature="EventFeedControllerGetApi.getCommentFeedByEventId()[pri:15, instance:com.ripplestreet.AllGetApis.EventFeedControllerGetApi@3e74829]" name="getCommentFeedByEventId" class="com.ripplestreet.AllGetApis.EventFeedControllerGetApi"/>
        <method signature="EventFeedControllerGetApi.getAllFeedsForEvent()[pri:16, instance:com.ripplestreet.AllGetApis.EventFeedControllerGetApi@3e74829]" name="getAllFeedsForEvent" class="com.ripplestreet.AllGetApis.EventFeedControllerGetApi"/>
        <method signature="EventFeedControllerGetApi.getPhotoFeedByEventId()[pri:17, instance:com.ripplestreet.AllGetApis.EventFeedControllerGetApi@3e74829]" name="getPhotoFeedByEventId" class="com.ripplestreet.AllGetApis.EventFeedControllerGetApi"/>
        <method signature="EventFeedControllerGetApi.getReviewFeedByEventId()[pri:18, instance:com.ripplestreet.AllGetApis.EventFeedControllerGetApi@3e74829]" name="getReviewFeedByEventId" class="com.ripplestreet.AllGetApis.EventFeedControllerGetApi"/>
        <method signature="DiscussionControllerGetApi.getDiscussionListByFilters()[pri:55, instance:com.ripplestreet.AllGetApis.DiscussionControllerGetApi@5a5338df]" name="getDiscussionListByFilters" class="com.ripplestreet.AllGetApis.DiscussionControllerGetApi"/>
        <method signature="DiscussionControllerGetApi.getDiscussion()[pri:56, instance:com.ripplestreet.AllGetApis.DiscussionControllerGetApi@5a5338df]" name="getDiscussion" class="com.ripplestreet.AllGetApis.DiscussionControllerGetApi"/>
        <method signature="EventControllerGetApi.getFilteredEvents()[pri:189, instance:com.ripplestreet.AllGetApis.EventControllerGetApi@63eef88a]" name="getFilteredEvents" class="com.ripplestreet.AllGetApis.EventControllerGetApi"/>
        <method signature="EventControllerGetApi.getEventMileStoneByIdAndDate()[pri:190, instance:com.ripplestreet.AllGetApis.EventControllerGetApi@63eef88a]" name="getEventMileStoneByIdAndDate" class="com.ripplestreet.AllGetApis.EventControllerGetApi"/>
      </group> <!-- event -->
      <group name="reward-service">
        <method signature="OptInsControllerGetApi.getListOptInByEventId()[pri:0, instance:com.ripplestreet.AllGetApis.OptInsControllerGetApi@20435c40]" name="getListOptInByEventId" class="com.ripplestreet.AllGetApis.OptInsControllerGetApi"/>
        <method signature="RewardAllocationcontrollerGetApi.getRewardAllocations()[pri:0, instance:com.ripplestreet.AllGetApis.RewardAllocationcontrollerGetApi@5a9f4771]" name="getRewardAllocations" class="com.ripplestreet.AllGetApis.RewardAllocationcontrollerGetApi"/>
        <method signature="OptInsControllerGetApi.GetRewardCountByEventIdAndPreferenceforPerson()[pri:105, instance:com.ripplestreet.AllGetApis.OptInsControllerGetApi@20435c40]" name="GetRewardCountByEventIdAndPreferenceforPerson" class="com.ripplestreet.AllGetApis.OptInsControllerGetApi"/>
        <method signature="OptInsControllerGetApi.getOptInById()[pri:106, instance:com.ripplestreet.AllGetApis.OptInsControllerGetApi@20435c40]" name="getOptInById" class="com.ripplestreet.AllGetApis.OptInsControllerGetApi"/>
        <method signature="RewardAllocationcontrollerGetApi.getRewardAllocation()[pri:108, instance:com.ripplestreet.AllGetApis.RewardAllocationcontrollerGetApi@5a9f4771]" name="getRewardAllocation" class="com.ripplestreet.AllGetApis.RewardAllocationcontrollerGetApi"/>
        <method signature="RewardCatalogControllerGetAPi.getAllRewardCatalogItems()[pri:110, instance:com.ripplestreet.AllGetApis.RewardCatalogControllerGetAPi@4416d64f]" name="getAllRewardCatalogItems" class="com.ripplestreet.AllGetApis.RewardCatalogControllerGetAPi"/>
        <method signature="RewardControllerGetApi.getRewardByName()[pri:111, instance:com.ripplestreet.AllGetApis.RewardControllerGetApi@302f7971]" name="getRewardByName" class="com.ripplestreet.AllGetApis.RewardControllerGetApi"/>
        <method signature="RewardControllerGetApi.getReward()[pri:112, instance:com.ripplestreet.AllGetApis.RewardControllerGetApi@302f7971]" name="getReward" class="com.ripplestreet.AllGetApis.RewardControllerGetApi"/>
        <method signature="RewardControllerGetApi.getAllReward()[pri:113, instance:com.ripplestreet.AllGetApis.RewardControllerGetApi@302f7971]" name="getAllReward" class="com.ripplestreet.AllGetApis.RewardControllerGetApi"/>
        <method signature="RewardControllerGetApi.searchItems()[pri:114, instance:com.ripplestreet.AllGetApis.RewardControllerGetApi@302f7971]" name="searchItems" class="com.ripplestreet.AllGetApis.RewardControllerGetApi"/>
        <method signature="RewardControllerGetApi.getRewardSummaryByEventId()[pri:115, instance:com.ripplestreet.AllGetApis.RewardControllerGetApi@302f7971]" name="getRewardSummaryByEventId" class="com.ripplestreet.AllGetApis.RewardControllerGetApi"/>
        <method signature="RewardControllerGetApi.getRewardCount()[pri:116, instance:com.ripplestreet.AllGetApis.RewardControllerGetApi@302f7971]" name="getRewardCount" class="com.ripplestreet.AllGetApis.RewardControllerGetApi"/>
        <method signature="RewardDeliveryControllerGetApi.getDeliverySystemAttributeValue()[pri:117, instance:com.ripplestreet.AllGetApis.RewardDeliveryControllerGetApi@5026735c]" name="getDeliverySystemAttributeValue" class="com.ripplestreet.AllGetApis.RewardDeliveryControllerGetApi"/>
        <method signature="RewardDeliveryControllerGetApi.getRewardDeleveries()[pri:118, instance:com.ripplestreet.AllGetApis.RewardDeliveryControllerGetApi@5026735c]" name="getRewardDeleveries" class="com.ripplestreet.AllGetApis.RewardDeliveryControllerGetApi"/>
        <method signature="RewardDeliveryControllerGetApi.getRewardDeleverie()[pri:119, instance:com.ripplestreet.AllGetApis.RewardDeliveryControllerGetApi@5026735c]" name="getRewardDeleverie" class="com.ripplestreet.AllGetApis.RewardDeliveryControllerGetApi"/>
        <method signature="RewardDeliveryControllerGetApi.getAllRewardDeliveriesByPersonId()[pri:120, instance:com.ripplestreet.AllGetApis.RewardDeliveryControllerGetApi@5026735c]" name="getAllRewardDeliveriesByPersonId" class="com.ripplestreet.AllGetApis.RewardDeliveryControllerGetApi"/>
        <method signature="RewardsItemsControllerGetApi.getRewarditems()[pri:121, instance:com.ripplestreet.AllGetApis.RewardsItemsControllerGetApi@3b8f0a79]" name="getRewarditems" class="com.ripplestreet.AllGetApis.RewardsItemsControllerGetApi"/>
        <method signature="RewardPreferencesControllerGetApi.getRewardPreferences()[pri:122, instance:com.ripplestreet.AllGetApis.RewardPreferencesControllerGetApi@6cb6decd]" name="getRewardPreferences" class="com.ripplestreet.AllGetApis.RewardPreferencesControllerGetApi"/>
        <method signature="SwagControllerGetApi.getSwag()[pri:123, instance:com.ripplestreet.AllGetApis.SwagControllerGetApi@258d79be]" name="getSwag" class="com.ripplestreet.AllGetApis.SwagControllerGetApi"/>
        <method signature="SwagControllerGetApi.getSwagList()[pri:124, instance:com.ripplestreet.AllGetApis.SwagControllerGetApi@258d79be]" name="getSwagList" class="com.ripplestreet.AllGetApis.SwagControllerGetApi"/>
        <method signature="TremendouesControllerGetApi.getTremendousCampaigns()[pri:125, instance:com.ripplestreet.AllGetApis.TremendouesControllerGetApi@418c5a9c]" name="getTremendousCampaigns" class="com.ripplestreet.AllGetApis.TremendouesControllerGetApi"/>
        <method signature="TremendouesControllerGetApi.getTremendousFundingSources()[pri:126, instance:com.ripplestreet.AllGetApis.TremendouesControllerGetApi@418c5a9c]" name="getTremendousFundingSources" class="com.ripplestreet.AllGetApis.TremendouesControllerGetApi"/>
      </group> <!-- reward-service -->
    </groups>
    <test started-at="2023-08-18T15:24:38 IST" name="Test" finished-at="2023-08-18T15:30:29 IST" duration-ms="350725">
      <class name="com.ripplestreet.AllGetApis.TrackableLinkcontrollerGetApi">
        <test-method signature="findAllLinksForAnEvent()[pri:183, instance:com.ripplestreet.AllGetApis.TrackableLinkcontrollerGetApi@14f9390f]" started-at="2023-08-18T15:28:04 IST" name="findAllLinksForAnEvent" finished-at="2023-08-18T15:28:06 IST" duration-ms="1399" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- findAllLinksForAnEvent -->
        <test-method is-config="true" signature="BaseURI()[pri:0, instance:com.ripplestreet.AllGetApis.TrackableLinkcontrollerGetApi@14f9390f]" started-at="2023-08-18T15:28:04 IST" name="BaseURI" finished-at="2023-08-18T15:28:04 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BaseURI -->
        <test-method is-config="true" signature="StatusCode()[pri:0, instance:com.ripplestreet.AllGetApis.TrackableLinkcontrollerGetApi@14f9390f]" started-at="2023-08-18T15:28:06 IST" name="StatusCode" finished-at="2023-08-18T15:28:06 IST" duration-ms="107" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- StatusCode -->
        <test-method signature="getLinkById()[pri:184, instance:com.ripplestreet.AllGetApis.TrackableLinkcontrollerGetApi@14f9390f]" started-at="2023-08-18T15:28:06 IST" name="getLinkById" finished-at="2023-08-18T15:28:07 IST" duration-ms="1530" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getLinkById -->
        <test-method is-config="true" signature="BaseURI()[pri:0, instance:com.ripplestreet.AllGetApis.TrackableLinkcontrollerGetApi@14f9390f]" started-at="2023-08-18T15:28:06 IST" name="BaseURI" finished-at="2023-08-18T15:28:06 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BaseURI -->
        <test-method is-config="true" signature="StatusCode()[pri:0, instance:com.ripplestreet.AllGetApis.TrackableLinkcontrollerGetApi@14f9390f]" started-at="2023-08-18T15:28:07 IST" name="StatusCode" finished-at="2023-08-18T15:28:07 IST" duration-ms="101" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- StatusCode -->
      </class> <!-- com.ripplestreet.AllGetApis.TrackableLinkcontrollerGetApi -->
      <class name="com.ripplestreet.AllGetApis.AgencyControllerGetApi">
        <test-method is-config="true" signature="BaseURI()[pri:0, instance:com.ripplestreet.AllGetApis.AgencyControllerGetApi@573906eb]" started-at="2023-08-18T15:29:48 IST" name="BaseURI" finished-at="2023-08-18T15:29:48 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BaseURI -->
        <test-method signature="findAllAgencies()[pri:141, instance:com.ripplestreet.AllGetApis.AgencyControllerGetApi@573906eb]" started-at="2023-08-18T15:29:48 IST" name="findAllAgencies" finished-at="2023-08-18T15:29:49 IST" duration-ms="1837" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- findAllAgencies -->
        <test-method is-config="true" signature="StatusCode()[pri:0, instance:com.ripplestreet.AllGetApis.AgencyControllerGetApi@573906eb]" started-at="2023-08-18T15:29:49 IST" name="StatusCode" finished-at="2023-08-18T15:29:50 IST" duration-ms="124" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- StatusCode -->
        <test-method is-config="true" signature="BaseURI()[pri:0, instance:com.ripplestreet.AllGetApis.AgencyControllerGetApi@573906eb]" started-at="2023-08-18T15:29:50 IST" name="BaseURI" finished-at="2023-08-18T15:29:50 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BaseURI -->
        <test-method signature="getAgencyById()[pri:142, instance:com.ripplestreet.AllGetApis.AgencyControllerGetApi@573906eb]" started-at="2023-08-18T15:29:50 IST" name="getAgencyById" finished-at="2023-08-18T15:29:51 IST" duration-ms="1716" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getAgencyById -->
        <test-method is-config="true" signature="StatusCode()[pri:0, instance:com.ripplestreet.AllGetApis.AgencyControllerGetApi@573906eb]" started-at="2023-08-18T15:29:51 IST" name="StatusCode" finished-at="2023-08-18T15:29:51 IST" duration-ms="102" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- StatusCode -->
      </class> <!-- com.ripplestreet.AllGetApis.AgencyControllerGetApi -->
      <class name="com.ripplestreet.AllGetApis.MobileAppEventControllerGetApi">
        <test-method signature="discovermobileEvents()[pri:0, instance:com.ripplestreet.AllGetApis.MobileAppEventControllerGetApi@409c54f]" started-at="2023-08-18T15:28:15 IST" name="discovermobileEvents" finished-at="2023-08-18T15:28:17 IST" duration-ms="1591" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- discovermobileEvents -->
        <test-method is-config="true" signature="BaseURI()[pri:0, instance:com.ripplestreet.AllGetApis.MobileAppEventControllerGetApi@409c54f]" started-at="2023-08-18T15:28:15 IST" name="BaseURI" finished-at="2023-08-18T15:28:15 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BaseURI -->
        <test-method is-config="true" signature="StatusCode()[pri:0, instance:com.ripplestreet.AllGetApis.MobileAppEventControllerGetApi@409c54f]" started-at="2023-08-18T15:28:17 IST" name="StatusCode" finished-at="2023-08-18T15:28:17 IST" duration-ms="127" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- StatusCode -->
      </class> <!-- com.ripplestreet.AllGetApis.MobileAppEventControllerGetApi -->
      <class name="com.ripplestreet.AllGetApis.CommonServiceFeedControllerGeApi">
        <test-method signature="getAllFeedsForEvents()[pri:98, instance:com.ripplestreet.AllGetApis.CommonServiceFeedControllerGeApi@48d61b48]" started-at="2023-08-18T15:27:56 IST" name="getAllFeedsForEvents" finished-at="2023-08-18T15:27:57 IST" duration-ms="1529" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getAllFeedsForEvents -->
        <test-method is-config="true" signature="BaseURI()[pri:0, instance:com.ripplestreet.AllGetApis.CommonServiceFeedControllerGeApi@48d61b48]" started-at="2023-08-18T15:27:56 IST" name="BaseURI" finished-at="2023-08-18T15:27:56 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BaseURI -->
        <test-method is-config="true" signature="StatusCode()[pri:0, instance:com.ripplestreet.AllGetApis.CommonServiceFeedControllerGeApi@48d61b48]" started-at="2023-08-18T15:27:57 IST" name="StatusCode" finished-at="2023-08-18T15:27:58 IST" duration-ms="130" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- StatusCode -->
      </class> <!-- com.ripplestreet.AllGetApis.CommonServiceFeedControllerGeApi -->
      <class name="com.ripplestreet.AllGetApis.EventFeedControllerGetApi">
        <test-method signature="getFeedInfoById()[pri:14, instance:com.ripplestreet.AllGetApis.EventFeedControllerGetApi@3e74829]" started-at="2023-08-18T15:28:17 IST" name="getFeedInfoById" finished-at="2023-08-18T15:28:19 IST" duration-ms="1510" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getFeedInfoById -->
        <test-method is-config="true" signature="BaseURI()[pri:0, instance:com.ripplestreet.AllGetApis.EventFeedControllerGetApi@3e74829]" started-at="2023-08-18T15:28:17 IST" name="BaseURI" finished-at="2023-08-18T15:28:17 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BaseURI -->
        <test-method is-config="true" signature="StatusCode()[pri:0, instance:com.ripplestreet.AllGetApis.EventFeedControllerGetApi@3e74829]" started-at="2023-08-18T15:28:19 IST" name="StatusCode" finished-at="2023-08-18T15:28:19 IST" duration-ms="117" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- StatusCode -->
        <test-method signature="getCommentFeedByEventId()[pri:15, instance:com.ripplestreet.AllGetApis.EventFeedControllerGetApi@3e74829]" started-at="2023-08-18T15:28:19 IST" name="getCommentFeedByEventId" finished-at="2023-08-18T15:28:20 IST" duration-ms="1417" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getCommentFeedByEventId -->
        <test-method is-config="true" signature="BaseURI()[pri:0, instance:com.ripplestreet.AllGetApis.EventFeedControllerGetApi@3e74829]" started-at="2023-08-18T15:28:19 IST" name="BaseURI" finished-at="2023-08-18T15:28:19 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BaseURI -->
        <test-method is-config="true" signature="StatusCode()[pri:0, instance:com.ripplestreet.AllGetApis.EventFeedControllerGetApi@3e74829]" started-at="2023-08-18T15:28:20 IST" name="StatusCode" finished-at="2023-08-18T15:28:20 IST" duration-ms="98" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- StatusCode -->
        <test-method signature="getAllFeedsForEvent()[pri:16, instance:com.ripplestreet.AllGetApis.EventFeedControllerGetApi@3e74829]" started-at="2023-08-18T15:28:20 IST" name="getAllFeedsForEvent" finished-at="2023-08-18T15:28:22 IST" duration-ms="1544" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getAllFeedsForEvent -->
        <test-method is-config="true" signature="BaseURI()[pri:0, instance:com.ripplestreet.AllGetApis.EventFeedControllerGetApi@3e74829]" started-at="2023-08-18T15:28:20 IST" name="BaseURI" finished-at="2023-08-18T15:28:20 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BaseURI -->
        <test-method is-config="true" signature="StatusCode()[pri:0, instance:com.ripplestreet.AllGetApis.EventFeedControllerGetApi@3e74829]" started-at="2023-08-18T15:28:22 IST" name="StatusCode" finished-at="2023-08-18T15:28:22 IST" duration-ms="101" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- StatusCode -->
        <test-method signature="getPhotoFeedByEventId()[pri:17, instance:com.ripplestreet.AllGetApis.EventFeedControllerGetApi@3e74829]" started-at="2023-08-18T15:28:22 IST" name="getPhotoFeedByEventId" finished-at="2023-08-18T15:28:23 IST" duration-ms="1531" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getPhotoFeedByEventId -->
        <test-method is-config="true" signature="BaseURI()[pri:0, instance:com.ripplestreet.AllGetApis.EventFeedControllerGetApi@3e74829]" started-at="2023-08-18T15:28:22 IST" name="BaseURI" finished-at="2023-08-18T15:28:22 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BaseURI -->
        <test-method is-config="true" signature="StatusCode()[pri:0, instance:com.ripplestreet.AllGetApis.EventFeedControllerGetApi@3e74829]" started-at="2023-08-18T15:28:23 IST" name="StatusCode" finished-at="2023-08-18T15:28:24 IST" duration-ms="134" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- StatusCode -->
        <test-method is-config="true" signature="BaseURI()[pri:0, instance:com.ripplestreet.AllGetApis.EventFeedControllerGetApi@3e74829]" started-at="2023-08-18T15:28:24 IST" name="BaseURI" finished-at="2023-08-18T15:28:24 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BaseURI -->
        <test-method signature="getReviewFeedByEventId()[pri:18, instance:com.ripplestreet.AllGetApis.EventFeedControllerGetApi@3e74829]" started-at="2023-08-18T15:28:24 IST" name="getReviewFeedByEventId" finished-at="2023-08-18T15:28:25 IST" duration-ms="1502" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getReviewFeedByEventId -->
        <test-method is-config="true" signature="StatusCode()[pri:0, instance:com.ripplestreet.AllGetApis.EventFeedControllerGetApi@3e74829]" started-at="2023-08-18T15:28:25 IST" name="StatusCode" finished-at="2023-08-18T15:28:25 IST" duration-ms="121" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- StatusCode -->
      </class> <!-- com.ripplestreet.AllGetApis.EventFeedControllerGetApi -->
      <class name="com.ripplestreet.AllGetApis.EventTemplateControllerGetApi">
        <test-method signature="findAllEventTemplate()[pri:167, instance:com.ripplestreet.AllGetApis.EventTemplateControllerGetApi@176b75f7]" started-at="2023-08-18T15:28:10 IST" name="findAllEventTemplate" finished-at="2023-08-18T15:28:12 IST" duration-ms="1451" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- findAllEventTemplate -->
        <test-method is-config="true" signature="BaseURI()[pri:0, instance:com.ripplestreet.AllGetApis.EventTemplateControllerGetApi@176b75f7]" started-at="2023-08-18T15:28:10 IST" name="BaseURI" finished-at="2023-08-18T15:28:10 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BaseURI -->
        <test-method is-config="true" signature="StatusCode()[pri:0, instance:com.ripplestreet.AllGetApis.EventTemplateControllerGetApi@176b75f7]" started-at="2023-08-18T15:28:12 IST" name="StatusCode" finished-at="2023-08-18T15:28:12 IST" duration-ms="76" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- StatusCode -->
      </class> <!-- com.ripplestreet.AllGetApis.EventTemplateControllerGetApi -->
      <class name="com.ripplestreet.AllGetApis.AudiencePromotionControllerGetApi">
        <test-method signature="getListOfAudiencePromotionJobsByEventId()[pri:21, instance:com.ripplestreet.AllGetApis.AudiencePromotionControllerGetApi@48793bef]" started-at="2023-08-18T15:28:30 IST" name="getListOfAudiencePromotionJobsByEventId" finished-at="2023-08-18T15:28:32 IST" duration-ms="1488" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getListOfAudiencePromotionJobsByEventId -->
        <test-method is-config="true" signature="BaseURI()[pri:0, instance:com.ripplestreet.AllGetApis.AudiencePromotionControllerGetApi@48793bef]" started-at="2023-08-18T15:28:30 IST" name="BaseURI" finished-at="2023-08-18T15:28:30 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BaseURI -->
        <test-method is-config="true" signature="StatusCode()[pri:0, instance:com.ripplestreet.AllGetApis.AudiencePromotionControllerGetApi@48793bef]" started-at="2023-08-18T15:28:32 IST" name="StatusCode" finished-at="2023-08-18T15:28:32 IST" duration-ms="112" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- StatusCode -->
        <test-method signature="getListOfInviteOnlyUsersByEventId()[pri:22, instance:com.ripplestreet.AllGetApis.AudiencePromotionControllerGetApi@48793bef]" started-at="2023-08-18T15:28:32 IST" name="getListOfInviteOnlyUsersByEventId" finished-at="2023-08-18T15:28:33 IST" duration-ms="1525" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getListOfInviteOnlyUsersByEventId -->
        <test-method is-config="true" signature="BaseURI()[pri:0, instance:com.ripplestreet.AllGetApis.AudiencePromotionControllerGetApi@48793bef]" started-at="2023-08-18T15:28:32 IST" name="BaseURI" finished-at="2023-08-18T15:28:32 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BaseURI -->
        <test-method is-config="true" signature="StatusCode()[pri:0, instance:com.ripplestreet.AllGetApis.AudiencePromotionControllerGetApi@48793bef]" started-at="2023-08-18T15:28:33 IST" name="StatusCode" finished-at="2023-08-18T15:28:33 IST" duration-ms="133" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- StatusCode -->
      </class> <!-- com.ripplestreet.AllGetApis.AudiencePromotionControllerGetApi -->
      <class name="com.ripplestreet.AllGetApis.jobControllerGetApi">
        <test-method signature="getAllJobByTypeAndId()[pri:99, instance:com.ripplestreet.AllGetApis.jobControllerGetApi@5965be2d]" started-at="2023-08-18T15:28:12 IST" name="getAllJobByTypeAndId" finished-at="2023-08-18T15:28:14 IST" duration-ms="1560" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getAllJobByTypeAndId -->
        <test-method is-config="true" signature="BaseURI()[pri:0, instance:com.ripplestreet.AllGetApis.jobControllerGetApi@5965be2d]" started-at="2023-08-18T15:28:12 IST" name="BaseURI" finished-at="2023-08-18T15:28:12 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BaseURI -->
        <test-method is-config="true" signature="StatusCode()[pri:0, instance:com.ripplestreet.AllGetApis.jobControllerGetApi@5965be2d]" started-at="2023-08-18T15:28:14 IST" name="StatusCode" finished-at="2023-08-18T15:28:14 IST" duration-ms="82" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- StatusCode -->
        <test-method signature="getAllListOfJobsBySourcetype()[pri:100, instance:com.ripplestreet.AllGetApis.jobControllerGetApi@5965be2d]" started-at="2023-08-18T15:28:14 IST" name="getAllListOfJobsBySourcetype" finished-at="2023-08-18T15:28:15 IST" duration-ms="1555" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getAllListOfJobsBySourcetype -->
        <test-method is-config="true" signature="BaseURI()[pri:0, instance:com.ripplestreet.AllGetApis.jobControllerGetApi@5965be2d]" started-at="2023-08-18T15:28:14 IST" name="BaseURI" finished-at="2023-08-18T15:28:14 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BaseURI -->
        <test-method is-config="true" signature="StatusCode()[pri:0, instance:com.ripplestreet.AllGetApis.jobControllerGetApi@5965be2d]" started-at="2023-08-18T15:28:15 IST" name="StatusCode" finished-at="2023-08-18T15:28:15 IST" duration-ms="148" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- StatusCode -->
      </class> <!-- com.ripplestreet.AllGetApis.jobControllerGetApi -->
      <class name="com.ripplestreet.AllGetApis.ActivityGroupControllerGetApi">
        <test-method signature="GetListofActivityGroups()[pri:70, instance:com.ripplestreet.AllGetApis.ActivityGroupControllerGetApi@6d07a63d]" started-at="2023-08-18T15:29:53 IST" name="GetListofActivityGroups" finished-at="2023-08-18T15:29:55 IST" duration-ms="1849" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GetListofActivityGroups -->
        <test-method is-config="true" signature="BaseURI()[pri:0, instance:com.ripplestreet.AllGetApis.ActivityGroupControllerGetApi@6d07a63d]" started-at="2023-08-18T15:29:53 IST" name="BaseURI" finished-at="2023-08-18T15:29:53 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BaseURI -->
        <test-method is-config="true" signature="StatusCode()[pri:0, instance:com.ripplestreet.AllGetApis.ActivityGroupControllerGetApi@6d07a63d]" started-at="2023-08-18T15:29:55 IST" name="StatusCode" finished-at="2023-08-18T15:30:11 IST" duration-ms="16286" status="FAIL">
          <exception class="java.lang.IllegalArgumentException">
            <message>
              <![CDATA[The maximum length of cell contents (text) is 32767 characters]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IllegalArgumentException: The maximum length of cell contents (text) is 32767 characters
at org.apache.poi.ss.usermodel.CellBase.checkLength(CellBase.java:292)
at org.apache.poi.ss.usermodel.CellBase.setCellValue(CellBase.java:273)
at com.ripplestreet.genricUtilities.genricUtilities.StatusCode(genricUtilities.java:282)
at jdk.internal.reflect.GeneratedMethodAccessor111.invoke(Unknown Source)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethodConsideringTimeout(MethodInvocationHelper.java:69)
at org.testng.internal.invokers.ConfigInvoker.invokeConfigurationMethod(ConfigInvoker.java:390)
at org.testng.internal.invokers.ConfigInvoker.invokeConfigurations(ConfigInvoker.java:325)
at org.testng.internal.invokers.TestInvoker.runConfigMethods(TestInvoker.java:810)
at org.testng.internal.invokers.TestInvoker.runAfterConfigurations(TestInvoker.java:779)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:755)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:227)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:957)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:200)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:848)
at org.testng.TestRunner.run(TestRunner.java:621)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:443)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:437)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:397)
at org.testng.SuiteRunner.run(SuiteRunner.java:336)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1280)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1200)
at org.testng.TestNG.runSuites(TestNG.java:1114)
at org.testng.TestNG.run(TestNG.java:1082)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalArgumentException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- StatusCode -->
        <test-method signature="GetActivityGroupsByyEventId()[pri:71, instance:com.ripplestreet.AllGetApis.ActivityGroupControllerGetApi@6d07a63d]" started-at="2023-08-18T15:30:11 IST" name="GetActivityGroupsByyEventId" finished-at="2023-08-18T15:30:11 IST" duration-ms="0" status="SKIP">
          <exception class="java.lang.IllegalArgumentException">
            <message>
              <![CDATA[The maximum length of cell contents (text) is 32767 characters]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IllegalArgumentException: The maximum length of cell contents (text) is 32767 characters
at org.apache.poi.ss.usermodel.CellBase.checkLength(CellBase.java:292)
at org.apache.poi.ss.usermodel.CellBase.setCellValue(CellBase.java:273)
at com.ripplestreet.genricUtilities.genricUtilities.StatusCode(genricUtilities.java:282)
at jdk.internal.reflect.GeneratedMethodAccessor111.invoke(Unknown Source)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethodConsideringTimeout(MethodInvocationHelper.java:69)
at org.testng.internal.invokers.ConfigInvoker.invokeConfigurationMethod(ConfigInvoker.java:390)
at org.testng.internal.invokers.ConfigInvoker.invokeConfigurations(ConfigInvoker.java:325)
at org.testng.internal.invokers.TestInvoker.runConfigMethods(TestInvoker.java:810)
at org.testng.internal.invokers.TestInvoker.runAfterConfigurations(TestInvoker.java:779)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:755)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:227)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:957)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:200)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:848)
at org.testng.TestRunner.run(TestRunner.java:621)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:443)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:437)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:397)
at org.testng.SuiteRunner.run(SuiteRunner.java:336)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1280)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1200)
at org.testng.TestNG.runSuites(TestNG.java:1114)
at org.testng.TestNG.run(TestNG.java:1082)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalArgumentException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GetActivityGroupsByyEventId -->
        <test-method is-config="true" signature="BaseURI()[pri:0, instance:com.ripplestreet.AllGetApis.ActivityGroupControllerGetApi@6d07a63d]" started-at="2023-08-18T15:30:11 IST" name="BaseURI" finished-at="2023-08-18T15:30:11 IST" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BaseURI -->
        <test-method is-config="true" signature="BaseURI()[pri:0, instance:com.ripplestreet.AllGetApis.ActivityGroupControllerGetApi@6d07a63d]" started-at="2023-08-18T15:30:11 IST" name="BaseURI" finished-at="2023-08-18T15:30:11 IST" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BaseURI -->
        <test-method is-config="true" signature="StatusCode()[pri:0, instance:com.ripplestreet.AllGetApis.ActivityGroupControllerGetApi@6d07a63d]" started-at="2023-08-18T15:30:11 IST" name="StatusCode" finished-at="2023-08-18T15:30:11 IST" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- StatusCode -->
        <test-method signature="GetActivityGroup()[pri:72, instance:com.ripplestreet.AllGetApis.ActivityGroupControllerGetApi@6d07a63d]" started-at="2023-08-18T15:30:11 IST" name="GetActivityGroup" finished-at="2023-08-18T15:30:11 IST" duration-ms="0" status="SKIP">
          <exception class="java.lang.IllegalArgumentException">
            <message>
              <![CDATA[The maximum length of cell contents (text) is 32767 characters]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IllegalArgumentException: The maximum length of cell contents (text) is 32767 characters
at org.apache.poi.ss.usermodel.CellBase.checkLength(CellBase.java:292)
at org.apache.poi.ss.usermodel.CellBase.setCellValue(CellBase.java:273)
at com.ripplestreet.genricUtilities.genricUtilities.StatusCode(genricUtilities.java:282)
at jdk.internal.reflect.GeneratedMethodAccessor111.invoke(Unknown Source)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethodConsideringTimeout(MethodInvocationHelper.java:69)
at org.testng.internal.invokers.ConfigInvoker.invokeConfigurationMethod(ConfigInvoker.java:390)
at org.testng.internal.invokers.ConfigInvoker.invokeConfigurations(ConfigInvoker.java:325)
at org.testng.internal.invokers.TestInvoker.runConfigMethods(TestInvoker.java:810)
at org.testng.internal.invokers.TestInvoker.runAfterConfigurations(TestInvoker.java:779)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:755)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:227)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:957)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:200)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:848)
at org.testng.TestRunner.run(TestRunner.java:621)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:443)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:437)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:397)
at org.testng.SuiteRunner.run(SuiteRunner.java:336)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1280)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1200)
at org.testng.TestNG.runSuites(TestNG.java:1114)
at org.testng.TestNG.run(TestNG.java:1082)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalArgumentException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GetActivityGroup -->
        <test-method is-config="true" signature="StatusCode()[pri:0, instance:com.ripplestreet.AllGetApis.ActivityGroupControllerGetApi@6d07a63d]" started-at="2023-08-18T15:30:11 IST" name="StatusCode" finished-at="2023-08-18T15:30:11 IST" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- StatusCode -->
      </class> <!-- com.ripplestreet.AllGetApis.ActivityGroupControllerGetApi -->
      <class name="com.ripplestreet.AllGetApis.MobileAppControllerGetApi">
        <test-method signature="GetListOfMyActivities()[pri:75, instance:com.ripplestreet.AllGetApis.MobileAppControllerGetApi@41005828]" started-at="2023-08-18T15:28:53 IST" name="GetListOfMyActivities" finished-at="2023-08-18T15:28:54 IST" duration-ms="1327" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GetListOfMyActivities -->
        <test-method is-config="true" signature="BaseURI()[pri:0, instance:com.ripplestreet.AllGetApis.MobileAppControllerGetApi@41005828]" started-at="2023-08-18T15:28:53 IST" name="BaseURI" finished-at="2023-08-18T15:28:53 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BaseURI -->
        <test-method is-config="true" signature="StatusCode()[pri:0, instance:com.ripplestreet.AllGetApis.MobileAppControllerGetApi@41005828]" started-at="2023-08-18T15:28:54 IST" name="StatusCode" finished-at="2023-08-18T15:28:55 IST" duration-ms="128" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- StatusCode -->
      </class> <!-- com.ripplestreet.AllGetApis.MobileAppControllerGetApi -->
      <class name="com.ripplestreet.AllGetApis.ActivityControllerGetApi">
        <test-method signature="getListOfActivities()[pri:68, instance:com.ripplestreet.AllGetApis.ActivityControllerGetApi@6ee4d9ab]" started-at="2023-08-18T15:25:39 IST" name="getListOfActivities" finished-at="2023-08-18T15:25:41 IST" duration-ms="1488" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getListOfActivities -->
        <test-method is-config="true" signature="BaseURI()[pri:0, instance:com.ripplestreet.AllGetApis.ActivityControllerGetApi@6ee4d9ab]" started-at="2023-08-18T15:25:39 IST" name="BaseURI" finished-at="2023-08-18T15:25:39 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BaseURI -->
        <test-method is-config="true" signature="StatusCode()[pri:0, instance:com.ripplestreet.AllGetApis.ActivityControllerGetApi@6ee4d9ab]" started-at="2023-08-18T15:25:41 IST" name="StatusCode" finished-at="2023-08-18T15:25:42 IST" duration-ms="710" status="FAIL">
          <exception class="java.lang.IllegalArgumentException">
            <message>
              <![CDATA[The maximum length of cell contents (text) is 32767 characters]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IllegalArgumentException: The maximum length of cell contents (text) is 32767 characters
at org.apache.poi.ss.usermodel.CellBase.checkLength(CellBase.java:292)
at org.apache.poi.ss.usermodel.CellBase.setCellValue(CellBase.java:273)
at com.ripplestreet.genricUtilities.genricUtilities.StatusCode(genricUtilities.java:282)
at jdk.internal.reflect.GeneratedMethodAccessor111.invoke(Unknown Source)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethodConsideringTimeout(MethodInvocationHelper.java:69)
at org.testng.internal.invokers.ConfigInvoker.invokeConfigurationMethod(ConfigInvoker.java:390)
at org.testng.internal.invokers.ConfigInvoker.invokeConfigurations(ConfigInvoker.java:325)
at org.testng.internal.invokers.TestInvoker.runConfigMethods(TestInvoker.java:810)
at org.testng.internal.invokers.TestInvoker.runAfterConfigurations(TestInvoker.java:779)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:755)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:227)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:957)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:200)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:848)
at org.testng.TestRunner.run(TestRunner.java:621)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:443)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:437)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:397)
at org.testng.SuiteRunner.run(SuiteRunner.java:336)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1280)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1200)
at org.testng.TestNG.runSuites(TestNG.java:1114)
at org.testng.TestNG.run(TestNG.java:1082)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalArgumentException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- StatusCode -->
        <test-method is-config="true" signature="BaseURI()[pri:0, instance:com.ripplestreet.AllGetApis.ActivityControllerGetApi@6ee4d9ab]" started-at="2023-08-18T15:25:42 IST" name="BaseURI" finished-at="2023-08-18T15:25:42 IST" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BaseURI -->
        <test-method signature="getActivity()[pri:69, instance:com.ripplestreet.AllGetApis.ActivityControllerGetApi@6ee4d9ab]" started-at="2023-08-18T15:25:42 IST" name="getActivity" finished-at="2023-08-18T15:25:42 IST" duration-ms="0" status="SKIP">
          <exception class="java.lang.IllegalArgumentException">
            <message>
              <![CDATA[The maximum length of cell contents (text) is 32767 characters]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IllegalArgumentException: The maximum length of cell contents (text) is 32767 characters
at org.apache.poi.ss.usermodel.CellBase.checkLength(CellBase.java:292)
at org.apache.poi.ss.usermodel.CellBase.setCellValue(CellBase.java:273)
at com.ripplestreet.genricUtilities.genricUtilities.StatusCode(genricUtilities.java:282)
at jdk.internal.reflect.GeneratedMethodAccessor111.invoke(Unknown Source)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethodConsideringTimeout(MethodInvocationHelper.java:69)
at org.testng.internal.invokers.ConfigInvoker.invokeConfigurationMethod(ConfigInvoker.java:390)
at org.testng.internal.invokers.ConfigInvoker.invokeConfigurations(ConfigInvoker.java:325)
at org.testng.internal.invokers.TestInvoker.runConfigMethods(TestInvoker.java:810)
at org.testng.internal.invokers.TestInvoker.runAfterConfigurations(TestInvoker.java:779)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:755)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:227)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:957)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:200)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:848)
at org.testng.TestRunner.run(TestRunner.java:621)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:443)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:437)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:397)
at org.testng.SuiteRunner.run(SuiteRunner.java:336)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1280)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1200)
at org.testng.TestNG.runSuites(TestNG.java:1114)
at org.testng.TestNG.run(TestNG.java:1082)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalArgumentException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getActivity -->
        <test-method is-config="true" signature="StatusCode()[pri:0, instance:com.ripplestreet.AllGetApis.ActivityControllerGetApi@6ee4d9ab]" started-at="2023-08-18T15:25:42 IST" name="StatusCode" finished-at="2023-08-18T15:25:42 IST" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- StatusCode -->
      </class> <!-- com.ripplestreet.AllGetApis.ActivityControllerGetApi -->
      <class name="com.ripplestreet.AllGetApis.DraftEventControllerGetApi">
        <test-method signature="getListOfEventsBycampaignId()[pri:155, instance:com.ripplestreet.AllGetApis.DraftEventControllerGetApi@7b8b43c7]" started-at="2023-08-18T15:28:43 IST" name="getListOfEventsBycampaignId" finished-at="2023-08-18T15:28:45 IST" duration-ms="1407" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getListOfEventsBycampaignId -->
        <test-method is-config="true" signature="BaseURI()[pri:0, instance:com.ripplestreet.AllGetApis.DraftEventControllerGetApi@7b8b43c7]" started-at="2023-08-18T15:28:43 IST" name="BaseURI" finished-at="2023-08-18T15:28:43 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BaseURI -->
        <test-method is-config="true" signature="StatusCode()[pri:0, instance:com.ripplestreet.AllGetApis.DraftEventControllerGetApi@7b8b43c7]" started-at="2023-08-18T15:28:45 IST" name="StatusCode" finished-at="2023-08-18T15:28:45 IST" duration-ms="140" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- StatusCode -->
        <test-method signature="getDraftEventByEventId()[pri:156, instance:com.ripplestreet.AllGetApis.DraftEventControllerGetApi@7b8b43c7]" started-at="2023-08-18T15:28:45 IST" name="getDraftEventByEventId" finished-at="2023-08-18T15:28:46 IST" duration-ms="1615" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getDraftEventByEventId -->
        <test-method is-config="true" signature="BaseURI()[pri:0, instance:com.ripplestreet.AllGetApis.DraftEventControllerGetApi@7b8b43c7]" started-at="2023-08-18T15:28:45 IST" name="BaseURI" finished-at="2023-08-18T15:28:45 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BaseURI -->
        <test-method is-config="true" signature="StatusCode()[pri:0, instance:com.ripplestreet.AllGetApis.DraftEventControllerGetApi@7b8b43c7]" started-at="2023-08-18T15:28:46 IST" name="StatusCode" finished-at="2023-08-18T15:28:47 IST" duration-ms="102" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- StatusCode -->
      </class> <!-- com.ripplestreet.AllGetApis.DraftEventControllerGetApi -->
      <class name="com.ripplestreet.AllGetApis.ReviewControllerGetApi">
        <test-method signature="getExternalReview()[pri:46, instance:com.ripplestreet.AllGetApis.ReviewControllerGetApi@1fb19a0]" started-at="2023-08-18T15:25:34 IST" name="getExternalReview" finished-at="2023-08-18T15:25:36 IST" duration-ms="1549" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getExternalReview -->
        <test-method is-config="true" signature="BaseURI()[pri:0, instance:com.ripplestreet.AllGetApis.ReviewControllerGetApi@1fb19a0]" started-at="2023-08-18T15:25:34 IST" name="BaseURI" finished-at="2023-08-18T15:25:34 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BaseURI -->
        <test-method is-config="true" signature="StatusCode()[pri:0, instance:com.ripplestreet.AllGetApis.ReviewControllerGetApi@1fb19a0]" started-at="2023-08-18T15:25:36 IST" name="StatusCode" finished-at="2023-08-18T15:25:36 IST" duration-ms="121" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- StatusCode -->
        <test-method signature="getReviewsByTaskId()[pri:47, instance:com.ripplestreet.AllGetApis.ReviewControllerGetApi@1fb19a0]" started-at="2023-08-18T15:25:36 IST" name="getReviewsByTaskId" finished-at="2023-08-18T15:25:38 IST" duration-ms="1573" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getReviewsByTaskId -->
        <test-method is-config="true" signature="BaseURI()[pri:0, instance:com.ripplestreet.AllGetApis.ReviewControllerGetApi@1fb19a0]" started-at="2023-08-18T15:25:36 IST" name="BaseURI" finished-at="2023-08-18T15:25:36 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BaseURI -->
        <test-method is-config="true" signature="StatusCode()[pri:0, instance:com.ripplestreet.AllGetApis.ReviewControllerGetApi@1fb19a0]" started-at="2023-08-18T15:25:38 IST" name="StatusCode" finished-at="2023-08-18T15:25:38 IST" duration-ms="113" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- StatusCode -->
        <test-method signature="getReview()[pri:48, instance:com.ripplestreet.AllGetApis.ReviewControllerGetApi@1fb19a0]" started-at="2023-08-18T15:25:38 IST" name="getReview" finished-at="2023-08-18T15:25:39 IST" duration-ms="1555" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getReview -->
        <test-method is-config="true" signature="BaseURI()[pri:0, instance:com.ripplestreet.AllGetApis.ReviewControllerGetApi@1fb19a0]" started-at="2023-08-18T15:25:38 IST" name="BaseURI" finished-at="2023-08-18T15:25:38 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BaseURI -->
        <test-method is-config="true" signature="StatusCode()[pri:0, instance:com.ripplestreet.AllGetApis.ReviewControllerGetApi@1fb19a0]" started-at="2023-08-18T15:25:39 IST" name="StatusCode" finished-at="2023-08-18T15:25:39 IST" duration-ms="118" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- StatusCode -->
      </class> <!-- com.ripplestreet.AllGetApis.ReviewControllerGetApi -->
      <class name="com.ripplestreet.AllGetApis.AssetControllerGetApi">
        <test-method signature="getAssetById()[pri:143, instance:com.ripplestreet.AllGetApis.AssetControllerGetApi@479ceda0]" started-at="2023-08-18T15:29:51 IST" name="getAssetById" finished-at="2023-08-18T15:29:53 IST" duration-ms="1639" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getAssetById -->
        <test-method is-config="true" signature="BaseURI()[pri:0, instance:com.ripplestreet.AllGetApis.AssetControllerGetApi@479ceda0]" started-at="2023-08-18T15:29:51 IST" name="BaseURI" finished-at="2023-08-18T15:29:51 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BaseURI -->
        <test-method is-config="true" signature="StatusCode()[pri:0, instance:com.ripplestreet.AllGetApis.AssetControllerGetApi@479ceda0]" started-at="2023-08-18T15:29:53 IST" name="StatusCode" finished-at="2023-08-18T15:29:53 IST" duration-ms="139" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- StatusCode -->
      </class> <!-- com.ripplestreet.AllGetApis.AssetControllerGetApi -->
      <class name="com.ripplestreet.AllGetApis.RecipientsController">
        <test-method signature="GetAllRecipientForCampaignId()[pri:140, instance:com.ripplestreet.AllGetApis.RecipientsController@44c73c26]" started-at="2023-08-18T15:28:52 IST" name="GetAllRecipientForCampaignId" finished-at="2023-08-18T15:28:53 IST" duration-ms="1435" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GetAllRecipientForCampaignId -->
        <test-method is-config="true" signature="BaseURI()[pri:0, instance:com.ripplestreet.AllGetApis.RecipientsController@44c73c26]" started-at="2023-08-18T15:28:52 IST" name="BaseURI" finished-at="2023-08-18T15:28:52 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BaseURI -->
        <test-method is-config="true" signature="StatusCode()[pri:0, instance:com.ripplestreet.AllGetApis.RecipientsController@44c73c26]" started-at="2023-08-18T15:28:53 IST" name="StatusCode" finished-at="2023-08-18T15:28:53 IST" duration-ms="104" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- StatusCode -->
      </class> <!-- com.ripplestreet.AllGetApis.RecipientsController -->
      <class name="com.ripplestreet.AllGetApis.ApplicationControllerGetApi">
        <test-method is-config="true" signature="BaseURI()[pri:0, instance:com.ripplestreet.AllGetApis.ApplicationControllerGetApi@3370f42]" started-at="2023-08-18T15:26:42 IST" name="BaseURI" finished-at="2023-08-18T15:26:42 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BaseURI -->
        <test-method signature="getAllApplications()[pri:19, instance:com.ripplestreet.AllGetApis.ApplicationControllerGetApi@3370f42]" started-at="2023-08-18T15:26:42 IST" name="getAllApplications" finished-at="2023-08-18T15:26:44 IST" duration-ms="1525" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getAllApplications -->
        <test-method is-config="true" signature="StatusCode()[pri:0, instance:com.ripplestreet.AllGetApis.ApplicationControllerGetApi@3370f42]" started-at="2023-08-18T15:26:44 IST" name="StatusCode" finished-at="2023-08-18T15:26:44 IST" duration-ms="132" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- StatusCode -->
      </class> <!-- com.ripplestreet.AllGetApis.ApplicationControllerGetApi -->
      <class name="com.ripplestreet.AllGetApis.UgcControllerGetApi">
        <test-method signature="downloadAsset()[pri:0, instance:com.ripplestreet.AllGetApis.UgcControllerGetApi@9573584]" started-at="2023-08-18T15:26:24 IST" name="downloadAsset" finished-at="2023-08-18T15:26:26 IST" duration-ms="1910" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- downloadAsset -->
        <test-method is-config="true" signature="BaseURI()[pri:0, instance:com.ripplestreet.AllGetApis.UgcControllerGetApi@9573584]" started-at="2023-08-18T15:26:24 IST" name="BaseURI" finished-at="2023-08-18T15:26:24 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BaseURI -->
        <test-method is-config="true" signature="StatusCode()[pri:0, instance:com.ripplestreet.AllGetApis.UgcControllerGetApi@9573584]" started-at="2023-08-18T15:26:26 IST" name="StatusCode" finished-at="2023-08-18T15:26:34 IST" duration-ms="8726" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- StatusCode -->
        <test-method signature="getUgcDetailsByTaskId()[pri:0, instance:com.ripplestreet.AllGetApis.UgcControllerGetApi@9573584]" started-at="2023-08-18T15:26:34 IST" name="getUgcDetailsByTaskId" finished-at="2023-08-18T15:26:36 IST" duration-ms="1484" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getUgcDetailsByTaskId -->
        <test-method is-config="true" signature="BaseURI()[pri:0, instance:com.ripplestreet.AllGetApis.UgcControllerGetApi@9573584]" started-at="2023-08-18T15:26:34 IST" name="BaseURI" finished-at="2023-08-18T15:26:34 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BaseURI -->
        <test-method is-config="true" signature="StatusCode()[pri:0, instance:com.ripplestreet.AllGetApis.UgcControllerGetApi@9573584]" started-at="2023-08-18T15:26:36 IST" name="StatusCode" finished-at="2023-08-18T15:26:36 IST" duration-ms="122" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- StatusCode -->
        <test-method signature="downloadAssetByURL()[pri:51, instance:com.ripplestreet.AllGetApis.UgcControllerGetApi@9573584]" started-at="2023-08-18T15:26:36 IST" name="downloadAssetByURL" finished-at="2023-08-18T15:26:37 IST" duration-ms="1540" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- downloadAssetByURL -->
        <test-method is-config="true" signature="BaseURI()[pri:0, instance:com.ripplestreet.AllGetApis.UgcControllerGetApi@9573584]" started-at="2023-08-18T15:26:36 IST" name="BaseURI" finished-at="2023-08-18T15:26:36 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BaseURI -->
        <test-method is-config="true" signature="StatusCode()[pri:0, instance:com.ripplestreet.AllGetApis.UgcControllerGetApi@9573584]" started-at="2023-08-18T15:26:37 IST" name="StatusCode" finished-at="2023-08-18T15:26:37 IST" duration-ms="107" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- StatusCode -->
        <test-method is-config="true" signature="BaseURI()[pri:0, instance:com.ripplestreet.AllGetApis.UgcControllerGetApi@9573584]" started-at="2023-08-18T15:26:37 IST" name="BaseURI" finished-at="2023-08-18T15:26:37 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BaseURI -->
        <test-method signature="getImageRecognitionResponse()[pri:52, instance:com.ripplestreet.AllGetApis.UgcControllerGetApi@9573584]" started-at="2023-08-18T15:26:38 IST" name="getImageRecognitionResponse" finished-at="2023-08-18T15:26:39 IST" duration-ms="1530" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getImageRecognitionResponse -->
        <test-method is-config="true" signature="StatusCode()[pri:0, instance:com.ripplestreet.AllGetApis.UgcControllerGetApi@9573584]" started-at="2023-08-18T15:26:39 IST" name="StatusCode" finished-at="2023-08-18T15:26:39 IST" duration-ms="141" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- StatusCode -->
        <test-method signature="getUgcDetailsById()[pri:53, instance:com.ripplestreet.AllGetApis.UgcControllerGetApi@9573584]" started-at="2023-08-18T15:26:39 IST" name="getUgcDetailsById" finished-at="2023-08-18T15:26:41 IST" duration-ms="1397" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getUgcDetailsById -->
        <test-method is-config="true" signature="BaseURI()[pri:0, instance:com.ripplestreet.AllGetApis.UgcControllerGetApi@9573584]" started-at="2023-08-18T15:26:39 IST" name="BaseURI" finished-at="2023-08-18T15:26:39 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BaseURI -->
        <test-method is-config="true" signature="StatusCode()[pri:0, instance:com.ripplestreet.AllGetApis.UgcControllerGetApi@9573584]" started-at="2023-08-18T15:26:41 IST" name="StatusCode" finished-at="2023-08-18T15:26:41 IST" duration-ms="121" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- StatusCode -->
        <test-method is-config="true" signature="BaseURI()[pri:0, instance:com.ripplestreet.AllGetApis.UgcControllerGetApi@9573584]" started-at="2023-08-18T15:26:41 IST" name="BaseURI" finished-at="2023-08-18T15:26:41 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BaseURI -->
        <test-method signature="getUserAsset()[pri:54, instance:com.ripplestreet.AllGetApis.UgcControllerGetApi@9573584]" started-at="2023-08-18T15:26:41 IST" name="getUserAsset" finished-at="2023-08-18T15:26:42 IST" duration-ms="1509" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getUserAsset -->
        <test-method is-config="true" signature="StatusCode()[pri:0, instance:com.ripplestreet.AllGetApis.UgcControllerGetApi@9573584]" started-at="2023-08-18T15:26:42 IST" name="StatusCode" finished-at="2023-08-18T15:26:42 IST" duration-ms="112" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- StatusCode -->
      </class> <!-- com.ripplestreet.AllGetApis.UgcControllerGetApi -->
      <class name="com.ripplestreet.AllGetApis.userFamilyControllerGetApi">
        <test-method signature="getUserChildern()[pri:42, instance:com.ripplestreet.AllGetApis.userFamilyControllerGetApi@60b4beb4]" started-at="2023-08-18T15:28:55 IST" name="getUserChildern" finished-at="2023-08-18T15:28:56 IST" duration-ms="1510" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getUserChildern -->
        <test-method is-config="true" signature="BaseURI()[pri:0, instance:com.ripplestreet.AllGetApis.userFamilyControllerGetApi@60b4beb4]" started-at="2023-08-18T15:28:55 IST" name="BaseURI" finished-at="2023-08-18T15:28:55 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BaseURI -->
        <test-method is-config="true" signature="StatusCode()[pri:0, instance:com.ripplestreet.AllGetApis.userFamilyControllerGetApi@60b4beb4]" started-at="2023-08-18T15:28:56 IST" name="StatusCode" finished-at="2023-08-18T15:28:56 IST" duration-ms="94" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- StatusCode -->
        <test-method signature="getAllPetTypes()[pri:43, instance:com.ripplestreet.AllGetApis.userFamilyControllerGetApi@60b4beb4]" started-at="2023-08-18T15:28:56 IST" name="getAllPetTypes" finished-at="2023-08-18T15:28:58 IST" duration-ms="1646" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getAllPetTypes -->
        <test-method is-config="true" signature="BaseURI()[pri:0, instance:com.ripplestreet.AllGetApis.userFamilyControllerGetApi@60b4beb4]" started-at="2023-08-18T15:28:56 IST" name="BaseURI" finished-at="2023-08-18T15:28:56 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BaseURI -->
        <test-method is-config="true" signature="StatusCode()[pri:0, instance:com.ripplestreet.AllGetApis.userFamilyControllerGetApi@60b4beb4]" started-at="2023-08-18T15:28:58 IST" name="StatusCode" finished-at="2023-08-18T15:28:58 IST" duration-ms="120" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- StatusCode -->
        <test-method signature="getAllPetsForUser()[pri:44, instance:com.ripplestreet.AllGetApis.userFamilyControllerGetApi@60b4beb4]" started-at="2023-08-18T15:28:58 IST" name="getAllPetsForUser" finished-at="2023-08-18T15:28:59 IST" duration-ms="1518" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getAllPetsForUser -->
        <test-method is-config="true" signature="BaseURI()[pri:0, instance:com.ripplestreet.AllGetApis.userFamilyControllerGetApi@60b4beb4]" started-at="2023-08-18T15:28:58 IST" name="BaseURI" finished-at="2023-08-18T15:28:58 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BaseURI -->
        <test-method is-config="true" signature="StatusCode()[pri:0, instance:com.ripplestreet.AllGetApis.userFamilyControllerGetApi@60b4beb4]" started-at="2023-08-18T15:28:59 IST" name="StatusCode" finished-at="2023-08-18T15:29:00 IST" duration-ms="122" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- StatusCode -->
      </class> <!-- com.ripplestreet.AllGetApis.userFamilyControllerGetApi -->
      <class name="com.ripplestreet.AllGetApis.ConfigurationController">
        <test-method signature="getAllconfigs()[pri:146, instance:com.ripplestreet.AllGetApis.ConfigurationController@13d4992d]" started-at="2023-08-18T15:26:05 IST" name="getAllconfigs" finished-at="2023-08-18T15:26:07 IST" duration-ms="1553" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getAllconfigs -->
        <test-method is-config="true" signature="BaseURI()[pri:0, instance:com.ripplestreet.AllGetApis.ConfigurationController@13d4992d]" started-at="2023-08-18T15:26:05 IST" name="BaseURI" finished-at="2023-08-18T15:26:05 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BaseURI -->
        <test-method is-config="true" signature="StatusCode()[pri:0, instance:com.ripplestreet.AllGetApis.ConfigurationController@13d4992d]" started-at="2023-08-18T15:26:07 IST" name="StatusCode" finished-at="2023-08-18T15:26:07 IST" duration-ms="101" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- StatusCode -->
      </class> <!-- com.ripplestreet.AllGetApis.ConfigurationController -->
      <class name="com.ripplestreet.AllGetApis.gameOptionControllerGetApi">
        <test-method signature="getGameOptionBySlug()[pri:96, instance:com.ripplestreet.AllGetApis.gameOptionControllerGetApi@68d279ec]" started-at="2023-08-18T15:27:58 IST" name="getGameOptionBySlug" finished-at="2023-08-18T15:27:59 IST" duration-ms="1508" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getGameOptionBySlug -->
        <test-method is-config="true" signature="BaseURI()[pri:0, instance:com.ripplestreet.AllGetApis.gameOptionControllerGetApi@68d279ec]" started-at="2023-08-18T15:27:58 IST" name="BaseURI" finished-at="2023-08-18T15:27:58 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BaseURI -->
        <test-method is-config="true" signature="StatusCode()[pri:0, instance:com.ripplestreet.AllGetApis.gameOptionControllerGetApi@68d279ec]" started-at="2023-08-18T15:27:59 IST" name="StatusCode" finished-at="2023-08-18T15:27:59 IST" duration-ms="149" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- StatusCode -->
        <test-method is-config="true" signature="BaseURI()[pri:0, instance:com.ripplestreet.AllGetApis.gameOptionControllerGetApi@68d279ec]" started-at="2023-08-18T15:27:59 IST" name="BaseURI" finished-at="2023-08-18T15:27:59 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BaseURI -->
        <test-method signature="getListOfOptionsByGameId()[pri:97, instance:com.ripplestreet.AllGetApis.gameOptionControllerGetApi@68d279ec]" started-at="2023-08-18T15:27:59 IST" name="getListOfOptionsByGameId" finished-at="2023-08-18T15:28:01 IST" duration-ms="1486" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getListOfOptionsByGameId -->
        <test-method is-config="true" signature="StatusCode()[pri:0, instance:com.ripplestreet.AllGetApis.gameOptionControllerGetApi@68d279ec]" started-at="2023-08-18T15:28:01 IST" name="StatusCode" finished-at="2023-08-18T15:28:01 IST" duration-ms="96" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- StatusCode -->
      </class> <!-- com.ripplestreet.AllGetApis.gameOptionControllerGetApi -->
      <class name="com.ripplestreet.AllGetApis.RewardDeliveryControllerGetApi">
        <test-method is-config="true" signature="BaseURI()[pri:0, instance:com.ripplestreet.AllGetApis.RewardDeliveryControllerGetApi@5026735c]" started-at="2023-08-18T15:25:01 IST" name="BaseURI" finished-at="2023-08-18T15:25:01 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BaseURI -->
        <test-method signature="getDeliverySystemAttributeValue()[pri:117, instance:com.ripplestreet.AllGetApis.RewardDeliveryControllerGetApi@5026735c]" started-at="2023-08-18T15:25:01 IST" name="getDeliverySystemAttributeValue" finished-at="2023-08-18T15:25:03 IST" duration-ms="1587" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getDeliverySystemAttributeValue -->
        <test-method is-config="true" signature="StatusCode()[pri:0, instance:com.ripplestreet.AllGetApis.RewardDeliveryControllerGetApi@5026735c]" started-at="2023-08-18T15:25:03 IST" name="StatusCode" finished-at="2023-08-18T15:25:03 IST" duration-ms="128" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- StatusCode -->
        <test-method signature="getRewardDeleveries()[pri:118, instance:com.ripplestreet.AllGetApis.RewardDeliveryControllerGetApi@5026735c]" started-at="2023-08-18T15:25:03 IST" name="getRewardDeleveries" finished-at="2023-08-18T15:25:04 IST" duration-ms="1509" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getRewardDeleveries -->
        <test-method is-config="true" signature="BaseURI()[pri:0, instance:com.ripplestreet.AllGetApis.RewardDeliveryControllerGetApi@5026735c]" started-at="2023-08-18T15:25:03 IST" name="BaseURI" finished-at="2023-08-18T15:25:03 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BaseURI -->
        <test-method is-config="true" signature="StatusCode()[pri:0, instance:com.ripplestreet.AllGetApis.RewardDeliveryControllerGetApi@5026735c]" started-at="2023-08-18T15:25:04 IST" name="StatusCode" finished-at="2023-08-18T15:25:05 IST" duration-ms="105" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- StatusCode -->
        <test-method is-config="true" signature="BaseURI()[pri:0, instance:com.ripplestreet.AllGetApis.RewardDeliveryControllerGetApi@5026735c]" started-at="2023-08-18T15:25:05 IST" name="BaseURI" finished-at="2023-08-18T15:25:05 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BaseURI -->
        <test-method signature="getRewardDeleverie()[pri:119, instance:com.ripplestreet.AllGetApis.RewardDeliveryControllerGetApi@5026735c]" started-at="2023-08-18T15:25:05 IST" name="getRewardDeleverie" finished-at="2023-08-18T15:25:06 IST" duration-ms="1529" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getRewardDeleverie -->
        <test-method is-config="true" signature="StatusCode()[pri:0, instance:com.ripplestreet.AllGetApis.RewardDeliveryControllerGetApi@5026735c]" started-at="2023-08-18T15:25:06 IST" name="StatusCode" finished-at="2023-08-18T15:25:06 IST" duration-ms="127" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- StatusCode -->
        <test-method signature="getAllRewardDeliveriesByPersonId()[pri:120, instance:com.ripplestreet.AllGetApis.RewardDeliveryControllerGetApi@5026735c]" started-at="2023-08-18T15:25:06 IST" name="getAllRewardDeliveriesByPersonId" finished-at="2023-08-18T15:25:08 IST" duration-ms="1563" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getAllRewardDeliveriesByPersonId -->
        <test-method is-config="true" signature="BaseURI()[pri:0, instance:com.ripplestreet.AllGetApis.RewardDeliveryControllerGetApi@5026735c]" started-at="2023-08-18T15:25:06 IST" name="BaseURI" finished-at="2023-08-18T15:25:06 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BaseURI -->
        <test-method is-config="true" signature="StatusCode()[pri:0, instance:com.ripplestreet.AllGetApis.RewardDeliveryControllerGetApi@5026735c]" started-at="2023-08-18T15:25:08 IST" name="StatusCode" finished-at="2023-08-18T15:25:08 IST" duration-ms="112" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- StatusCode -->
      </class> <!-- com.ripplestreet.AllGetApis.RewardDeliveryControllerGetApi -->
      <class name="com.ripplestreet.AllGetApis.OptInsControllerGetApi">
        <test-method signature="getListOptInByEventId()[pri:0, instance:com.ripplestreet.AllGetApis.OptInsControllerGetApi@20435c40]" started-at="2023-08-18T15:29:41 IST" name="getListOptInByEventId" finished-at="2023-08-18T15:29:43 IST" duration-ms="1928" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getListOptInByEventId -->
        <test-method is-config="true" signature="BaseURI()[pri:0, instance:com.ripplestreet.AllGetApis.OptInsControllerGetApi@20435c40]" started-at="2023-08-18T15:29:41 IST" name="BaseURI" finished-at="2023-08-18T15:29:41 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BaseURI -->
        <test-method is-config="true" signature="StatusCode()[pri:0, instance:com.ripplestreet.AllGetApis.OptInsControllerGetApi@20435c40]" started-at="2023-08-18T15:29:43 IST" name="StatusCode" finished-at="2023-08-18T15:29:43 IST" duration-ms="123" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- StatusCode -->
        <test-method signature="GetRewardCountByEventIdAndPreferenceforPerson()[pri:105, instance:com.ripplestreet.AllGetApis.OptInsControllerGetApi@20435c40]" started-at="2023-08-18T15:29:43 IST" name="GetRewardCountByEventIdAndPreferenceforPerson" finished-at="2023-08-18T15:29:46 IST" duration-ms="2128" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GetRewardCountByEventIdAndPreferenceforPerson -->
        <test-method is-config="true" signature="BaseURI()[pri:0, instance:com.ripplestreet.AllGetApis.OptInsControllerGetApi@20435c40]" started-at="2023-08-18T15:29:43 IST" name="BaseURI" finished-at="2023-08-18T15:29:43 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BaseURI -->
        <test-method is-config="true" signature="StatusCode()[pri:0, instance:com.ripplestreet.AllGetApis.OptInsControllerGetApi@20435c40]" started-at="2023-08-18T15:29:46 IST" name="StatusCode" finished-at="2023-08-18T15:29:46 IST" duration-ms="136" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- StatusCode -->
        <test-method is-config="true" signature="BaseURI()[pri:0, instance:com.ripplestreet.AllGetApis.OptInsControllerGetApi@20435c40]" started-at="2023-08-18T15:29:46 IST" name="BaseURI" finished-at="2023-08-18T15:29:46 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BaseURI -->
        <test-method signature="getOptInById()[pri:106, instance:com.ripplestreet.AllGetApis.OptInsControllerGetApi@20435c40]" started-at="2023-08-18T15:29:46 IST" name="getOptInById" finished-at="2023-08-18T15:29:48 IST" duration-ms="1811" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getOptInById -->
        <test-method is-config="true" signature="StatusCode()[pri:0, instance:com.ripplestreet.AllGetApis.OptInsControllerGetApi@20435c40]" started-at="2023-08-18T15:29:48 IST" name="StatusCode" finished-at="2023-08-18T15:29:48 IST" duration-ms="102" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- StatusCode -->
      </class> <!-- com.ripplestreet.AllGetApis.OptInsControllerGetApi -->
      <class name="com.ripplestreet.AllGetApis.TargetsControllerGetApi">
        <test-method signature="getAlltargets()[pri:182, instance:com.ripplestreet.AllGetApis.TargetsControllerGetApi@71e693fa]" started-at="2023-08-18T15:28:28 IST" name="getAlltargets" finished-at="2023-08-18T15:28:30 IST" duration-ms="1512" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getAlltargets -->
        <test-method is-config="true" signature="BaseURI()[pri:0, instance:com.ripplestreet.AllGetApis.TargetsControllerGetApi@71e693fa]" started-at="2023-08-18T15:28:28 IST" name="BaseURI" finished-at="2023-08-18T15:28:28 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BaseURI -->
        <test-method is-config="true" signature="StatusCode()[pri:0, instance:com.ripplestreet.AllGetApis.TargetsControllerGetApi@71e693fa]" started-at="2023-08-18T15:28:30 IST" name="StatusCode" finished-at="2023-08-18T15:28:30 IST" duration-ms="148" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- StatusCode -->
      </class> <!-- com.ripplestreet.AllGetApis.TargetsControllerGetApi -->
      <class name="com.ripplestreet.AllGetApis.MobileCommunityControllerGetApi">
        <test-method signature="getAllEventsByUserAndParticipantTypeApplicant()[pri:36, instance:com.ripplestreet.AllGetApis.MobileCommunityControllerGetApi@732d0d24]" started-at="2023-08-18T15:25:31 IST" name="getAllEventsByUserAndParticipantTypeApplicant" finished-at="2023-08-18T15:25:33 IST" duration-ms="1522" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getAllEventsByUserAndParticipantTypeApplicant -->
        <test-method is-config="true" signature="BaseURI()[pri:0, instance:com.ripplestreet.AllGetApis.MobileCommunityControllerGetApi@732d0d24]" started-at="2023-08-18T15:25:31 IST" name="BaseURI" finished-at="2023-08-18T15:25:31 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BaseURI -->
        <test-method is-config="true" signature="StatusCode()[pri:0, instance:com.ripplestreet.AllGetApis.MobileCommunityControllerGetApi@732d0d24]" started-at="2023-08-18T15:25:33 IST" name="StatusCode" finished-at="2023-08-18T15:25:33 IST" duration-ms="114" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- StatusCode -->
        <test-method signature="getActiveEventsDetailForUser()[pri:37, instance:com.ripplestreet.AllGetApis.MobileCommunityControllerGetApi@732d0d24]" started-at="2023-08-18T15:25:33 IST" name="getActiveEventsDetailForUser" finished-at="2023-08-18T15:25:34 IST" duration-ms="1519" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getActiveEventsDetailForUser -->
        <test-method is-config="true" signature="BaseURI()[pri:0, instance:com.ripplestreet.AllGetApis.MobileCommunityControllerGetApi@732d0d24]" started-at="2023-08-18T15:25:33 IST" name="BaseURI" finished-at="2023-08-18T15:25:33 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BaseURI -->
        <test-method is-config="true" signature="StatusCode()[pri:0, instance:com.ripplestreet.AllGetApis.MobileCommunityControllerGetApi@732d0d24]" started-at="2023-08-18T15:25:34 IST" name="StatusCode" finished-at="2023-08-18T15:25:34 IST" duration-ms="131" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- StatusCode -->
      </class> <!-- com.ripplestreet.AllGetApis.MobileCommunityControllerGetApi -->
      <class name="com.ripplestreet.AllGetApis.CommunityControllerGetApi">
        <test-method signature="getAllAddressEntriesByPersonId()[pri:23, instance:com.ripplestreet.AllGetApis.CommunityControllerGetApi@2141a12]" started-at="2023-08-18T15:29:03 IST" name="getAllAddressEntriesByPersonId" finished-at="2023-08-18T15:29:04 IST" duration-ms="1490" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getAllAddressEntriesByPersonId -->
        <test-method is-config="true" signature="BaseURI()[pri:0, instance:com.ripplestreet.AllGetApis.CommunityControllerGetApi@2141a12]" started-at="2023-08-18T15:29:03 IST" name="BaseURI" finished-at="2023-08-18T15:29:03 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BaseURI -->
        <test-method is-config="true" signature="StatusCode()[pri:0, instance:com.ripplestreet.AllGetApis.CommunityControllerGetApi@2141a12]" started-at="2023-08-18T15:29:04 IST" name="StatusCode" finished-at="2023-08-18T15:29:04 IST" duration-ms="110" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- StatusCode -->
        <test-method signature="getAllEventsByUserAndParticipantType()[pri:24, instance:com.ripplestreet.AllGetApis.CommunityControllerGetApi@2141a12]" started-at="2023-08-18T15:29:04 IST" name="getAllEventsByUserAndParticipantType" finished-at="2023-08-18T15:29:06 IST" duration-ms="1527" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getAllEventsByUserAndParticipantType -->
        <test-method is-config="true" signature="BaseURI()[pri:0, instance:com.ripplestreet.AllGetApis.CommunityControllerGetApi@2141a12]" started-at="2023-08-18T15:29:04 IST" name="BaseURI" finished-at="2023-08-18T15:29:04 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BaseURI -->
        <test-method is-config="true" signature="StatusCode()[pri:0, instance:com.ripplestreet.AllGetApis.CommunityControllerGetApi@2141a12]" started-at="2023-08-18T15:29:06 IST" name="StatusCode" finished-at="2023-08-18T15:29:06 IST" duration-ms="112" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- StatusCode -->
        <test-method signature="getAllUsersByEventAndParticipantType()[pri:25, instance:com.ripplestreet.AllGetApis.CommunityControllerGetApi@2141a12]" started-at="2023-08-18T15:29:06 IST" name="getAllUsersByEventAndParticipantType" finished-at="2023-08-18T15:29:08 IST" duration-ms="1525" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getAllUsersByEventAndParticipantType -->
        <test-method is-config="true" signature="BaseURI()[pri:0, instance:com.ripplestreet.AllGetApis.CommunityControllerGetApi@2141a12]" started-at="2023-08-18T15:29:06 IST" name="BaseURI" finished-at="2023-08-18T15:29:06 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BaseURI -->
        <test-method is-config="true" signature="StatusCode()[pri:0, instance:com.ripplestreet.AllGetApis.CommunityControllerGetApi@2141a12]" started-at="2023-08-18T15:29:08 IST" name="StatusCode" finished-at="2023-08-18T15:29:08 IST" duration-ms="107" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- StatusCode -->
        <test-method signature="GettingDetailOfHeadHostByPersonId()[pri:26, instance:com.ripplestreet.AllGetApis.CommunityControllerGetApi@2141a12]" started-at="2023-08-18T15:29:08 IST" name="GettingDetailOfHeadHostByPersonId" finished-at="2023-08-18T15:29:09 IST" duration-ms="1528" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GettingDetailOfHeadHostByPersonId -->
        <test-method is-config="true" signature="BaseURI()[pri:0, instance:com.ripplestreet.AllGetApis.CommunityControllerGetApi@2141a12]" started-at="2023-08-18T15:29:08 IST" name="BaseURI" finished-at="2023-08-18T15:29:08 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BaseURI -->
        <test-method is-config="true" signature="StatusCode()[pri:0, instance:com.ripplestreet.AllGetApis.CommunityControllerGetApi@2141a12]" started-at="2023-08-18T15:29:09 IST" name="StatusCode" finished-at="2023-08-18T15:29:09 IST" duration-ms="142" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- StatusCode -->
        <test-method signature="getUserEventParticipationBit()[pri:27, instance:com.ripplestreet.AllGetApis.CommunityControllerGetApi@2141a12]" started-at="2023-08-18T15:29:09 IST" name="getUserEventParticipationBit" finished-at="2023-08-18T15:29:11 IST" duration-ms="1478" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getUserEventParticipationBit -->
        <test-method is-config="true" signature="BaseURI()[pri:0, instance:com.ripplestreet.AllGetApis.CommunityControllerGetApi@2141a12]" started-at="2023-08-18T15:29:09 IST" name="BaseURI" finished-at="2023-08-18T15:29:09 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BaseURI -->
        <test-method is-config="true" signature="StatusCode()[pri:0, instance:com.ripplestreet.AllGetApis.CommunityControllerGetApi@2141a12]" started-at="2023-08-18T15:29:11 IST" name="StatusCode" finished-at="2023-08-18T15:29:11 IST" duration-ms="100" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- StatusCode -->
        <test-method signature="getUserListByFilters()[pri:28, instance:com.ripplestreet.AllGetApis.CommunityControllerGetApi@2141a12]" started-at="2023-08-18T15:29:11 IST" name="getUserListByFilters" finished-at="2023-08-18T15:29:27 IST" duration-ms="15687" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getUserListByFilters -->
        <test-method is-config="true" signature="BaseURI()[pri:0, instance:com.ripplestreet.AllGetApis.CommunityControllerGetApi@2141a12]" started-at="2023-08-18T15:29:11 IST" name="BaseURI" finished-at="2023-08-18T15:29:11 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BaseURI -->
        <test-method is-config="true" signature="StatusCode()[pri:0, instance:com.ripplestreet.AllGetApis.CommunityControllerGetApi@2141a12]" started-at="2023-08-18T15:29:27 IST" name="StatusCode" finished-at="2023-08-18T15:29:27 IST" duration-ms="100" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- StatusCode -->
        <test-method signature="getUserParticipationBits()[pri:29, instance:com.ripplestreet.AllGetApis.CommunityControllerGetApi@2141a12]" started-at="2023-08-18T15:29:27 IST" name="getUserParticipationBits" finished-at="2023-08-18T15:29:28 IST" duration-ms="1535" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getUserParticipationBits -->
        <test-method is-config="true" signature="BaseURI()[pri:0, instance:com.ripplestreet.AllGetApis.CommunityControllerGetApi@2141a12]" started-at="2023-08-18T15:29:27 IST" name="BaseURI" finished-at="2023-08-18T15:29:27 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BaseURI -->
        <test-method is-config="true" signature="StatusCode()[pri:0, instance:com.ripplestreet.AllGetApis.CommunityControllerGetApi@2141a12]" started-at="2023-08-18T15:29:28 IST" name="StatusCode" finished-at="2023-08-18T15:29:28 IST" duration-ms="113" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- StatusCode -->
        <test-method is-config="true" signature="BaseURI()[pri:0, instance:com.ripplestreet.AllGetApis.CommunityControllerGetApi@2141a12]" started-at="2023-08-18T15:29:28 IST" name="BaseURI" finished-at="2023-08-18T15:29:28 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BaseURI -->
        <test-method signature="getUserProfile()[pri:30, instance:com.ripplestreet.AllGetApis.CommunityControllerGetApi@2141a12]" started-at="2023-08-18T15:29:28 IST" name="getUserProfile" finished-at="2023-08-18T15:29:30 IST" duration-ms="1525" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getUserProfile -->
        <test-method is-config="true" signature="StatusCode()[pri:0, instance:com.ripplestreet.AllGetApis.CommunityControllerGetApi@2141a12]" started-at="2023-08-18T15:29:30 IST" name="StatusCode" finished-at="2023-08-18T15:29:30 IST" duration-ms="136" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- StatusCode -->
        <test-method is-config="true" signature="BaseURI()[pri:0, instance:com.ripplestreet.AllGetApis.CommunityControllerGetApi@2141a12]" started-at="2023-08-18T15:29:30 IST" name="BaseURI" finished-at="2023-08-18T15:29:30 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BaseURI -->
        <test-method signature="getUserDetails()[pri:31, instance:com.ripplestreet.AllGetApis.CommunityControllerGetApi@2141a12]" started-at="2023-08-18T15:29:30 IST" name="getUserDetails" finished-at="2023-08-18T15:29:31 IST" duration-ms="1499" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getUserDetails -->
        <test-method is-config="true" signature="StatusCode()[pri:0, instance:com.ripplestreet.AllGetApis.CommunityControllerGetApi@2141a12]" started-at="2023-08-18T15:29:31 IST" name="StatusCode" finished-at="2023-08-18T15:29:32 IST" duration-ms="132" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- StatusCode -->
      </class> <!-- com.ripplestreet.AllGetApis.CommunityControllerGetApi -->
      <class name="com.ripplestreet.AllGetApis.WorkFlowTemplateControllerGetApi">
        <test-method signature="getEventWorkflowTemplateByEventId()[pri:185, instance:com.ripplestreet.AllGetApis.WorkFlowTemplateControllerGetApi@6676f6a0]" started-at="2023-08-18T15:24:51 IST" name="getEventWorkflowTemplateByEventId" finished-at="2023-08-18T15:24:52 IST" duration-ms="1585" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getEventWorkflowTemplateByEventId -->
        <test-method is-config="true" signature="BaseURI()[pri:0, instance:com.ripplestreet.AllGetApis.WorkFlowTemplateControllerGetApi@6676f6a0]" started-at="2023-08-18T15:24:51 IST" name="BaseURI" finished-at="2023-08-18T15:24:51 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BaseURI -->
        <test-method is-config="true" signature="StatusCode()[pri:0, instance:com.ripplestreet.AllGetApis.WorkFlowTemplateControllerGetApi@6676f6a0]" started-at="2023-08-18T15:24:52 IST" name="StatusCode" finished-at="2023-08-18T15:24:53 IST" duration-ms="143" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- StatusCode -->
        <test-method signature="getListOfWorkFlowTemplates()[pri:186, instance:com.ripplestreet.AllGetApis.WorkFlowTemplateControllerGetApi@6676f6a0]" started-at="2023-08-18T15:24:53 IST" name="getListOfWorkFlowTemplates" finished-at="2023-08-18T15:24:54 IST" duration-ms="1490" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getListOfWorkFlowTemplates -->
        <test-method is-config="true" signature="BaseURI()[pri:0, instance:com.ripplestreet.AllGetApis.WorkFlowTemplateControllerGetApi@6676f6a0]" started-at="2023-08-18T15:24:53 IST" name="BaseURI" finished-at="2023-08-18T15:24:53 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BaseURI -->
        <test-method is-config="true" signature="StatusCode()[pri:0, instance:com.ripplestreet.AllGetApis.WorkFlowTemplateControllerGetApi@6676f6a0]" started-at="2023-08-18T15:24:54 IST" name="StatusCode" finished-at="2023-08-18T15:24:54 IST" duration-ms="115" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- StatusCode -->
        <test-method signature="getStepFunctionByArn()[pri:187, instance:com.ripplestreet.AllGetApis.WorkFlowTemplateControllerGetApi@6676f6a0]" started-at="2023-08-18T15:24:54 IST" name="getStepFunctionByArn" finished-at="2023-08-18T15:24:56 IST" duration-ms="1625" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getStepFunctionByArn -->
        <test-method is-config="true" signature="BaseURI()[pri:0, instance:com.ripplestreet.AllGetApis.WorkFlowTemplateControllerGetApi@6676f6a0]" started-at="2023-08-18T15:24:54 IST" name="BaseURI" finished-at="2023-08-18T15:24:54 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BaseURI -->
        <test-method is-config="true" signature="StatusCode()[pri:0, instance:com.ripplestreet.AllGetApis.WorkFlowTemplateControllerGetApi@6676f6a0]" started-at="2023-08-18T15:24:56 IST" name="StatusCode" finished-at="2023-08-18T15:24:56 IST" duration-ms="123" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- StatusCode -->
      </class> <!-- com.ripplestreet.AllGetApis.WorkFlowTemplateControllerGetApi -->
      <class name="com.ripplestreet.AllGetApis.ProductControllerGetApi">
        <test-method signature="getListOfProdutsByEventID()[pri:172, instance:com.ripplestreet.AllGetApis.ProductControllerGetApi@7fcf2fc1]" started-at="2023-08-18T15:29:00 IST" name="getListOfProdutsByEventID" finished-at="2023-08-18T15:29:01 IST" duration-ms="1413" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getListOfProdutsByEventID -->
        <test-method is-config="true" signature="BaseURI()[pri:0, instance:com.ripplestreet.AllGetApis.ProductControllerGetApi@7fcf2fc1]" started-at="2023-08-18T15:29:00 IST" name="BaseURI" finished-at="2023-08-18T15:29:00 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BaseURI -->
        <test-method is-config="true" signature="StatusCode()[pri:0, instance:com.ripplestreet.AllGetApis.ProductControllerGetApi@7fcf2fc1]" started-at="2023-08-18T15:29:01 IST" name="StatusCode" finished-at="2023-08-18T15:29:01 IST" duration-ms="98" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- StatusCode -->
        <test-method signature="getProductsById()[pri:173, instance:com.ripplestreet.AllGetApis.ProductControllerGetApi@7fcf2fc1]" started-at="2023-08-18T15:29:01 IST" name="getProductsById" finished-at="2023-08-18T15:29:03 IST" duration-ms="1536" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getProductsById -->
        <test-method is-config="true" signature="BaseURI()[pri:0, instance:com.ripplestreet.AllGetApis.ProductControllerGetApi@7fcf2fc1]" started-at="2023-08-18T15:29:01 IST" name="BaseURI" finished-at="2023-08-18T15:29:01 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BaseURI -->
        <test-method is-config="true" signature="StatusCode()[pri:0, instance:com.ripplestreet.AllGetApis.ProductControllerGetApi@7fcf2fc1]" started-at="2023-08-18T15:29:03 IST" name="StatusCode" finished-at="2023-08-18T15:29:03 IST" duration-ms="147" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- StatusCode -->
      </class> <!-- com.ripplestreet.AllGetApis.ProductControllerGetApi -->
      <class name="com.ripplestreet.AllGetApis.RewardAllocationcontrollerGetApi">
        <test-method is-config="true" signature="BaseURI()[pri:0, instance:com.ripplestreet.AllGetApis.RewardAllocationcontrollerGetApi@5a9f4771]" started-at="2023-08-18T15:27:40 IST" name="BaseURI" finished-at="2023-08-18T15:27:40 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BaseURI -->
        <test-method signature="getRewardAllocations()[pri:0, instance:com.ripplestreet.AllGetApis.RewardAllocationcontrollerGetApi@5a9f4771]" started-at="2023-08-18T15:27:40 IST" name="getRewardAllocations" finished-at="2023-08-18T15:27:42 IST" duration-ms="1638" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getRewardAllocations -->
        <test-method is-config="true" signature="StatusCode()[pri:0, instance:com.ripplestreet.AllGetApis.RewardAllocationcontrollerGetApi@5a9f4771]" started-at="2023-08-18T15:27:42 IST" name="StatusCode" finished-at="2023-08-18T15:27:42 IST" duration-ms="99" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- StatusCode -->
        <test-method signature="getRewardAllocation()[pri:108, instance:com.ripplestreet.AllGetApis.RewardAllocationcontrollerGetApi@5a9f4771]" started-at="2023-08-18T15:27:42 IST" name="getRewardAllocation" finished-at="2023-08-18T15:27:44 IST" duration-ms="1530" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getRewardAllocation -->
        <test-method is-config="true" signature="BaseURI()[pri:0, instance:com.ripplestreet.AllGetApis.RewardAllocationcontrollerGetApi@5a9f4771]" started-at="2023-08-18T15:27:42 IST" name="BaseURI" finished-at="2023-08-18T15:27:42 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BaseURI -->
        <test-method is-config="true" signature="StatusCode()[pri:0, instance:com.ripplestreet.AllGetApis.RewardAllocationcontrollerGetApi@5a9f4771]" started-at="2023-08-18T15:27:44 IST" name="StatusCode" finished-at="2023-08-18T15:27:44 IST" duration-ms="134" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- StatusCode -->
      </class> <!-- com.ripplestreet.AllGetApis.RewardAllocationcontrollerGetApi -->
      <class name="com.ripplestreet.AllGetApis.MarketingGoalsControllerGetApi">
        <test-method signature="getMarketingGoalsForEvent()[pri:171, instance:com.ripplestreet.AllGetApis.MarketingGoalsControllerGetApi@1bae316d]" started-at="2023-08-18T15:24:48 IST" name="getMarketingGoalsForEvent" finished-at="2023-08-18T15:24:49 IST" duration-ms="1439" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getMarketingGoalsForEvent -->
        <test-method is-config="true" signature="BaseURI()[pri:0, instance:com.ripplestreet.AllGetApis.MarketingGoalsControllerGetApi@1bae316d]" started-at="2023-08-18T15:24:48 IST" name="BaseURI" finished-at="2023-08-18T15:24:48 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BaseURI -->
        <test-method is-config="true" signature="StatusCode()[pri:0, instance:com.ripplestreet.AllGetApis.MarketingGoalsControllerGetApi@1bae316d]" started-at="2023-08-18T15:24:49 IST" name="StatusCode" finished-at="2023-08-18T15:24:49 IST" duration-ms="106" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- StatusCode -->
      </class> <!-- com.ripplestreet.AllGetApis.MarketingGoalsControllerGetApi -->
      <class name="com.ripplestreet.AllGetApis.UserAchievementControllerGetApi">
        <test-method signature="getUserAchivmentsDetails()[pri:66, instance:com.ripplestreet.AllGetApis.UserAchievementControllerGetApi@4196c360]" started-at="2023-08-18T15:29:32 IST" name="getUserAchivmentsDetails" finished-at="2023-08-18T15:29:33 IST" duration-ms="1505" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getUserAchivmentsDetails -->
        <test-method is-config="true" signature="BaseURI()[pri:0, instance:com.ripplestreet.AllGetApis.UserAchievementControllerGetApi@4196c360]" started-at="2023-08-18T15:29:32 IST" name="BaseURI" finished-at="2023-08-18T15:29:32 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BaseURI -->
        <test-method is-config="true" signature="StatusCode()[pri:0, instance:com.ripplestreet.AllGetApis.UserAchievementControllerGetApi@4196c360]" started-at="2023-08-18T15:29:33 IST" name="StatusCode" finished-at="2023-08-18T15:29:33 IST" duration-ms="123" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- StatusCode -->
        <test-method signature="getUserProgramsDetailes()[pri:67, instance:com.ripplestreet.AllGetApis.UserAchievementControllerGetApi@4196c360]" started-at="2023-08-18T15:29:33 IST" name="getUserProgramsDetailes" finished-at="2023-08-18T15:29:35 IST" duration-ms="1309" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getUserProgramsDetailes -->
        <test-method is-config="true" signature="BaseURI()[pri:0, instance:com.ripplestreet.AllGetApis.UserAchievementControllerGetApi@4196c360]" started-at="2023-08-18T15:29:33 IST" name="BaseURI" finished-at="2023-08-18T15:29:33 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BaseURI -->
        <test-method is-config="true" signature="StatusCode()[pri:0, instance:com.ripplestreet.AllGetApis.UserAchievementControllerGetApi@4196c360]" started-at="2023-08-18T15:29:35 IST" name="StatusCode" finished-at="2023-08-18T15:29:35 IST" duration-ms="87" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- StatusCode -->
      </class> <!-- com.ripplestreet.AllGetApis.UserAchievementControllerGetApi -->
      <class name="com.ripplestreet.AllGetApis.storesControllerGetApi">
        <test-method signature="getAllStoreCollection()[pri:103, instance:com.ripplestreet.AllGetApis.storesControllerGetApi@7d898981]" started-at="2023-08-18T15:27:52 IST" name="getAllStoreCollection" finished-at="2023-08-18T15:27:54 IST" duration-ms="2039" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getAllStoreCollection -->
        <test-method is-config="true" signature="BaseURI()[pri:0, instance:com.ripplestreet.AllGetApis.storesControllerGetApi@7d898981]" started-at="2023-08-18T15:27:52 IST" name="BaseURI" finished-at="2023-08-18T15:27:52 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BaseURI -->
        <test-method is-config="true" signature="StatusCode()[pri:0, instance:com.ripplestreet.AllGetApis.storesControllerGetApi@7d898981]" started-at="2023-08-18T15:27:54 IST" name="StatusCode" finished-at="2023-08-18T15:27:54 IST" duration-ms="125" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- StatusCode -->
        <test-method is-config="true" signature="BaseURI()[pri:0, instance:com.ripplestreet.AllGetApis.storesControllerGetApi@7d898981]" started-at="2023-08-18T15:27:54 IST" name="BaseURI" finished-at="2023-08-18T15:27:54 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BaseURI -->
        <test-method signature="getStoreListByCollectionName()[pri:104, instance:com.ripplestreet.AllGetApis.storesControllerGetApi@7d898981]" started-at="2023-08-18T15:27:54 IST" name="getStoreListByCollectionName" finished-at="2023-08-18T15:27:56 IST" duration-ms="1511" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getStoreListByCollectionName -->
        <test-method is-config="true" signature="StatusCode()[pri:0, instance:com.ripplestreet.AllGetApis.storesControllerGetApi@7d898981]" started-at="2023-08-18T15:27:56 IST" name="StatusCode" finished-at="2023-08-18T15:27:56 IST" duration-ms="107" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- StatusCode -->
      </class> <!-- com.ripplestreet.AllGetApis.storesControllerGetApi -->
      <class name="com.ripplestreet.AllGetApis.PartyControllerGetApi">
        <test-method signature="getlistofparties()[pri:40, instance:com.ripplestreet.AllGetApis.PartyControllerGetApi@4278284b]" started-at="2023-08-18T15:26:22 IST" name="getlistofparties" finished-at="2023-08-18T15:26:23 IST" duration-ms="1574" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getlistofparties -->
        <test-method is-config="true" signature="BaseURI()[pri:0, instance:com.ripplestreet.AllGetApis.PartyControllerGetApi@4278284b]" started-at="2023-08-18T15:26:22 IST" name="BaseURI" finished-at="2023-08-18T15:26:22 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BaseURI -->
        <test-method is-config="true" signature="StatusCode()[pri:0, instance:com.ripplestreet.AllGetApis.PartyControllerGetApi@4278284b]" started-at="2023-08-18T15:26:23 IST" name="StatusCode" finished-at="2023-08-18T15:26:24 IST" duration-ms="138" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- StatusCode -->
      </class> <!-- com.ripplestreet.AllGetApis.PartyControllerGetApi -->
      <class name="com.ripplestreet.AllGetApis.TemplateControllerGetApi">
        <test-method signature="template()[pri:133, instance:com.ripplestreet.AllGetApis.TemplateControllerGetApi@11f0a5a1]" started-at="2023-08-18T15:25:14 IST" name="template" finished-at="2023-08-18T15:25:16 IST" duration-ms="1925" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- template -->
        <test-method is-config="true" signature="BaseURI()[pri:0, instance:com.ripplestreet.AllGetApis.TemplateControllerGetApi@11f0a5a1]" started-at="2023-08-18T15:25:14 IST" name="BaseURI" finished-at="2023-08-18T15:25:14 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BaseURI -->
        <test-method is-config="true" signature="StatusCode()[pri:0, instance:com.ripplestreet.AllGetApis.TemplateControllerGetApi@11f0a5a1]" started-at="2023-08-18T15:25:16 IST" name="StatusCode" finished-at="2023-08-18T15:25:17 IST" duration-ms="317" status="FAIL">
          <exception class="java.lang.IllegalArgumentException">
            <message>
              <![CDATA[The maximum length of cell contents (text) is 32767 characters]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IllegalArgumentException: The maximum length of cell contents (text) is 32767 characters
at org.apache.poi.ss.usermodel.CellBase.checkLength(CellBase.java:292)
at org.apache.poi.ss.usermodel.CellBase.setCellValue(CellBase.java:273)
at com.ripplestreet.genricUtilities.genricUtilities.StatusCode(genricUtilities.java:282)
at jdk.internal.reflect.GeneratedMethodAccessor111.invoke(Unknown Source)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethodConsideringTimeout(MethodInvocationHelper.java:69)
at org.testng.internal.invokers.ConfigInvoker.invokeConfigurationMethod(ConfigInvoker.java:390)
at org.testng.internal.invokers.ConfigInvoker.invokeConfigurations(ConfigInvoker.java:325)
at org.testng.internal.invokers.TestInvoker.runConfigMethods(TestInvoker.java:810)
at org.testng.internal.invokers.TestInvoker.runAfterConfigurations(TestInvoker.java:779)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:755)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:227)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:957)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:200)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:848)
at org.testng.TestRunner.run(TestRunner.java:621)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:443)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:437)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:397)
at org.testng.SuiteRunner.run(SuiteRunner.java:336)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1280)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1200)
at org.testng.TestNG.runSuites(TestNG.java:1114)
at org.testng.TestNG.run(TestNG.java:1082)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalArgumentException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- StatusCode -->
        <test-method is-config="true" signature="BaseURI()[pri:0, instance:com.ripplestreet.AllGetApis.TemplateControllerGetApi@11f0a5a1]" started-at="2023-08-18T15:25:17 IST" name="BaseURI" finished-at="2023-08-18T15:25:17 IST" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BaseURI -->
        <test-method signature="AllEmailList()[pri:134, instance:com.ripplestreet.AllGetApis.TemplateControllerGetApi@11f0a5a1]" started-at="2023-08-18T15:25:17 IST" name="AllEmailList" finished-at="2023-08-18T15:25:17 IST" duration-ms="0" status="SKIP">
          <exception class="java.lang.IllegalArgumentException">
            <message>
              <![CDATA[The maximum length of cell contents (text) is 32767 characters]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IllegalArgumentException: The maximum length of cell contents (text) is 32767 characters
at org.apache.poi.ss.usermodel.CellBase.checkLength(CellBase.java:292)
at org.apache.poi.ss.usermodel.CellBase.setCellValue(CellBase.java:273)
at com.ripplestreet.genricUtilities.genricUtilities.StatusCode(genricUtilities.java:282)
at jdk.internal.reflect.GeneratedMethodAccessor111.invoke(Unknown Source)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethodConsideringTimeout(MethodInvocationHelper.java:69)
at org.testng.internal.invokers.ConfigInvoker.invokeConfigurationMethod(ConfigInvoker.java:390)
at org.testng.internal.invokers.ConfigInvoker.invokeConfigurations(ConfigInvoker.java:325)
at org.testng.internal.invokers.TestInvoker.runConfigMethods(TestInvoker.java:810)
at org.testng.internal.invokers.TestInvoker.runAfterConfigurations(TestInvoker.java:779)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:755)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:227)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:957)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:200)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:848)
at org.testng.TestRunner.run(TestRunner.java:621)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:443)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:437)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:397)
at org.testng.SuiteRunner.run(SuiteRunner.java:336)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1280)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1200)
at org.testng.TestNG.runSuites(TestNG.java:1114)
at org.testng.TestNG.run(TestNG.java:1082)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalArgumentException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AllEmailList -->
        <test-method is-config="true" signature="StatusCode()[pri:0, instance:com.ripplestreet.AllGetApis.TemplateControllerGetApi@11f0a5a1]" started-at="2023-08-18T15:25:17 IST" name="StatusCode" finished-at="2023-08-18T15:25:17 IST" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- StatusCode -->
        <test-method is-config="true" signature="BaseURI()[pri:0, instance:com.ripplestreet.AllGetApis.TemplateControllerGetApi@11f0a5a1]" started-at="2023-08-18T15:25:17 IST" name="BaseURI" finished-at="2023-08-18T15:25:17 IST" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BaseURI -->
        <test-method signature="PreviewTemplateContent()[pri:135, instance:com.ripplestreet.AllGetApis.TemplateControllerGetApi@11f0a5a1]" started-at="2023-08-18T15:25:17 IST" name="PreviewTemplateContent" finished-at="2023-08-18T15:25:17 IST" duration-ms="0" status="SKIP">
          <exception class="java.lang.IllegalArgumentException">
            <message>
              <![CDATA[The maximum length of cell contents (text) is 32767 characters]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IllegalArgumentException: The maximum length of cell contents (text) is 32767 characters
at org.apache.poi.ss.usermodel.CellBase.checkLength(CellBase.java:292)
at org.apache.poi.ss.usermodel.CellBase.setCellValue(CellBase.java:273)
at com.ripplestreet.genricUtilities.genricUtilities.StatusCode(genricUtilities.java:282)
at jdk.internal.reflect.GeneratedMethodAccessor111.invoke(Unknown Source)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethodConsideringTimeout(MethodInvocationHelper.java:69)
at org.testng.internal.invokers.ConfigInvoker.invokeConfigurationMethod(ConfigInvoker.java:390)
at org.testng.internal.invokers.ConfigInvoker.invokeConfigurations(ConfigInvoker.java:325)
at org.testng.internal.invokers.TestInvoker.runConfigMethods(TestInvoker.java:810)
at org.testng.internal.invokers.TestInvoker.runAfterConfigurations(TestInvoker.java:779)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:755)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:227)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:957)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:200)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:848)
at org.testng.TestRunner.run(TestRunner.java:621)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:443)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:437)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:397)
at org.testng.SuiteRunner.run(SuiteRunner.java:336)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1280)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1200)
at org.testng.TestNG.runSuites(TestNG.java:1114)
at org.testng.TestNG.run(TestNG.java:1082)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalArgumentException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PreviewTemplateContent -->
        <test-method is-config="true" signature="StatusCode()[pri:0, instance:com.ripplestreet.AllGetApis.TemplateControllerGetApi@11f0a5a1]" started-at="2023-08-18T15:25:17 IST" name="StatusCode" finished-at="2023-08-18T15:25:17 IST" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- StatusCode -->
        <test-method signature="GettemplateByTrasactionalType()[pri:136, instance:com.ripplestreet.AllGetApis.TemplateControllerGetApi@11f0a5a1]" started-at="2023-08-18T15:25:17 IST" name="GettemplateByTrasactionalType" finished-at="2023-08-18T15:25:17 IST" duration-ms="0" status="SKIP">
          <exception class="java.lang.IllegalArgumentException">
            <message>
              <![CDATA[The maximum length of cell contents (text) is 32767 characters]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IllegalArgumentException: The maximum length of cell contents (text) is 32767 characters
at org.apache.poi.ss.usermodel.CellBase.checkLength(CellBase.java:292)
at org.apache.poi.ss.usermodel.CellBase.setCellValue(CellBase.java:273)
at com.ripplestreet.genricUtilities.genricUtilities.StatusCode(genricUtilities.java:282)
at jdk.internal.reflect.GeneratedMethodAccessor111.invoke(Unknown Source)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethodConsideringTimeout(MethodInvocationHelper.java:69)
at org.testng.internal.invokers.ConfigInvoker.invokeConfigurationMethod(ConfigInvoker.java:390)
at org.testng.internal.invokers.ConfigInvoker.invokeConfigurations(ConfigInvoker.java:325)
at org.testng.internal.invokers.TestInvoker.runConfigMethods(TestInvoker.java:810)
at org.testng.internal.invokers.TestInvoker.runAfterConfigurations(TestInvoker.java:779)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:755)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:227)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:957)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:200)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:848)
at org.testng.TestRunner.run(TestRunner.java:621)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:443)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:437)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:397)
at org.testng.SuiteRunner.run(SuiteRunner.java:336)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1280)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1200)
at org.testng.TestNG.runSuites(TestNG.java:1114)
at org.testng.TestNG.run(TestNG.java:1082)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalArgumentException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GettemplateByTrasactionalType -->
        <test-method is-config="true" signature="BaseURI()[pri:0, instance:com.ripplestreet.AllGetApis.TemplateControllerGetApi@11f0a5a1]" started-at="2023-08-18T15:25:17 IST" name="BaseURI" finished-at="2023-08-18T15:25:17 IST" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BaseURI -->
        <test-method is-config="true" signature="StatusCode()[pri:0, instance:com.ripplestreet.AllGetApis.TemplateControllerGetApi@11f0a5a1]" started-at="2023-08-18T15:25:17 IST" name="StatusCode" finished-at="2023-08-18T15:25:17 IST" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- StatusCode -->
        <test-method is-config="true" signature="BaseURI()[pri:0, instance:com.ripplestreet.AllGetApis.TemplateControllerGetApi@11f0a5a1]" started-at="2023-08-18T15:25:17 IST" name="BaseURI" finished-at="2023-08-18T15:25:17 IST" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BaseURI -->
        <test-method signature="DownloadCSVLoader()[pri:137, instance:com.ripplestreet.AllGetApis.TemplateControllerGetApi@11f0a5a1]" started-at="2023-08-18T15:25:17 IST" name="DownloadCSVLoader" finished-at="2023-08-18T15:25:17 IST" duration-ms="0" status="SKIP">
          <exception class="java.lang.IllegalArgumentException">
            <message>
              <![CDATA[The maximum length of cell contents (text) is 32767 characters]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IllegalArgumentException: The maximum length of cell contents (text) is 32767 characters
at org.apache.poi.ss.usermodel.CellBase.checkLength(CellBase.java:292)
at org.apache.poi.ss.usermodel.CellBase.setCellValue(CellBase.java:273)
at com.ripplestreet.genricUtilities.genricUtilities.StatusCode(genricUtilities.java:282)
at jdk.internal.reflect.GeneratedMethodAccessor111.invoke(Unknown Source)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethodConsideringTimeout(MethodInvocationHelper.java:69)
at org.testng.internal.invokers.ConfigInvoker.invokeConfigurationMethod(ConfigInvoker.java:390)
at org.testng.internal.invokers.ConfigInvoker.invokeConfigurations(ConfigInvoker.java:325)
at org.testng.internal.invokers.TestInvoker.runConfigMethods(TestInvoker.java:810)
at org.testng.internal.invokers.TestInvoker.runAfterConfigurations(TestInvoker.java:779)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:755)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:227)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:957)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:200)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:848)
at org.testng.TestRunner.run(TestRunner.java:621)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:443)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:437)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:397)
at org.testng.SuiteRunner.run(SuiteRunner.java:336)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1280)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1200)
at org.testng.TestNG.runSuites(TestNG.java:1114)
at org.testng.TestNG.run(TestNG.java:1082)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalArgumentException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- DownloadCSVLoader -->
        <test-method is-config="true" signature="StatusCode()[pri:0, instance:com.ripplestreet.AllGetApis.TemplateControllerGetApi@11f0a5a1]" started-at="2023-08-18T15:25:17 IST" name="StatusCode" finished-at="2023-08-18T15:25:17 IST" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- StatusCode -->
        <test-method signature="GetTemplateListByTransactionalTypeAndEventId()[pri:138, instance:com.ripplestreet.AllGetApis.TemplateControllerGetApi@11f0a5a1]" started-at="2023-08-18T15:25:17 IST" name="GetTemplateListByTransactionalTypeAndEventId" finished-at="2023-08-18T15:25:17 IST" duration-ms="0" status="SKIP">
          <exception class="java.lang.IllegalArgumentException">
            <message>
              <![CDATA[The maximum length of cell contents (text) is 32767 characters]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IllegalArgumentException: The maximum length of cell contents (text) is 32767 characters
at org.apache.poi.ss.usermodel.CellBase.checkLength(CellBase.java:292)
at org.apache.poi.ss.usermodel.CellBase.setCellValue(CellBase.java:273)
at com.ripplestreet.genricUtilities.genricUtilities.StatusCode(genricUtilities.java:282)
at jdk.internal.reflect.GeneratedMethodAccessor111.invoke(Unknown Source)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethodConsideringTimeout(MethodInvocationHelper.java:69)
at org.testng.internal.invokers.ConfigInvoker.invokeConfigurationMethod(ConfigInvoker.java:390)
at org.testng.internal.invokers.ConfigInvoker.invokeConfigurations(ConfigInvoker.java:325)
at org.testng.internal.invokers.TestInvoker.runConfigMethods(TestInvoker.java:810)
at org.testng.internal.invokers.TestInvoker.runAfterConfigurations(TestInvoker.java:779)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:755)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:227)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:957)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:200)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:848)
at org.testng.TestRunner.run(TestRunner.java:621)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:443)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:437)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:397)
at org.testng.SuiteRunner.run(SuiteRunner.java:336)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1280)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1200)
at org.testng.TestNG.runSuites(TestNG.java:1114)
at org.testng.TestNG.run(TestNG.java:1082)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalArgumentException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GetTemplateListByTransactionalTypeAndEventId -->
        <test-method is-config="true" signature="BaseURI()[pri:0, instance:com.ripplestreet.AllGetApis.TemplateControllerGetApi@11f0a5a1]" started-at="2023-08-18T15:25:17 IST" name="BaseURI" finished-at="2023-08-18T15:25:17 IST" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BaseURI -->
        <test-method is-config="true" signature="StatusCode()[pri:0, instance:com.ripplestreet.AllGetApis.TemplateControllerGetApi@11f0a5a1]" started-at="2023-08-18T15:25:17 IST" name="StatusCode" finished-at="2023-08-18T15:25:17 IST" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- StatusCode -->
        <test-method signature="getTransactionalTemplateById()[pri:139, instance:com.ripplestreet.AllGetApis.TemplateControllerGetApi@11f0a5a1]" started-at="2023-08-18T15:25:17 IST" name="getTransactionalTemplateById" finished-at="2023-08-18T15:25:17 IST" duration-ms="0" status="SKIP">
          <exception class="java.lang.IllegalArgumentException">
            <message>
              <![CDATA[The maximum length of cell contents (text) is 32767 characters]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IllegalArgumentException: The maximum length of cell contents (text) is 32767 characters
at org.apache.poi.ss.usermodel.CellBase.checkLength(CellBase.java:292)
at org.apache.poi.ss.usermodel.CellBase.setCellValue(CellBase.java:273)
at com.ripplestreet.genricUtilities.genricUtilities.StatusCode(genricUtilities.java:282)
at jdk.internal.reflect.GeneratedMethodAccessor111.invoke(Unknown Source)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethodConsideringTimeout(MethodInvocationHelper.java:69)
at org.testng.internal.invokers.ConfigInvoker.invokeConfigurationMethod(ConfigInvoker.java:390)
at org.testng.internal.invokers.ConfigInvoker.invokeConfigurations(ConfigInvoker.java:325)
at org.testng.internal.invokers.TestInvoker.runConfigMethods(TestInvoker.java:810)
at org.testng.internal.invokers.TestInvoker.runAfterConfigurations(TestInvoker.java:779)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:755)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:227)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:957)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:200)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:848)
at org.testng.TestRunner.run(TestRunner.java:621)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:443)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:437)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:397)
at org.testng.SuiteRunner.run(SuiteRunner.java:336)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1280)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1200)
at org.testng.TestNG.runSuites(TestNG.java:1114)
at org.testng.TestNG.run(TestNG.java:1082)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalArgumentException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getTransactionalTemplateById -->
        <test-method is-config="true" signature="BaseURI()[pri:0, instance:com.ripplestreet.AllGetApis.TemplateControllerGetApi@11f0a5a1]" started-at="2023-08-18T15:25:17 IST" name="BaseURI" finished-at="2023-08-18T15:25:17 IST" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BaseURI -->
        <test-method is-config="true" signature="StatusCode()[pri:0, instance:com.ripplestreet.AllGetApis.TemplateControllerGetApi@11f0a5a1]" started-at="2023-08-18T15:25:17 IST" name="StatusCode" finished-at="2023-08-18T15:25:17 IST" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- StatusCode -->
      </class> <!-- com.ripplestreet.AllGetApis.TemplateControllerGetApi -->
      <class name="com.ripplestreet.AllGetApis.GameControllerGetApi">
        <test-method signature="getAllgames()[pri:92, instance:com.ripplestreet.AllGetApis.GameControllerGetApi@1b45c0e]" started-at="2023-08-18T15:25:08 IST" name="getAllgames" finished-at="2023-08-18T15:25:09 IST" duration-ms="1571" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getAllgames -->
        <test-method is-config="true" signature="BaseURI()[pri:0, instance:com.ripplestreet.AllGetApis.GameControllerGetApi@1b45c0e]" started-at="2023-08-18T15:25:08 IST" name="BaseURI" finished-at="2023-08-18T15:25:08 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BaseURI -->
        <test-method is-config="true" signature="StatusCode()[pri:0, instance:com.ripplestreet.AllGetApis.GameControllerGetApi@1b45c0e]" started-at="2023-08-18T15:25:09 IST" name="StatusCode" finished-at="2023-08-18T15:25:10 IST" duration-ms="113" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- StatusCode -->
        <test-method signature="getGameBygameId()[pri:93, instance:com.ripplestreet.AllGetApis.GameControllerGetApi@1b45c0e]" started-at="2023-08-18T15:25:10 IST" name="getGameBygameId" finished-at="2023-08-18T15:25:11 IST" duration-ms="1623" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getGameBygameId -->
        <test-method is-config="true" signature="BaseURI()[pri:0, instance:com.ripplestreet.AllGetApis.GameControllerGetApi@1b45c0e]" started-at="2023-08-18T15:25:10 IST" name="BaseURI" finished-at="2023-08-18T15:25:10 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BaseURI -->
        <test-method is-config="true" signature="StatusCode()[pri:0, instance:com.ripplestreet.AllGetApis.GameControllerGetApi@1b45c0e]" started-at="2023-08-18T15:25:11 IST" name="StatusCode" finished-at="2023-08-18T15:25:11 IST" duration-ms="138" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- StatusCode -->
        <test-method signature="GetGameTrackerRedisObjByGameId()[pri:94, instance:com.ripplestreet.AllGetApis.GameControllerGetApi@1b45c0e]" started-at="2023-08-18T15:25:11 IST" name="GetGameTrackerRedisObjByGameId" finished-at="2023-08-18T15:25:13 IST" duration-ms="1499" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GetGameTrackerRedisObjByGameId -->
        <test-method is-config="true" signature="BaseURI()[pri:0, instance:com.ripplestreet.AllGetApis.GameControllerGetApi@1b45c0e]" started-at="2023-08-18T15:25:11 IST" name="BaseURI" finished-at="2023-08-18T15:25:11 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BaseURI -->
        <test-method is-config="true" signature="StatusCode()[pri:0, instance:com.ripplestreet.AllGetApis.GameControllerGetApi@1b45c0e]" started-at="2023-08-18T15:25:13 IST" name="StatusCode" finished-at="2023-08-18T15:25:13 IST" duration-ms="141" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- StatusCode -->
        <test-method signature="getWinningoptionBasedOnTheProbability()[pri:95, instance:com.ripplestreet.AllGetApis.GameControllerGetApi@1b45c0e]" started-at="2023-08-18T15:25:13 IST" name="getWinningoptionBasedOnTheProbability" finished-at="2023-08-18T15:25:14 IST" duration-ms="1393" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getWinningoptionBasedOnTheProbability -->
        <test-method is-config="true" signature="BaseURI()[pri:0, instance:com.ripplestreet.AllGetApis.GameControllerGetApi@1b45c0e]" started-at="2023-08-18T15:25:13 IST" name="BaseURI" finished-at="2023-08-18T15:25:13 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BaseURI -->
        <test-method is-config="true" signature="StatusCode()[pri:0, instance:com.ripplestreet.AllGetApis.GameControllerGetApi@1b45c0e]" started-at="2023-08-18T15:25:14 IST" name="StatusCode" finished-at="2023-08-18T15:25:14 IST" duration-ms="122" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- StatusCode -->
      </class> <!-- com.ripplestreet.AllGetApis.GameControllerGetApi -->
      <class name="com.ripplestreet.AllGetApis.webMvcLinkshandlerGetApi">
        <test-method signature="links()[pri:0, instance:com.ripplestreet.AllGetApis.webMvcLinkshandlerGetApi@6bf08014]" started-at="2023-08-18T15:25:26 IST" name="links" finished-at="2023-08-18T15:25:27 IST" duration-ms="1513" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- links -->
        <test-method is-config="true" signature="BaseURI()[pri:0, instance:com.ripplestreet.AllGetApis.webMvcLinkshandlerGetApi@6bf08014]" started-at="2023-08-18T15:25:26 IST" name="BaseURI" finished-at="2023-08-18T15:25:26 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BaseURI -->
        <test-method is-config="true" signature="StatusCode()[pri:0, instance:com.ripplestreet.AllGetApis.webMvcLinkshandlerGetApi@6bf08014]" started-at="2023-08-18T15:25:27 IST" name="StatusCode" finished-at="2023-08-18T15:25:28 IST" duration-ms="133" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- StatusCode -->
      </class> <!-- com.ripplestreet.AllGetApis.webMvcLinkshandlerGetApi -->
      <class name="com.ripplestreet.AllGetApis.SocialShareControllerGetApi">
        <test-method signature="getReview()[pri:57, instance:com.ripplestreet.AllGetApis.SocialShareControllerGetApi@50dfbc58]" started-at="2023-08-18T15:25:20 IST" name="getReview" finished-at="2023-08-18T15:25:22 IST" duration-ms="1518" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getReview -->
        <test-method is-config="true" signature="BaseURI()[pri:0, instance:com.ripplestreet.AllGetApis.SocialShareControllerGetApi@50dfbc58]" started-at="2023-08-18T15:25:20 IST" name="BaseURI" finished-at="2023-08-18T15:25:20 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BaseURI -->
        <test-method is-config="true" signature="StatusCode()[pri:0, instance:com.ripplestreet.AllGetApis.SocialShareControllerGetApi@50dfbc58]" started-at="2023-08-18T15:25:22 IST" name="StatusCode" finished-at="2023-08-18T15:25:22 IST" duration-ms="118" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- StatusCode -->
        <test-method is-config="true" signature="BaseURI()[pri:0, instance:com.ripplestreet.AllGetApis.SocialShareControllerGetApi@50dfbc58]" started-at="2023-08-18T15:25:22 IST" name="BaseURI" finished-at="2023-08-18T15:25:22 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BaseURI -->
        <test-method signature="getAllReviews()[pri:58, instance:com.ripplestreet.AllGetApis.SocialShareControllerGetApi@50dfbc58]" started-at="2023-08-18T15:25:22 IST" name="getAllReviews" finished-at="2023-08-18T15:25:23 IST" duration-ms="1468" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getAllReviews -->
        <test-method is-config="true" signature="StatusCode()[pri:0, instance:com.ripplestreet.AllGetApis.SocialShareControllerGetApi@50dfbc58]" started-at="2023-08-18T15:25:23 IST" name="StatusCode" finished-at="2023-08-18T15:25:23 IST" duration-ms="124" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- StatusCode -->
      </class> <!-- com.ripplestreet.AllGetApis.SocialShareControllerGetApi -->
      <class name="com.ripplestreet.AllGetApis.ReceiptControllerGetApi">
        <test-method signature="getReceiptRecordWithData()[pri:101, instance:com.ripplestreet.AllGetApis.ReceiptControllerGetApi@5c45d770]" started-at="2023-08-18T15:24:41 IST" name="getReceiptRecordWithData" finished-at="2023-08-18T15:24:42 IST" duration-ms="1601" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getReceiptRecordWithData -->
        <test-method is-config="true" signature="BaseURI()[pri:0, instance:com.ripplestreet.AllGetApis.ReceiptControllerGetApi@5c45d770]" started-at="2023-08-18T15:24:41 IST" name="BaseURI" finished-at="2023-08-18T15:24:41 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BaseURI -->
        <test-method is-config="true" signature="StatusCode()[pri:0, instance:com.ripplestreet.AllGetApis.ReceiptControllerGetApi@5c45d770]" started-at="2023-08-18T15:24:42 IST" name="StatusCode" finished-at="2023-08-18T15:24:43 IST" duration-ms="219" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- StatusCode -->
        <test-method is-config="true" signature="BaseURI()[pri:0, instance:com.ripplestreet.AllGetApis.ReceiptControllerGetApi@5c45d770]" started-at="2023-08-18T15:24:43 IST" name="BaseURI" finished-at="2023-08-18T15:24:43 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BaseURI -->
        <test-method signature="getReceiptList()[pri:102, instance:com.ripplestreet.AllGetApis.ReceiptControllerGetApi@5c45d770]" started-at="2023-08-18T15:24:43 IST" name="getReceiptList" finished-at="2023-08-18T15:24:44 IST" duration-ms="1519" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getReceiptList -->
        <test-method is-config="true" signature="StatusCode()[pri:0, instance:com.ripplestreet.AllGetApis.ReceiptControllerGetApi@5c45d770]" started-at="2023-08-18T15:24:44 IST" name="StatusCode" finished-at="2023-08-18T15:24:44 IST" duration-ms="170" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- StatusCode -->
      </class> <!-- com.ripplestreet.AllGetApis.ReceiptControllerGetApi -->
      <class name="com.ripplestreet.AllGetApis.SegmentationDefinitionControllerVersion2">
        <test-method signature="getGetSegmentDefinitionByFolderIdAndSegmentId()[pri:82, instance:com.ripplestreet.AllGetApis.SegmentationDefinitionControllerVersion2@352c1b98]" started-at="2023-08-18T15:27:32 IST" name="getGetSegmentDefinitionByFolderIdAndSegmentId" finished-at="2023-08-18T15:27:34 IST" duration-ms="1539" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getGetSegmentDefinitionByFolderIdAndSegmentId -->
        <test-method is-config="true" signature="BaseURI()[pri:0, instance:com.ripplestreet.AllGetApis.SegmentationDefinitionControllerVersion2@352c1b98]" started-at="2023-08-18T15:27:32 IST" name="BaseURI" finished-at="2023-08-18T15:27:32 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BaseURI -->
        <test-method is-config="true" signature="StatusCode()[pri:0, instance:com.ripplestreet.AllGetApis.SegmentationDefinitionControllerVersion2@352c1b98]" started-at="2023-08-18T15:27:34 IST" name="StatusCode" finished-at="2023-08-18T15:27:34 IST" duration-ms="144" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- StatusCode -->
        <test-method signature="getAllSegments()[pri:83, instance:com.ripplestreet.AllGetApis.SegmentationDefinitionControllerVersion2@352c1b98]" started-at="2023-08-18T15:27:34 IST" name="getAllSegments" finished-at="2023-08-18T15:27:36 IST" duration-ms="1491" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getAllSegments -->
        <test-method is-config="true" signature="BaseURI()[pri:0, instance:com.ripplestreet.AllGetApis.SegmentationDefinitionControllerVersion2@352c1b98]" started-at="2023-08-18T15:27:34 IST" name="BaseURI" finished-at="2023-08-18T15:27:34 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BaseURI -->
        <test-method is-config="true" signature="StatusCode()[pri:0, instance:com.ripplestreet.AllGetApis.SegmentationDefinitionControllerVersion2@352c1b98]" started-at="2023-08-18T15:27:36 IST" name="StatusCode" finished-at="2023-08-18T15:27:36 IST" duration-ms="106" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- StatusCode -->
        <test-method signature="getSegmentDefinitionById()[pri:84, instance:com.ripplestreet.AllGetApis.SegmentationDefinitionControllerVersion2@352c1b98]" started-at="2023-08-18T15:27:36 IST" name="getSegmentDefinitionById" finished-at="2023-08-18T15:27:37 IST" duration-ms="1428" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getSegmentDefinitionById -->
        <test-method is-config="true" signature="BaseURI()[pri:0, instance:com.ripplestreet.AllGetApis.SegmentationDefinitionControllerVersion2@352c1b98]" started-at="2023-08-18T15:27:36 IST" name="BaseURI" finished-at="2023-08-18T15:27:36 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BaseURI -->
        <test-method is-config="true" signature="StatusCode()[pri:0, instance:com.ripplestreet.AllGetApis.SegmentationDefinitionControllerVersion2@352c1b98]" started-at="2023-08-18T15:27:37 IST" name="StatusCode" finished-at="2023-08-18T15:27:37 IST" duration-ms="124" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- StatusCode -->
      </class> <!-- com.ripplestreet.AllGetApis.SegmentationDefinitionControllerVersion2 -->
      <class name="com.ripplestreet.AllGetApis.NotificationControllerGetApi">
        <test-method is-config="true" signature="BaseURI()[pri:0, instance:com.ripplestreet.AllGetApis.NotificationControllerGetApi@571c5681]" started-at="2023-08-18T15:30:11 IST" name="BaseURI" finished-at="2023-08-18T15:30:11 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BaseURI -->
        <test-method signature="isEmailExistInSuppressionList()[pri:0, instance:com.ripplestreet.AllGetApis.NotificationControllerGetApi@571c5681]" started-at="2023-08-18T15:30:11 IST" name="isEmailExistInSuppressionList" finished-at="2023-08-18T15:30:13 IST" duration-ms="1759" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- isEmailExistInSuppressionList -->
        <test-method is-config="true" signature="StatusCode()[pri:0, instance:com.ripplestreet.AllGetApis.NotificationControllerGetApi@571c5681]" started-at="2023-08-18T15:30:13 IST" name="StatusCode" finished-at="2023-08-18T15:30:13 IST" duration-ms="91" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- StatusCode -->
        <test-method signature="getAllNotification()[pri:127, instance:com.ripplestreet.AllGetApis.NotificationControllerGetApi@571c5681]" started-at="2023-08-18T15:30:13 IST" name="getAllNotification" finished-at="2023-08-18T15:30:15 IST" duration-ms="1298" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getAllNotification -->
        <test-method is-config="true" signature="BaseURI()[pri:0, instance:com.ripplestreet.AllGetApis.NotificationControllerGetApi@571c5681]" started-at="2023-08-18T15:30:13 IST" name="BaseURI" finished-at="2023-08-18T15:30:13 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BaseURI -->
        <test-method is-config="true" signature="StatusCode()[pri:0, instance:com.ripplestreet.AllGetApis.NotificationControllerGetApi@571c5681]" started-at="2023-08-18T15:30:15 IST" name="StatusCode" finished-at="2023-08-18T15:30:15 IST" duration-ms="99" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- StatusCode -->
        <test-method signature="GetCampaignByNotificationId()[pri:128, instance:com.ripplestreet.AllGetApis.NotificationControllerGetApi@571c5681]" started-at="2023-08-18T15:30:15 IST" name="GetCampaignByNotificationId" finished-at="2023-08-18T15:30:16 IST" duration-ms="1426" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GetCampaignByNotificationId -->
        <test-method is-config="true" signature="BaseURI()[pri:0, instance:com.ripplestreet.AllGetApis.NotificationControllerGetApi@571c5681]" started-at="2023-08-18T15:30:15 IST" name="BaseURI" finished-at="2023-08-18T15:30:15 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BaseURI -->
        <test-method is-config="true" signature="StatusCode()[pri:0, instance:com.ripplestreet.AllGetApis.NotificationControllerGetApi@571c5681]" started-at="2023-08-18T15:30:16 IST" name="StatusCode" finished-at="2023-08-18T15:30:16 IST" duration-ms="116" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- StatusCode -->
        <test-method signature="GetStatusByNotificationId()[pri:129, instance:com.ripplestreet.AllGetApis.NotificationControllerGetApi@571c5681]" started-at="2023-08-18T15:30:16 IST" name="GetStatusByNotificationId" finished-at="2023-08-18T15:30:18 IST" duration-ms="1469" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GetStatusByNotificationId -->
        <test-method is-config="true" signature="BaseURI()[pri:0, instance:com.ripplestreet.AllGetApis.NotificationControllerGetApi@571c5681]" started-at="2023-08-18T15:30:16 IST" name="BaseURI" finished-at="2023-08-18T15:30:16 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BaseURI -->
        <test-method is-config="true" signature="StatusCode()[pri:0, instance:com.ripplestreet.AllGetApis.NotificationControllerGetApi@571c5681]" started-at="2023-08-18T15:30:18 IST" name="StatusCode" finished-at="2023-08-18T15:30:18 IST" duration-ms="97" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- StatusCode -->
        <test-method signature="SearchCampaignforNotification()[pri:130, instance:com.ripplestreet.AllGetApis.NotificationControllerGetApi@571c5681]" started-at="2023-08-18T15:30:18 IST" name="SearchCampaignforNotification" finished-at="2023-08-18T15:30:19 IST" duration-ms="1333" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- SearchCampaignforNotification -->
        <test-method is-config="true" signature="BaseURI()[pri:0, instance:com.ripplestreet.AllGetApis.NotificationControllerGetApi@571c5681]" started-at="2023-08-18T15:30:18 IST" name="BaseURI" finished-at="2023-08-18T15:30:18 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BaseURI -->
        <test-method is-config="true" signature="StatusCode()[pri:0, instance:com.ripplestreet.AllGetApis.NotificationControllerGetApi@571c5681]" started-at="2023-08-18T15:30:19 IST" name="StatusCode" finished-at="2023-08-18T15:30:19 IST" duration-ms="113" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- StatusCode -->
        <test-method signature="GetKPIMatrixByCampaignId()[pri:132, instance:com.ripplestreet.AllGetApis.NotificationControllerGetApi@571c5681]" started-at="2023-08-18T15:30:19 IST" name="GetKPIMatrixByCampaignId" finished-at="2023-08-18T15:30:20 IST" duration-ms="1334" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GetKPIMatrixByCampaignId -->
        <test-method is-config="true" signature="BaseURI()[pri:0, instance:com.ripplestreet.AllGetApis.NotificationControllerGetApi@571c5681]" started-at="2023-08-18T15:30:19 IST" name="BaseURI" finished-at="2023-08-18T15:30:19 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BaseURI -->
        <test-method is-config="true" signature="StatusCode()[pri:0, instance:com.ripplestreet.AllGetApis.NotificationControllerGetApi@571c5681]" started-at="2023-08-18T15:30:20 IST" name="StatusCode" finished-at="2023-08-18T15:30:21 IST" duration-ms="97" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- StatusCode -->
      </class> <!-- com.ripplestreet.AllGetApis.NotificationControllerGetApi -->
      <class name="com.ripplestreet.AllGetApis.EventDetailControllerGetApi">
        <test-method is-config="true" signature="BaseURI()[pri:0, instance:com.ripplestreet.AllGetApis.EventDetailControllerGetApi@488d1cd7]" started-at="2023-08-18T15:30:21 IST" name="BaseURI" finished-at="2023-08-18T15:30:21 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BaseURI -->
        <test-method signature="getBasicEventDetailByEventID()[pri:157, instance:com.ripplestreet.AllGetApis.EventDetailControllerGetApi@488d1cd7]" started-at="2023-08-18T15:30:21 IST" name="getBasicEventDetailByEventID" finished-at="2023-08-18T15:30:22 IST" duration-ms="1590" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getBasicEventDetailByEventID -->
        <test-method is-config="true" signature="StatusCode()[pri:0, instance:com.ripplestreet.AllGetApis.EventDetailControllerGetApi@488d1cd7]" started-at="2023-08-18T15:30:22 IST" name="StatusCode" finished-at="2023-08-18T15:30:22 IST" duration-ms="102" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- StatusCode -->
        <test-method signature="findAllmileStonesByEvent()[pri:158, instance:com.ripplestreet.AllGetApis.EventDetailControllerGetApi@488d1cd7]" started-at="2023-08-18T15:30:22 IST" name="findAllmileStonesByEvent" finished-at="2023-08-18T15:30:24 IST" duration-ms="1572" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- findAllmileStonesByEvent -->
        <test-method is-config="true" signature="BaseURI()[pri:0, instance:com.ripplestreet.AllGetApis.EventDetailControllerGetApi@488d1cd7]" started-at="2023-08-18T15:30:22 IST" name="BaseURI" finished-at="2023-08-18T15:30:22 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BaseURI -->
        <test-method is-config="true" signature="StatusCode()[pri:0, instance:com.ripplestreet.AllGetApis.EventDetailControllerGetApi@488d1cd7]" started-at="2023-08-18T15:30:24 IST" name="StatusCode" finished-at="2023-08-18T15:30:24 IST" duration-ms="96" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- StatusCode -->
        <test-method signature="findMileStoneById()[pri:159, instance:com.ripplestreet.AllGetApis.EventDetailControllerGetApi@488d1cd7]" started-at="2023-08-18T15:30:24 IST" name="findMileStoneById" finished-at="2023-08-18T15:30:25 IST" duration-ms="1483" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- findMileStoneById -->
        <test-method is-config="true" signature="BaseURI()[pri:0, instance:com.ripplestreet.AllGetApis.EventDetailControllerGetApi@488d1cd7]" started-at="2023-08-18T15:30:24 IST" name="BaseURI" finished-at="2023-08-18T15:30:24 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BaseURI -->
        <test-method is-config="true" signature="StatusCode()[pri:0, instance:com.ripplestreet.AllGetApis.EventDetailControllerGetApi@488d1cd7]" started-at="2023-08-18T15:30:25 IST" name="StatusCode" finished-at="2023-08-18T15:30:26 IST" duration-ms="108" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- StatusCode -->
        <test-method signature="getListoftargetsByEventId()[pri:160, instance:com.ripplestreet.AllGetApis.EventDetailControllerGetApi@488d1cd7]" started-at="2023-08-18T15:30:26 IST" name="getListoftargetsByEventId" finished-at="2023-08-18T15:30:27 IST" duration-ms="1485" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getListoftargetsByEventId -->
        <test-method is-config="true" signature="BaseURI()[pri:0, instance:com.ripplestreet.AllGetApis.EventDetailControllerGetApi@488d1cd7]" started-at="2023-08-18T15:30:26 IST" name="BaseURI" finished-at="2023-08-18T15:30:26 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BaseURI -->
        <test-method is-config="true" signature="StatusCode()[pri:0, instance:com.ripplestreet.AllGetApis.EventDetailControllerGetApi@488d1cd7]" started-at="2023-08-18T15:30:27 IST" name="StatusCode" finished-at="2023-08-18T15:30:27 IST" duration-ms="100" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- StatusCode -->
        <test-method signature="findAllMilestonesTypeByEventtypes()[pri:161, instance:com.ripplestreet.AllGetApis.EventDetailControllerGetApi@488d1cd7]" started-at="2023-08-18T15:30:27 IST" name="findAllMilestonesTypeByEventtypes" finished-at="2023-08-18T15:30:28 IST" duration-ms="1341" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- findAllMilestonesTypeByEventtypes -->
        <test-method is-config="true" signature="BaseURI()[pri:0, instance:com.ripplestreet.AllGetApis.EventDetailControllerGetApi@488d1cd7]" started-at="2023-08-18T15:30:27 IST" name="BaseURI" finished-at="2023-08-18T15:30:27 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BaseURI -->
        <test-method is-config="true" signature="StatusCode()[pri:0, instance:com.ripplestreet.AllGetApis.EventDetailControllerGetApi@488d1cd7]" started-at="2023-08-18T15:30:28 IST" name="StatusCode" finished-at="2023-08-18T15:30:29 IST" duration-ms="82" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- StatusCode -->
      </class> <!-- com.ripplestreet.AllGetApis.EventDetailControllerGetApi -->
      <class name="com.ripplestreet.AllGetApis.AchievementProgramControllerGetApi">
        <test-method signature="GetListofAchievementPrograms()[pri:62, instance:com.ripplestreet.AllGetApis.AchievementProgramControllerGetApi@41294f8]" started-at="2023-08-18T15:29:35 IST" name="GetListofAchievementPrograms" finished-at="2023-08-18T15:29:36 IST" duration-ms="1548" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GetListofAchievementPrograms -->
        <test-method is-config="true" signature="BaseURI()[pri:0, instance:com.ripplestreet.AllGetApis.AchievementProgramControllerGetApi@41294f8]" started-at="2023-08-18T15:29:35 IST" name="BaseURI" finished-at="2023-08-18T15:29:35 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BaseURI -->
        <test-method is-config="true" signature="StatusCode()[pri:0, instance:com.ripplestreet.AllGetApis.AchievementProgramControllerGetApi@41294f8]" started-at="2023-08-18T15:29:36 IST" name="StatusCode" finished-at="2023-08-18T15:29:36 IST" duration-ms="111" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- StatusCode -->
        <test-method signature="GetListOfAchievementProgramsforAchievementId()[pri:63, instance:com.ripplestreet.AllGetApis.AchievementProgramControllerGetApi@41294f8]" started-at="2023-08-18T15:29:36 IST" name="GetListOfAchievementProgramsforAchievementId" finished-at="2023-08-18T15:29:38 IST" duration-ms="1469" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GetListOfAchievementProgramsforAchievementId -->
        <test-method is-config="true" signature="BaseURI()[pri:0, instance:com.ripplestreet.AllGetApis.AchievementProgramControllerGetApi@41294f8]" started-at="2023-08-18T15:29:36 IST" name="BaseURI" finished-at="2023-08-18T15:29:36 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BaseURI -->
        <test-method is-config="true" signature="StatusCode()[pri:0, instance:com.ripplestreet.AllGetApis.AchievementProgramControllerGetApi@41294f8]" started-at="2023-08-18T15:29:38 IST" name="StatusCode" finished-at="2023-08-18T15:29:38 IST" duration-ms="94" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- StatusCode -->
        <test-method is-config="true" signature="BaseURI()[pri:0, instance:com.ripplestreet.AllGetApis.AchievementProgramControllerGetApi@41294f8]" started-at="2023-08-18T15:29:38 IST" name="BaseURI" finished-at="2023-08-18T15:29:38 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BaseURI -->
        <test-method signature="GetAchievementProgram()[pri:64, instance:com.ripplestreet.AllGetApis.AchievementProgramControllerGetApi@41294f8]" started-at="2023-08-18T15:29:38 IST" name="GetAchievementProgram" finished-at="2023-08-18T15:29:39 IST" duration-ms="1396" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GetAchievementProgram -->
        <test-method is-config="true" signature="StatusCode()[pri:0, instance:com.ripplestreet.AllGetApis.AchievementProgramControllerGetApi@41294f8]" started-at="2023-08-18T15:29:39 IST" name="StatusCode" finished-at="2023-08-18T15:29:39 IST" duration-ms="87" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- StatusCode -->
      </class> <!-- com.ripplestreet.AllGetApis.AchievementProgramControllerGetApi -->
      <class name="com.ripplestreet.AllGetApis.SegmentationFolderControllerGetApi">
        <test-method signature="getAllSegmentFolder()[pri:85, instance:com.ripplestreet.AllGetApis.SegmentationFolderControllerGetApi@5e3d57c7]" started-at="2023-08-18T15:25:28 IST" name="getAllSegmentFolder" finished-at="2023-08-18T15:25:29 IST" duration-ms="1708" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getAllSegmentFolder -->
        <test-method is-config="true" signature="BaseURI()[pri:0, instance:com.ripplestreet.AllGetApis.SegmentationFolderControllerGetApi@5e3d57c7]" started-at="2023-08-18T15:25:28 IST" name="BaseURI" finished-at="2023-08-18T15:25:28 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BaseURI -->
        <test-method is-config="true" signature="StatusCode()[pri:0, instance:com.ripplestreet.AllGetApis.SegmentationFolderControllerGetApi@5e3d57c7]" started-at="2023-08-18T15:25:29 IST" name="StatusCode" finished-at="2023-08-18T15:25:29 IST" duration-ms="139" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- StatusCode -->
        <test-method signature="GetSegmentFolderFromCampaignSegment()[pri:86, instance:com.ripplestreet.AllGetApis.SegmentationFolderControllerGetApi@5e3d57c7]" started-at="2023-08-18T15:25:29 IST" name="GetSegmentFolderFromCampaignSegment" finished-at="2023-08-18T15:25:31 IST" duration-ms="1496" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GetSegmentFolderFromCampaignSegment -->
        <test-method is-config="true" signature="BaseURI()[pri:0, instance:com.ripplestreet.AllGetApis.SegmentationFolderControllerGetApi@5e3d57c7]" started-at="2023-08-18T15:25:29 IST" name="BaseURI" finished-at="2023-08-18T15:25:29 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BaseURI -->
        <test-method is-config="true" signature="StatusCode()[pri:0, instance:com.ripplestreet.AllGetApis.SegmentationFolderControllerGetApi@5e3d57c7]" started-at="2023-08-18T15:25:31 IST" name="StatusCode" finished-at="2023-08-18T15:25:31 IST" duration-ms="116" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- StatusCode -->
      </class> <!-- com.ripplestreet.AllGetApis.SegmentationFolderControllerGetApi -->
      <class name="com.ripplestreet.AllGetApis.LegalControllerGetApi">
        <test-method signature="getLegalDesclaimer()[pri:170, instance:com.ripplestreet.AllGetApis.LegalControllerGetApi@73a8da0f]" started-at="2023-08-18T15:25:18 IST" name="getLegalDesclaimer" finished-at="2023-08-18T15:25:20 IST" duration-ms="1527" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getLegalDesclaimer -->
        <test-method is-config="true" signature="BaseURI()[pri:0, instance:com.ripplestreet.AllGetApis.LegalControllerGetApi@73a8da0f]" started-at="2023-08-18T15:25:18 IST" name="BaseURI" finished-at="2023-08-18T15:25:18 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BaseURI -->
        <test-method is-config="true" signature="StatusCode()[pri:0, instance:com.ripplestreet.AllGetApis.LegalControllerGetApi@73a8da0f]" started-at="2023-08-18T15:25:20 IST" name="StatusCode" finished-at="2023-08-18T15:25:20 IST" duration-ms="119" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- StatusCode -->
      </class> <!-- com.ripplestreet.AllGetApis.LegalControllerGetApi -->
      <class name="com.ripplestreet.AllGetApis.UserStatusControllerGetApi">
        <test-method signature="GetUserStatusActionByEventIdAndPersonId()[pri:0, instance:com.ripplestreet.AllGetApis.UserStatusControllerGetApi@225129c]" started-at="2023-08-18T15:29:39 IST" name="GetUserStatusActionByEventIdAndPersonId" finished-at="2023-08-18T15:29:39 IST" duration-ms="3" status="FAIL">
          <exception class="java.lang.IllegalArgumentException">
            <message>
              <![CDATA[Header value cannot be null]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IllegalArgumentException: Header value cannot be null
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:499)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:480)
at org.codehaus.groovy.reflection.CachedConstructor.invoke(CachedConstructor.java:73)
at org.codehaus.groovy.reflection.CachedConstructor.doConstructorInvoke(CachedConstructor.java:60)
at org.codehaus.groovy.runtime.callsite.ConstructorSite$ConstructorSiteNoUnwrap.callConstructor(ConstructorSite.java:86)
at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCallConstructor(CallSiteArray.java:57)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callConstructor(AbstractCallSite.java:263)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callConstructor(AbstractCallSite.java:277)
at io.restassured.internal.common.assertion.AssertParameter.notNull(AssertParameter.groovy:26)
at io.restassured.internal.common.assertion.AssertParameter$notNull.callStatic(Unknown Source)
at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCallStatic(CallSiteArray.java:53)
at io.restassured.internal.common.assertion.AssertParameter$notNull.callStatic(Unknown Source)
at io.restassured.internal.RequestSpecificationImpl.header(RequestSpecificationImpl.groovy:869)
at com.ripplestreet.AllGetApis.UserStatusControllerGetApi.GetUserStatusActionByEventIdAndPersonId(UserStatusControllerGetApi.java:18)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:664)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:227)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:957)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:200)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:848)
at org.testng.TestRunner.run(TestRunner.java:621)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:443)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:437)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:397)
at org.testng.SuiteRunner.run(SuiteRunner.java:336)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1280)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1200)
at org.testng.TestNG.runSuites(TestNG.java:1114)
at org.testng.TestNG.run(TestNG.java:1082)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalArgumentException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GetUserStatusActionByEventIdAndPersonId -->
        <test-method is-config="true" signature="BaseURI()[pri:0, instance:com.ripplestreet.AllGetApis.UserStatusControllerGetApi@225129c]" started-at="2023-08-18T15:29:39 IST" name="BaseURI" finished-at="2023-08-18T15:29:39 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BaseURI -->
        <test-method is-config="true" signature="StatusCode()[pri:0, instance:com.ripplestreet.AllGetApis.UserStatusControllerGetApi@225129c]" started-at="2023-08-18T15:29:39 IST" name="StatusCode" finished-at="2023-08-18T15:29:39 IST" duration-ms="106" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- StatusCode -->
        <test-method signature="GetUserAndEventDataByEventIdandPersonId()[pri:45, instance:com.ripplestreet.AllGetApis.UserStatusControllerGetApi@225129c]" started-at="2023-08-18T15:29:39 IST" name="GetUserAndEventDataByEventIdandPersonId" finished-at="2023-08-18T15:29:41 IST" duration-ms="1838" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GetUserAndEventDataByEventIdandPersonId -->
        <test-method is-config="true" signature="BaseURI()[pri:0, instance:com.ripplestreet.AllGetApis.UserStatusControllerGetApi@225129c]" started-at="2023-08-18T15:29:39 IST" name="BaseURI" finished-at="2023-08-18T15:29:39 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BaseURI -->
        <test-method is-config="true" signature="StatusCode()[pri:0, instance:com.ripplestreet.AllGetApis.UserStatusControllerGetApi@225129c]" started-at="2023-08-18T15:29:41 IST" name="StatusCode" finished-at="2023-08-18T15:29:41 IST" duration-ms="127" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- StatusCode -->
      </class> <!-- com.ripplestreet.AllGetApis.UserStatusControllerGetApi -->
      <class name="com.ripplestreet.AllGetApis.BenefitControllerGetApi">
        <test-method signature="GetListofBenefit()[pri:65, instance:com.ripplestreet.AllGetApis.BenefitControllerGetApi@332729ad]" started-at="2023-08-18T15:26:17 IST" name="GetListofBenefit" finished-at="2023-08-18T15:26:18 IST" duration-ms="1513" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GetListofBenefit -->
        <test-method is-config="true" signature="BaseURI()[pri:0, instance:com.ripplestreet.AllGetApis.BenefitControllerGetApi@332729ad]" started-at="2023-08-18T15:26:17 IST" name="BaseURI" finished-at="2023-08-18T15:26:17 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BaseURI -->
        <test-method is-config="true" signature="StatusCode()[pri:0, instance:com.ripplestreet.AllGetApis.BenefitControllerGetApi@332729ad]" started-at="2023-08-18T15:26:18 IST" name="StatusCode" finished-at="2023-08-18T15:26:18 IST" duration-ms="182" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- StatusCode -->
      </class> <!-- com.ripplestreet.AllGetApis.BenefitControllerGetApi -->
      <class name="com.ripplestreet.AllGetApis.RewardControllerGetApi">
        <test-method is-config="true" signature="BaseURI()[pri:0, instance:com.ripplestreet.AllGetApis.RewardControllerGetApi@302f7971]" started-at="2023-08-18T15:26:07 IST" name="BaseURI" finished-at="2023-08-18T15:26:07 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BaseURI -->
        <test-method signature="getRewardByName()[pri:111, instance:com.ripplestreet.AllGetApis.RewardControllerGetApi@302f7971]" started-at="2023-08-18T15:26:07 IST" name="getRewardByName" finished-at="2023-08-18T15:26:08 IST" duration-ms="1536" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getRewardByName -->
        <test-method is-config="true" signature="StatusCode()[pri:0, instance:com.ripplestreet.AllGetApis.RewardControllerGetApi@302f7971]" started-at="2023-08-18T15:26:08 IST" name="StatusCode" finished-at="2023-08-18T15:26:08 IST" duration-ms="140" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- StatusCode -->
        <test-method signature="getReward()[pri:112, instance:com.ripplestreet.AllGetApis.RewardControllerGetApi@302f7971]" started-at="2023-08-18T15:26:08 IST" name="getReward" finished-at="2023-08-18T15:26:10 IST" duration-ms="1495" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getReward -->
        <test-method is-config="true" signature="BaseURI()[pri:0, instance:com.ripplestreet.AllGetApis.RewardControllerGetApi@302f7971]" started-at="2023-08-18T15:26:08 IST" name="BaseURI" finished-at="2023-08-18T15:26:08 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BaseURI -->
        <test-method is-config="true" signature="StatusCode()[pri:0, instance:com.ripplestreet.AllGetApis.RewardControllerGetApi@302f7971]" started-at="2023-08-18T15:26:10 IST" name="StatusCode" finished-at="2023-08-18T15:26:10 IST" duration-ms="78" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- StatusCode -->
        <test-method signature="getAllReward()[pri:113, instance:com.ripplestreet.AllGetApis.RewardControllerGetApi@302f7971]" started-at="2023-08-18T15:26:10 IST" name="getAllReward" finished-at="2023-08-18T15:26:12 IST" duration-ms="1767" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getAllReward -->
        <test-method is-config="true" signature="BaseURI()[pri:0, instance:com.ripplestreet.AllGetApis.RewardControllerGetApi@302f7971]" started-at="2023-08-18T15:26:10 IST" name="BaseURI" finished-at="2023-08-18T15:26:10 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BaseURI -->
        <test-method is-config="true" signature="StatusCode()[pri:0, instance:com.ripplestreet.AllGetApis.RewardControllerGetApi@302f7971]" started-at="2023-08-18T15:26:12 IST" name="StatusCode" finished-at="2023-08-18T15:26:12 IST" duration-ms="98" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- StatusCode -->
        <test-method signature="searchItems()[pri:114, instance:com.ripplestreet.AllGetApis.RewardControllerGetApi@302f7971]" started-at="2023-08-18T15:26:12 IST" name="searchItems" finished-at="2023-08-18T15:26:13 IST" duration-ms="1537" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- searchItems -->
        <test-method is-config="true" signature="BaseURI()[pri:0, instance:com.ripplestreet.AllGetApis.RewardControllerGetApi@302f7971]" started-at="2023-08-18T15:26:12 IST" name="BaseURI" finished-at="2023-08-18T15:26:12 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BaseURI -->
        <test-method is-config="true" signature="StatusCode()[pri:0, instance:com.ripplestreet.AllGetApis.RewardControllerGetApi@302f7971]" started-at="2023-08-18T15:26:13 IST" name="StatusCode" finished-at="2023-08-18T15:26:13 IST" duration-ms="118" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- StatusCode -->
        <test-method signature="getRewardSummaryByEventId()[pri:115, instance:com.ripplestreet.AllGetApis.RewardControllerGetApi@302f7971]" started-at="2023-08-18T15:26:13 IST" name="getRewardSummaryByEventId" finished-at="2023-08-18T15:26:15 IST" duration-ms="1517" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getRewardSummaryByEventId -->
        <test-method is-config="true" signature="BaseURI()[pri:0, instance:com.ripplestreet.AllGetApis.RewardControllerGetApi@302f7971]" started-at="2023-08-18T15:26:13 IST" name="BaseURI" finished-at="2023-08-18T15:26:13 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BaseURI -->
        <test-method is-config="true" signature="StatusCode()[pri:0, instance:com.ripplestreet.AllGetApis.RewardControllerGetApi@302f7971]" started-at="2023-08-18T15:26:15 IST" name="StatusCode" finished-at="2023-08-18T15:26:15 IST" duration-ms="113" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- StatusCode -->
        <test-method signature="getRewardCount()[pri:116, instance:com.ripplestreet.AllGetApis.RewardControllerGetApi@302f7971]" started-at="2023-08-18T15:26:15 IST" name="getRewardCount" finished-at="2023-08-18T15:26:17 IST" duration-ms="1524" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getRewardCount -->
        <test-method is-config="true" signature="BaseURI()[pri:0, instance:com.ripplestreet.AllGetApis.RewardControllerGetApi@302f7971]" started-at="2023-08-18T15:26:15 IST" name="BaseURI" finished-at="2023-08-18T15:26:15 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BaseURI -->
        <test-method is-config="true" signature="StatusCode()[pri:0, instance:com.ripplestreet.AllGetApis.RewardControllerGetApi@302f7971]" started-at="2023-08-18T15:26:17 IST" name="StatusCode" finished-at="2023-08-18T15:26:17 IST" duration-ms="122" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- StatusCode -->
      </class> <!-- com.ripplestreet.AllGetApis.RewardControllerGetApi -->
      <class name="com.ripplestreet.AllGetApis.CreativeControllerGetApi">
        <test-method signature="findHeroPlaylistById()[pri:147, instance:com.ripplestreet.AllGetApis.CreativeControllerGetApi@5082d622]" started-at="2023-08-18T15:25:52 IST" name="findHeroPlaylistById" finished-at="2023-08-18T15:25:54 IST" duration-ms="1516" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- findHeroPlaylistById -->
        <test-method is-config="true" signature="BaseURI()[pri:0, instance:com.ripplestreet.AllGetApis.CreativeControllerGetApi@5082d622]" started-at="2023-08-18T15:25:52 IST" name="BaseURI" finished-at="2023-08-18T15:25:52 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BaseURI -->
        <test-method is-config="true" signature="StatusCode()[pri:0, instance:com.ripplestreet.AllGetApis.CreativeControllerGetApi@5082d622]" started-at="2023-08-18T15:25:54 IST" name="StatusCode" finished-at="2023-08-18T15:25:54 IST" duration-ms="116" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- StatusCode -->
        <test-method is-config="true" signature="BaseURI()[pri:0, instance:com.ripplestreet.AllGetApis.CreativeControllerGetApi@5082d622]" started-at="2023-08-18T15:25:54 IST" name="BaseURI" finished-at="2023-08-18T15:25:54 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BaseURI -->
        <test-method signature="findAllHeroPlaylistByModelId()[pri:148, instance:com.ripplestreet.AllGetApis.CreativeControllerGetApi@5082d622]" started-at="2023-08-18T15:25:54 IST" name="findAllHeroPlaylistByModelId" finished-at="2023-08-18T15:25:55 IST" duration-ms="1523" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- findAllHeroPlaylistByModelId -->
        <test-method is-config="true" signature="StatusCode()[pri:0, instance:com.ripplestreet.AllGetApis.CreativeControllerGetApi@5082d622]" started-at="2023-08-18T15:25:55 IST" name="StatusCode" finished-at="2023-08-18T15:25:56 IST" duration-ms="98" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- StatusCode -->
        <test-method signature="getBannerByEventIdandId()[pri:149, instance:com.ripplestreet.AllGetApis.CreativeControllerGetApi@5082d622]" started-at="2023-08-18T15:25:56 IST" name="getBannerByEventIdandId" finished-at="2023-08-18T15:25:57 IST" duration-ms="1433" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getBannerByEventIdandId -->
        <test-method is-config="true" signature="BaseURI()[pri:0, instance:com.ripplestreet.AllGetApis.CreativeControllerGetApi@5082d622]" started-at="2023-08-18T15:25:56 IST" name="BaseURI" finished-at="2023-08-18T15:25:56 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BaseURI -->
        <test-method is-config="true" signature="StatusCode()[pri:0, instance:com.ripplestreet.AllGetApis.CreativeControllerGetApi@5082d622]" started-at="2023-08-18T15:25:57 IST" name="StatusCode" finished-at="2023-08-18T15:25:57 IST" duration-ms="102" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- StatusCode -->
        <test-method signature="getFavorByEventIdAndId()[pri:150, instance:com.ripplestreet.AllGetApis.CreativeControllerGetApi@5082d622]" started-at="2023-08-18T15:25:57 IST" name="getFavorByEventIdAndId" finished-at="2023-08-18T15:25:58 IST" duration-ms="1432" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getFavorByEventIdAndId -->
        <test-method is-config="true" signature="BaseURI()[pri:0, instance:com.ripplestreet.AllGetApis.CreativeControllerGetApi@5082d622]" started-at="2023-08-18T15:25:57 IST" name="BaseURI" finished-at="2023-08-18T15:25:57 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BaseURI -->
        <test-method is-config="true" signature="StatusCode()[pri:0, instance:com.ripplestreet.AllGetApis.CreativeControllerGetApi@5082d622]" started-at="2023-08-18T15:25:58 IST" name="StatusCode" finished-at="2023-08-18T15:25:59 IST" duration-ms="131" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- StatusCode -->
        <test-method signature="finAllBannerByEventId()[pri:151, instance:com.ripplestreet.AllGetApis.CreativeControllerGetApi@5082d622]" started-at="2023-08-18T15:25:59 IST" name="finAllBannerByEventId" finished-at="2023-08-18T15:26:00 IST" duration-ms="1506" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- finAllBannerByEventId -->
        <test-method is-config="true" signature="BaseURI()[pri:0, instance:com.ripplestreet.AllGetApis.CreativeControllerGetApi@5082d622]" started-at="2023-08-18T15:25:59 IST" name="BaseURI" finished-at="2023-08-18T15:25:59 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BaseURI -->
        <test-method is-config="true" signature="StatusCode()[pri:0, instance:com.ripplestreet.AllGetApis.CreativeControllerGetApi@5082d622]" started-at="2023-08-18T15:26:00 IST" name="StatusCode" finished-at="2023-08-18T15:26:00 IST" duration-ms="111" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- StatusCode -->
        <test-method is-config="true" signature="BaseURI()[pri:0, instance:com.ripplestreet.AllGetApis.CreativeControllerGetApi@5082d622]" started-at="2023-08-18T15:26:00 IST" name="BaseURI" finished-at="2023-08-18T15:26:00 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BaseURI -->
        <test-method signature="FinfAllfavousByEventId()[pri:152, instance:com.ripplestreet.AllGetApis.CreativeControllerGetApi@5082d622]" started-at="2023-08-18T15:26:00 IST" name="FinfAllfavousByEventId" finished-at="2023-08-18T15:26:02 IST" duration-ms="1523" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- FinfAllfavousByEventId -->
        <test-method is-config="true" signature="StatusCode()[pri:0, instance:com.ripplestreet.AllGetApis.CreativeControllerGetApi@5082d622]" started-at="2023-08-18T15:26:02 IST" name="StatusCode" finished-at="2023-08-18T15:26:02 IST" duration-ms="150" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- StatusCode -->
        <test-method signature="FindHeroplaylistitemById()[pri:153, instance:com.ripplestreet.AllGetApis.CreativeControllerGetApi@5082d622]" started-at="2023-08-18T15:26:02 IST" name="FindHeroplaylistitemById" finished-at="2023-08-18T15:26:03 IST" duration-ms="1486" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- FindHeroplaylistitemById -->
        <test-method is-config="true" signature="BaseURI()[pri:0, instance:com.ripplestreet.AllGetApis.CreativeControllerGetApi@5082d622]" started-at="2023-08-18T15:26:02 IST" name="BaseURI" finished-at="2023-08-18T15:26:02 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BaseURI -->
        <test-method is-config="true" signature="StatusCode()[pri:0, instance:com.ripplestreet.AllGetApis.CreativeControllerGetApi@5082d622]" started-at="2023-08-18T15:26:03 IST" name="StatusCode" finished-at="2023-08-18T15:26:03 IST" duration-ms="97" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- StatusCode -->
        <test-method signature="findAllHeroPlaylistItemsByPlayListId()[pri:154, instance:com.ripplestreet.AllGetApis.CreativeControllerGetApi@5082d622]" started-at="2023-08-18T15:26:03 IST" name="findAllHeroPlaylistItemsByPlayListId" finished-at="2023-08-18T15:26:05 IST" duration-ms="1401" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- findAllHeroPlaylistItemsByPlayListId -->
        <test-method is-config="true" signature="BaseURI()[pri:0, instance:com.ripplestreet.AllGetApis.CreativeControllerGetApi@5082d622]" started-at="2023-08-18T15:26:03 IST" name="BaseURI" finished-at="2023-08-18T15:26:03 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BaseURI -->
        <test-method is-config="true" signature="StatusCode()[pri:0, instance:com.ripplestreet.AllGetApis.CreativeControllerGetApi@5082d622]" started-at="2023-08-18T15:26:05 IST" name="StatusCode" finished-at="2023-08-18T15:26:05 IST" duration-ms="121" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- StatusCode -->
      </class> <!-- com.ripplestreet.AllGetApis.CreativeControllerGetApi -->
      <class name="com.ripplestreet.AllGetApis.CouponControllerGetApi">
        <test-method is-config="true" signature="BaseURI()[pri:0, instance:com.ripplestreet.AllGetApis.CouponControllerGetApi@147a5d08]" started-at="2023-08-18T15:24:49 IST" name="BaseURI" finished-at="2023-08-18T15:24:49 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BaseURI -->
        <test-method signature="getCouponsByActivityId()[pri:91, instance:com.ripplestreet.AllGetApis.CouponControllerGetApi@147a5d08]" started-at="2023-08-18T15:24:49 IST" name="getCouponsByActivityId" finished-at="2023-08-18T15:24:51 IST" duration-ms="1532" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getCouponsByActivityId -->
        <test-method is-config="true" signature="StatusCode()[pri:0, instance:com.ripplestreet.AllGetApis.CouponControllerGetApi@147a5d08]" started-at="2023-08-18T15:24:51 IST" name="StatusCode" finished-at="2023-08-18T15:24:51 IST" duration-ms="152" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- StatusCode -->
      </class> <!-- com.ripplestreet.AllGetApis.CouponControllerGetApi -->
      <class name="com.ripplestreet.AllGetApis.RewardPreferencesControllerGetApi">
        <test-method is-config="true" signature="authToken()[pri:0, instance:com.ripplestreet.AllGetApis.RewardPreferencesControllerGetApi@6cb6decd]" started-at="2023-08-18T15:24:34 IST" name="authToken" finished-at="2023-08-18T15:24:38 IST" duration-ms="3997" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- authToken -->
        <test-method is-config="true" signature="BaseURI()[pri:0, instance:com.ripplestreet.AllGetApis.RewardPreferencesControllerGetApi@6cb6decd]" started-at="2023-08-18T15:24:38 IST" name="BaseURI" finished-at="2023-08-18T15:24:38 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BaseURI -->
        <test-method signature="getRewardPreferences()[pri:122, instance:com.ripplestreet.AllGetApis.RewardPreferencesControllerGetApi@6cb6decd]" started-at="2023-08-18T15:24:38 IST" name="getRewardPreferences" finished-at="2023-08-18T15:24:40 IST" duration-ms="1690" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getRewardPreferences -->
        <test-method is-config="true" signature="StatusCode()[pri:0, instance:com.ripplestreet.AllGetApis.RewardPreferencesControllerGetApi@6cb6decd]" started-at="2023-08-18T15:24:40 IST" name="StatusCode" finished-at="2023-08-18T15:24:41 IST" duration-ms="1095" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- StatusCode -->
      </class> <!-- com.ripplestreet.AllGetApis.RewardPreferencesControllerGetApi -->
      <class name="com.ripplestreet.AllGetApis.TriggerControllerGetApi">
        <test-method is-config="true" signature="BaseURI()[pri:0, instance:com.ripplestreet.AllGetApis.TriggerControllerGetApi@7aaca91a]" started-at="2023-08-18T15:28:47 IST" name="BaseURI" finished-at="2023-08-18T15:28:47 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BaseURI -->
        <test-method signature="GetAllTriggers()[pri:88, instance:com.ripplestreet.AllGetApis.TriggerControllerGetApi@7aaca91a]" started-at="2023-08-18T15:28:47 IST" name="GetAllTriggers" finished-at="2023-08-18T15:28:48 IST" duration-ms="1414" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GetAllTriggers -->
        <test-method is-config="true" signature="StatusCode()[pri:0, instance:com.ripplestreet.AllGetApis.TriggerControllerGetApi@7aaca91a]" started-at="2023-08-18T15:28:48 IST" name="StatusCode" finished-at="2023-08-18T15:28:48 IST" duration-ms="114" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- StatusCode -->
        <test-method signature="getTriggerInfoByTableNameAndOperation()[pri:90, instance:com.ripplestreet.AllGetApis.TriggerControllerGetApi@7aaca91a]" started-at="2023-08-18T15:28:48 IST" name="getTriggerInfoByTableNameAndOperation" finished-at="2023-08-18T15:28:50 IST" duration-ms="1726" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getTriggerInfoByTableNameAndOperation -->
        <test-method is-config="true" signature="BaseURI()[pri:0, instance:com.ripplestreet.AllGetApis.TriggerControllerGetApi@7aaca91a]" started-at="2023-08-18T15:28:48 IST" name="BaseURI" finished-at="2023-08-18T15:28:48 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BaseURI -->
        <test-method is-config="true" signature="StatusCode()[pri:0, instance:com.ripplestreet.AllGetApis.TriggerControllerGetApi@7aaca91a]" started-at="2023-08-18T15:28:50 IST" name="StatusCode" finished-at="2023-08-18T15:28:50 IST" duration-ms="120" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- StatusCode -->
        <test-method signature="getTriggerDefinition()[pri:189, instance:com.ripplestreet.AllGetApis.TriggerControllerGetApi@7aaca91a]" started-at="2023-08-18T15:28:50 IST" name="getTriggerDefinition" finished-at="2023-08-18T15:28:51 IST" duration-ms="1518" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getTriggerDefinition -->
        <test-method is-config="true" signature="BaseURI()[pri:0, instance:com.ripplestreet.AllGetApis.TriggerControllerGetApi@7aaca91a]" started-at="2023-08-18T15:28:50 IST" name="BaseURI" finished-at="2023-08-18T15:28:50 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BaseURI -->
        <test-method is-config="true" signature="StatusCode()[pri:0, instance:com.ripplestreet.AllGetApis.TriggerControllerGetApi@7aaca91a]" started-at="2023-08-18T15:28:51 IST" name="StatusCode" finished-at="2023-08-18T15:28:52 IST" duration-ms="98" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- StatusCode -->
      </class> <!-- com.ripplestreet.AllGetApis.TriggerControllerGetApi -->
      <class name="com.ripplestreet.AllGetApis.ReservationControllerGetApi">
        <test-method is-config="true" signature="BaseURI()[pri:0, instance:com.ripplestreet.AllGetApis.ReservationControllerGetApi@7cbd9d24]" started-at="2023-08-18T15:24:56 IST" name="BaseURI" finished-at="2023-08-18T15:24:56 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BaseURI -->
        <test-method signature="GetUserStatusCountbyEventId()[pri:41, instance:com.ripplestreet.AllGetApis.ReservationControllerGetApi@7cbd9d24]" started-at="2023-08-18T15:24:56 IST" name="GetUserStatusCountbyEventId" finished-at="2023-08-18T15:24:57 IST" duration-ms="1509" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GetUserStatusCountbyEventId -->
        <test-method is-config="true" signature="StatusCode()[pri:0, instance:com.ripplestreet.AllGetApis.ReservationControllerGetApi@7cbd9d24]" started-at="2023-08-18T15:24:57 IST" name="StatusCode" finished-at="2023-08-18T15:24:58 IST" duration-ms="140" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- StatusCode -->
      </class> <!-- com.ripplestreet.AllGetApis.ReservationControllerGetApi -->
      <class name="com.ripplestreet.AllGetApis.SwagControllerGetApi">
        <test-method signature="getSwag()[pri:123, instance:com.ripplestreet.AllGetApis.SwagControllerGetApi@258d79be]" started-at="2023-08-18T15:28:01 IST" name="getSwag" finished-at="2023-08-18T15:28:02 IST" duration-ms="1540" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getSwag -->
        <test-method is-config="true" signature="BaseURI()[pri:0, instance:com.ripplestreet.AllGetApis.SwagControllerGetApi@258d79be]" started-at="2023-08-18T15:28:01 IST" name="BaseURI" finished-at="2023-08-18T15:28:01 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BaseURI -->
        <test-method is-config="true" signature="StatusCode()[pri:0, instance:com.ripplestreet.AllGetApis.SwagControllerGetApi@258d79be]" started-at="2023-08-18T15:28:02 IST" name="StatusCode" finished-at="2023-08-18T15:28:03 IST" duration-ms="128" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- StatusCode -->
        <test-method signature="getSwagList()[pri:124, instance:com.ripplestreet.AllGetApis.SwagControllerGetApi@258d79be]" started-at="2023-08-18T15:28:03 IST" name="getSwagList" finished-at="2023-08-18T15:28:04 IST" duration-ms="1509" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getSwagList -->
        <test-method is-config="true" signature="BaseURI()[pri:0, instance:com.ripplestreet.AllGetApis.SwagControllerGetApi@258d79be]" started-at="2023-08-18T15:28:03 IST" name="BaseURI" finished-at="2023-08-18T15:28:03 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BaseURI -->
        <test-method is-config="true" signature="StatusCode()[pri:0, instance:com.ripplestreet.AllGetApis.SwagControllerGetApi@258d79be]" started-at="2023-08-18T15:28:04 IST" name="StatusCode" finished-at="2023-08-18T15:28:04 IST" duration-ms="135" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- StatusCode -->
      </class> <!-- com.ripplestreet.AllGetApis.SwagControllerGetApi -->
      <class name="com.ripplestreet.AllGetApis.AudienceControllerGetApi">
        <test-method signature="getParticipantsWithApplicationsForEvent()[pri:20, instance:com.ripplestreet.AllGetApis.AudienceControllerGetApi@4f6f416f]" started-at="2023-08-18T15:28:25 IST" name="getParticipantsWithApplicationsForEvent" finished-at="2023-08-18T15:28:27 IST" duration-ms="1514" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getParticipantsWithApplicationsForEvent -->
        <test-method is-config="true" signature="BaseURI()[pri:0, instance:com.ripplestreet.AllGetApis.AudienceControllerGetApi@4f6f416f]" started-at="2023-08-18T15:28:25 IST" name="BaseURI" finished-at="2023-08-18T15:28:25 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BaseURI -->
        <test-method is-config="true" signature="StatusCode()[pri:0, instance:com.ripplestreet.AllGetApis.AudienceControllerGetApi@4f6f416f]" started-at="2023-08-18T15:28:27 IST" name="StatusCode" finished-at="2023-08-18T15:28:27 IST" duration-ms="101" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- StatusCode -->
      </class> <!-- com.ripplestreet.AllGetApis.AudienceControllerGetApi -->
      <class name="com.ripplestreet.AllGetApis.SegmentationJobsControllerGetApi">
        <test-method signature="getAllSegmentJobsForSegmentId()[pri:87, instance:com.ripplestreet.AllGetApis.SegmentationJobsControllerGetApi@6057aebb]" started-at="2023-08-18T15:26:44 IST" name="getAllSegmentJobsForSegmentId" finished-at="2023-08-18T15:26:46 IST" duration-ms="1811" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getAllSegmentJobsForSegmentId -->
        <test-method is-config="true" signature="BaseURI()[pri:0, instance:com.ripplestreet.AllGetApis.SegmentationJobsControllerGetApi@6057aebb]" started-at="2023-08-18T15:26:44 IST" name="BaseURI" finished-at="2023-08-18T15:26:44 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BaseURI -->
        <test-method is-config="true" signature="StatusCode()[pri:0, instance:com.ripplestreet.AllGetApis.SegmentationJobsControllerGetApi@6057aebb]" started-at="2023-08-18T15:26:46 IST" name="StatusCode" finished-at="2023-08-18T15:26:46 IST" duration-ms="146" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- StatusCode -->
      </class> <!-- com.ripplestreet.AllGetApis.SegmentationJobsControllerGetApi -->
      <class name="com.ripplestreet.AllGetApis.AchievementControllerGetApi">
        <test-method signature="GetListofAchievements()[pri:59, instance:com.ripplestreet.AllGetApis.AchievementControllerGetApi@7d286fb6]" started-at="2023-08-18T15:28:33 IST" name="GetListofAchievements" finished-at="2023-08-18T15:28:35 IST" duration-ms="1503" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GetListofAchievements -->
        <test-method is-config="true" signature="BaseURI()[pri:0, instance:com.ripplestreet.AllGetApis.AchievementControllerGetApi@7d286fb6]" started-at="2023-08-18T15:28:33 IST" name="BaseURI" finished-at="2023-08-18T15:28:33 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BaseURI -->
        <test-method is-config="true" signature="StatusCode()[pri:0, instance:com.ripplestreet.AllGetApis.AchievementControllerGetApi@7d286fb6]" started-at="2023-08-18T15:28:35 IST" name="StatusCode" finished-at="2023-08-18T15:28:35 IST" duration-ms="119" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- StatusCode -->
        <test-method signature="getAchivements()[pri:60, instance:com.ripplestreet.AllGetApis.AchievementControllerGetApi@7d286fb6]" started-at="2023-08-18T15:28:35 IST" name="getAchivements" finished-at="2023-08-18T15:28:36 IST" duration-ms="1517" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getAchivements -->
        <test-method is-config="true" signature="BaseURI()[pri:0, instance:com.ripplestreet.AllGetApis.AchievementControllerGetApi@7d286fb6]" started-at="2023-08-18T15:28:35 IST" name="BaseURI" finished-at="2023-08-18T15:28:35 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BaseURI -->
        <test-method is-config="true" signature="StatusCode()[pri:0, instance:com.ripplestreet.AllGetApis.AchievementControllerGetApi@7d286fb6]" started-at="2023-08-18T15:28:36 IST" name="StatusCode" finished-at="2023-08-18T15:28:37 IST" duration-ms="122" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- StatusCode -->
        <test-method signature="GetListofAchievementsforTriggerId()[pri:61, instance:com.ripplestreet.AllGetApis.AchievementControllerGetApi@7d286fb6]" started-at="2023-08-18T15:28:37 IST" name="GetListofAchievementsforTriggerId" finished-at="2023-08-18T15:28:38 IST" duration-ms="1617" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GetListofAchievementsforTriggerId -->
        <test-method is-config="true" signature="BaseURI()[pri:0, instance:com.ripplestreet.AllGetApis.AchievementControllerGetApi@7d286fb6]" started-at="2023-08-18T15:28:37 IST" name="BaseURI" finished-at="2023-08-18T15:28:37 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BaseURI -->
        <test-method is-config="true" signature="StatusCode()[pri:0, instance:com.ripplestreet.AllGetApis.AchievementControllerGetApi@7d286fb6]" started-at="2023-08-18T15:28:38 IST" name="StatusCode" finished-at="2023-08-18T15:28:38 IST" duration-ms="124" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- StatusCode -->
      </class> <!-- com.ripplestreet.AllGetApis.AchievementControllerGetApi -->
      <class name="com.ripplestreet.AllGetApis.EnrollmentControllerGetApi">
        <test-method signature="EnrollmentList()[pri:32, instance:com.ripplestreet.AllGetApis.EnrollmentControllerGetApi@6c0d7c83]" started-at="2023-08-18T15:28:07 IST" name="EnrollmentList" finished-at="2023-08-18T15:28:09 IST" duration-ms="1535" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- EnrollmentList -->
        <test-method is-config="true" signature="BaseURI()[pri:0, instance:com.ripplestreet.AllGetApis.EnrollmentControllerGetApi@6c0d7c83]" started-at="2023-08-18T15:28:07 IST" name="BaseURI" finished-at="2023-08-18T15:28:07 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BaseURI -->
        <test-method is-config="true" signature="StatusCode()[pri:0, instance:com.ripplestreet.AllGetApis.EnrollmentControllerGetApi@6c0d7c83]" started-at="2023-08-18T15:28:09 IST" name="StatusCode" finished-at="2023-08-18T15:28:09 IST" duration-ms="109" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- StatusCode -->
        <test-method is-config="true" signature="BaseURI()[pri:0, instance:com.ripplestreet.AllGetApis.EnrollmentControllerGetApi@6c0d7c83]" started-at="2023-08-18T15:28:09 IST" name="BaseURI" finished-at="2023-08-18T15:28:09 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BaseURI -->
        <test-method signature="GetUserEnrollments()[pri:33, instance:com.ripplestreet.AllGetApis.EnrollmentControllerGetApi@6c0d7c83]" started-at="2023-08-18T15:28:09 IST" name="GetUserEnrollments" finished-at="2023-08-18T15:28:10 IST" duration-ms="1425" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GetUserEnrollments -->
        <test-method is-config="true" signature="StatusCode()[pri:0, instance:com.ripplestreet.AllGetApis.EnrollmentControllerGetApi@6c0d7c83]" started-at="2023-08-18T15:28:10 IST" name="StatusCode" finished-at="2023-08-18T15:28:10 IST" duration-ms="85" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- StatusCode -->
      </class> <!-- com.ripplestreet.AllGetApis.EnrollmentControllerGetApi -->
      <class name="com.ripplestreet.AllGetApis.SurveyControllerGetApi">
        <test-method signature="getSurveyStatusByEventIdAndPid()[pri:179, instance:com.ripplestreet.AllGetApis.SurveyControllerGetApi@6853425f]" started-at="2023-08-18T15:27:28 IST" name="getSurveyStatusByEventIdAndPid" finished-at="2023-08-18T15:27:29 IST" duration-ms="1513" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getSurveyStatusByEventIdAndPid -->
        <test-method is-config="true" signature="BaseURI()[pri:0, instance:com.ripplestreet.AllGetApis.SurveyControllerGetApi@6853425f]" started-at="2023-08-18T15:27:28 IST" name="BaseURI" finished-at="2023-08-18T15:27:28 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BaseURI -->
        <test-method is-config="true" signature="StatusCode()[pri:0, instance:com.ripplestreet.AllGetApis.SurveyControllerGetApi@6853425f]" started-at="2023-08-18T15:27:29 IST" name="StatusCode" finished-at="2023-08-18T15:27:29 IST" duration-ms="110" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- StatusCode -->
        <test-method signature="getAllLinksByEventId()[pri:180, instance:com.ripplestreet.AllGetApis.SurveyControllerGetApi@6853425f]" started-at="2023-08-18T15:27:29 IST" name="getAllLinksByEventId" finished-at="2023-08-18T15:27:31 IST" duration-ms="1481" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getAllLinksByEventId -->
        <test-method is-config="true" signature="BaseURI()[pri:0, instance:com.ripplestreet.AllGetApis.SurveyControllerGetApi@6853425f]" started-at="2023-08-18T15:27:29 IST" name="BaseURI" finished-at="2023-08-18T15:27:29 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BaseURI -->
        <test-method is-config="true" signature="StatusCode()[pri:0, instance:com.ripplestreet.AllGetApis.SurveyControllerGetApi@6853425f]" started-at="2023-08-18T15:27:31 IST" name="StatusCode" finished-at="2023-08-18T15:27:31 IST" duration-ms="102" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- StatusCode -->
        <test-method signature="getSurveyListByEventIdAndPid()[pri:181, instance:com.ripplestreet.AllGetApis.SurveyControllerGetApi@6853425f]" started-at="2023-08-18T15:27:31 IST" name="getSurveyListByEventIdAndPid" finished-at="2023-08-18T15:27:32 IST" duration-ms="1375" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getSurveyListByEventIdAndPid -->
        <test-method is-config="true" signature="BaseURI()[pri:0, instance:com.ripplestreet.AllGetApis.SurveyControllerGetApi@6853425f]" started-at="2023-08-18T15:27:31 IST" name="BaseURI" finished-at="2023-08-18T15:27:31 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BaseURI -->
        <test-method is-config="true" signature="StatusCode()[pri:0, instance:com.ripplestreet.AllGetApis.SurveyControllerGetApi@6853425f]" started-at="2023-08-18T15:27:32 IST" name="StatusCode" finished-at="2023-08-18T15:27:32 IST" duration-ms="99" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- StatusCode -->
      </class> <!-- com.ripplestreet.AllGetApis.SurveyControllerGetApi -->
      <class name="com.ripplestreet.AllGetApis.FAQcontrollerGetApi">
        <test-method signature="getFAQbyEventId()[pri:163, instance:com.ripplestreet.AllGetApis.FAQcontrollerGetApi@53251a66]" started-at="2023-08-18T15:27:16 IST" name="getFAQbyEventId" finished-at="2023-08-18T15:27:18 IST" duration-ms="1503" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getFAQbyEventId -->
        <test-method is-config="true" signature="BaseURI()[pri:0, instance:com.ripplestreet.AllGetApis.FAQcontrollerGetApi@53251a66]" started-at="2023-08-18T15:27:16 IST" name="BaseURI" finished-at="2023-08-18T15:27:16 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BaseURI -->
        <test-method is-config="true" signature="StatusCode()[pri:0, instance:com.ripplestreet.AllGetApis.FAQcontrollerGetApi@53251a66]" started-at="2023-08-18T15:27:18 IST" name="StatusCode" finished-at="2023-08-18T15:27:18 IST" duration-ms="144" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- StatusCode -->
        <test-method signature="getFAQById()[pri:164, instance:com.ripplestreet.AllGetApis.FAQcontrollerGetApi@53251a66]" started-at="2023-08-18T15:27:18 IST" name="getFAQById" finished-at="2023-08-18T15:27:20 IST" duration-ms="1493" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getFAQById -->
        <test-method is-config="true" signature="BaseURI()[pri:0, instance:com.ripplestreet.AllGetApis.FAQcontrollerGetApi@53251a66]" started-at="2023-08-18T15:27:18 IST" name="BaseURI" finished-at="2023-08-18T15:27:18 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BaseURI -->
        <test-method is-config="true" signature="StatusCode()[pri:0, instance:com.ripplestreet.AllGetApis.FAQcontrollerGetApi@53251a66]" started-at="2023-08-18T15:27:20 IST" name="StatusCode" finished-at="2023-08-18T15:27:20 IST" duration-ms="130" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- StatusCode -->
        <test-method signature="GetFAQDetailByEventIdforCommunity()[pri:165, instance:com.ripplestreet.AllGetApis.FAQcontrollerGetApi@53251a66]" started-at="2023-08-18T15:27:20 IST" name="GetFAQDetailByEventIdforCommunity" finished-at="2023-08-18T15:27:21 IST" duration-ms="1505" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GetFAQDetailByEventIdforCommunity -->
        <test-method is-config="true" signature="BaseURI()[pri:0, instance:com.ripplestreet.AllGetApis.FAQcontrollerGetApi@53251a66]" started-at="2023-08-18T15:27:20 IST" name="BaseURI" finished-at="2023-08-18T15:27:20 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BaseURI -->
        <test-method is-config="true" signature="StatusCode()[pri:0, instance:com.ripplestreet.AllGetApis.FAQcontrollerGetApi@53251a66]" started-at="2023-08-18T15:27:21 IST" name="StatusCode" finished-at="2023-08-18T15:27:21 IST" duration-ms="130" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- StatusCode -->
        <test-method signature="getlistofFaqTopicbyFaqId()[pri:166, instance:com.ripplestreet.AllGetApis.FAQcontrollerGetApi@53251a66]" started-at="2023-08-18T15:27:21 IST" name="getlistofFaqTopicbyFaqId" finished-at="2023-08-18T15:27:23 IST" duration-ms="1507" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getlistofFaqTopicbyFaqId -->
        <test-method is-config="true" signature="BaseURI()[pri:0, instance:com.ripplestreet.AllGetApis.FAQcontrollerGetApi@53251a66]" started-at="2023-08-18T15:27:21 IST" name="BaseURI" finished-at="2023-08-18T15:27:21 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BaseURI -->
        <test-method is-config="true" signature="StatusCode()[pri:0, instance:com.ripplestreet.AllGetApis.FAQcontrollerGetApi@53251a66]" started-at="2023-08-18T15:27:23 IST" name="StatusCode" finished-at="2023-08-18T15:27:23 IST" duration-ms="111" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- StatusCode -->
        <test-method is-config="true" signature="BaseURI()[pri:0, instance:com.ripplestreet.AllGetApis.FAQcontrollerGetApi@53251a66]" started-at="2023-08-18T15:27:23 IST" name="BaseURI" finished-at="2023-08-18T15:27:23 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BaseURI -->
        <test-method signature="FAQTopicByID()[pri:167, instance:com.ripplestreet.AllGetApis.FAQcontrollerGetApi@53251a66]" started-at="2023-08-18T15:27:23 IST" name="FAQTopicByID" finished-at="2023-08-18T15:27:24 IST" duration-ms="1525" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- FAQTopicByID -->
        <test-method is-config="true" signature="StatusCode()[pri:0, instance:com.ripplestreet.AllGetApis.FAQcontrollerGetApi@53251a66]" started-at="2023-08-18T15:27:24 IST" name="StatusCode" finished-at="2023-08-18T15:27:25 IST" duration-ms="114" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- StatusCode -->
        <test-method signature="GetlistofFaqTopicItemsbyFaqTopicId()[pri:168, instance:com.ripplestreet.AllGetApis.FAQcontrollerGetApi@53251a66]" started-at="2023-08-18T15:27:25 IST" name="GetlistofFaqTopicItemsbyFaqTopicId" finished-at="2023-08-18T15:27:26 IST" duration-ms="1317" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GetlistofFaqTopicItemsbyFaqTopicId -->
        <test-method is-config="true" signature="BaseURI()[pri:0, instance:com.ripplestreet.AllGetApis.FAQcontrollerGetApi@53251a66]" started-at="2023-08-18T15:27:25 IST" name="BaseURI" finished-at="2023-08-18T15:27:25 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BaseURI -->
        <test-method is-config="true" signature="StatusCode()[pri:0, instance:com.ripplestreet.AllGetApis.FAQcontrollerGetApi@53251a66]" started-at="2023-08-18T15:27:26 IST" name="StatusCode" finished-at="2023-08-18T15:27:26 IST" duration-ms="97" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- StatusCode -->
        <test-method is-config="true" signature="BaseURI()[pri:0, instance:com.ripplestreet.AllGetApis.FAQcontrollerGetApi@53251a66]" started-at="2023-08-18T15:27:26 IST" name="BaseURI" finished-at="2023-08-18T15:27:26 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BaseURI -->
        <test-method signature="getFAQTopicitemsById()[pri:169, instance:com.ripplestreet.AllGetApis.FAQcontrollerGetApi@53251a66]" started-at="2023-08-18T15:27:26 IST" name="getFAQTopicitemsById" finished-at="2023-08-18T15:27:28 IST" duration-ms="1541" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getFAQTopicitemsById -->
        <test-method is-config="true" signature="StatusCode()[pri:0, instance:com.ripplestreet.AllGetApis.FAQcontrollerGetApi@53251a66]" started-at="2023-08-18T15:27:28 IST" name="StatusCode" finished-at="2023-08-18T15:27:28 IST" duration-ms="122" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- StatusCode -->
      </class> <!-- com.ripplestreet.AllGetApis.FAQcontrollerGetApi -->
      <class name="com.ripplestreet.AllGetApis.DiscussionControllerGetApi">
        <test-method is-config="true" signature="BaseURI()[pri:0, instance:com.ripplestreet.AllGetApis.DiscussionControllerGetApi@5a5338df]" started-at="2023-08-18T15:25:42 IST" name="BaseURI" finished-at="2023-08-18T15:25:42 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BaseURI -->
        <test-method signature="getDiscussionListByFilters()[pri:55, instance:com.ripplestreet.AllGetApis.DiscussionControllerGetApi@5a5338df]" started-at="2023-08-18T15:25:42 IST" name="getDiscussionListByFilters" finished-at="2023-08-18T15:25:43 IST" duration-ms="1427" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getDiscussionListByFilters -->
        <test-method is-config="true" signature="StatusCode()[pri:0, instance:com.ripplestreet.AllGetApis.DiscussionControllerGetApi@5a5338df]" started-at="2023-08-18T15:25:43 IST" name="StatusCode" finished-at="2023-08-18T15:25:43 IST" duration-ms="125" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- StatusCode -->
        <test-method signature="getDiscussion()[pri:56, instance:com.ripplestreet.AllGetApis.DiscussionControllerGetApi@5a5338df]" started-at="2023-08-18T15:25:43 IST" name="getDiscussion" finished-at="2023-08-18T15:25:45 IST" duration-ms="1819" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getDiscussion -->
        <test-method is-config="true" signature="BaseURI()[pri:0, instance:com.ripplestreet.AllGetApis.DiscussionControllerGetApi@5a5338df]" started-at="2023-08-18T15:25:43 IST" name="BaseURI" finished-at="2023-08-18T15:25:43 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BaseURI -->
        <test-method is-config="true" signature="StatusCode()[pri:0, instance:com.ripplestreet.AllGetApis.DiscussionControllerGetApi@5a5338df]" started-at="2023-08-18T15:25:45 IST" name="StatusCode" finished-at="2023-08-18T15:25:45 IST" duration-ms="110" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- StatusCode -->
      </class> <!-- com.ripplestreet.AllGetApis.DiscussionControllerGetApi -->
      <class name="com.ripplestreet.AllGetApis.EventControllerGetApi">
        <test-method signature="getAllEvents()[pri:0, instance:com.ripplestreet.AllGetApis.EventControllerGetApi@63eef88a]" started-at="2023-08-18T15:26:46 IST" name="getAllEvents" finished-at="2023-08-18T15:26:47 IST" duration-ms="1351" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getAllEvents -->
        <test-method is-config="true" signature="BaseURI()[pri:0, instance:com.ripplestreet.AllGetApis.EventControllerGetApi@63eef88a]" started-at="2023-08-18T15:26:46 IST" name="BaseURI" finished-at="2023-08-18T15:26:46 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BaseURI -->
        <test-method is-config="true" signature="StatusCode()[pri:0, instance:com.ripplestreet.AllGetApis.EventControllerGetApi@63eef88a]" started-at="2023-08-18T15:26:47 IST" name="StatusCode" finished-at="2023-08-18T15:26:47 IST" duration-ms="132" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- StatusCode -->
        <test-method signature="getAllSpotLightEventDetail()[pri:0, instance:com.ripplestreet.AllGetApis.EventControllerGetApi@63eef88a]" started-at="2023-08-18T15:26:47 IST" name="getAllSpotLightEventDetail" finished-at="2023-08-18T15:26:49 IST" duration-ms="1543" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getAllSpotLightEventDetail -->
        <test-method is-config="true" signature="BaseURI()[pri:0, instance:com.ripplestreet.AllGetApis.EventControllerGetApi@63eef88a]" started-at="2023-08-18T15:26:47 IST" name="BaseURI" finished-at="2023-08-18T15:26:47 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BaseURI -->
        <test-method is-config="true" signature="StatusCode()[pri:0, instance:com.ripplestreet.AllGetApis.EventControllerGetApi@63eef88a]" started-at="2023-08-18T15:26:49 IST" name="StatusCode" finished-at="2023-08-18T15:26:49 IST" duration-ms="132" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- StatusCode -->
        <test-method signature="getEventDetailforWorkflow()[pri:0, instance:com.ripplestreet.AllGetApis.EventControllerGetApi@63eef88a]" started-at="2023-08-18T15:26:49 IST" name="getEventDetailforWorkflow" finished-at="2023-08-18T15:26:51 IST" duration-ms="1504" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getEventDetailforWorkflow -->
        <test-method is-config="true" signature="BaseURI()[pri:0, instance:com.ripplestreet.AllGetApis.EventControllerGetApi@63eef88a]" started-at="2023-08-18T15:26:49 IST" name="BaseURI" finished-at="2023-08-18T15:26:49 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BaseURI -->
        <test-method is-config="true" signature="StatusCode()[pri:0, instance:com.ripplestreet.AllGetApis.EventControllerGetApi@63eef88a]" started-at="2023-08-18T15:26:51 IST" name="StatusCode" finished-at="2023-08-18T15:26:51 IST" duration-ms="122" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- StatusCode -->
        <test-method signature="getStatus()[pri:0, instance:com.ripplestreet.AllGetApis.EventControllerGetApi@63eef88a]" started-at="2023-08-18T15:26:51 IST" name="getStatus" finished-at="2023-08-18T15:26:52 IST" duration-ms="1515" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getStatus -->
        <test-method is-config="true" signature="BaseURI()[pri:0, instance:com.ripplestreet.AllGetApis.EventControllerGetApi@63eef88a]" started-at="2023-08-18T15:26:51 IST" name="BaseURI" finished-at="2023-08-18T15:26:51 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BaseURI -->
        <test-method is-config="true" signature="StatusCode()[pri:0, instance:com.ripplestreet.AllGetApis.EventControllerGetApi@63eef88a]" started-at="2023-08-18T15:26:52 IST" name="StatusCode" finished-at="2023-08-18T15:26:52 IST" duration-ms="147" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- StatusCode -->
        <test-method signature="getAllCurrentMileStoneByEvent()[pri:1, instance:com.ripplestreet.AllGetApis.EventControllerGetApi@63eef88a]" started-at="2023-08-18T15:26:52 IST" name="getAllCurrentMileStoneByEvent" finished-at="2023-08-18T15:26:54 IST" duration-ms="1490" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getAllCurrentMileStoneByEvent -->
        <test-method is-config="true" signature="BaseURI()[pri:0, instance:com.ripplestreet.AllGetApis.EventControllerGetApi@63eef88a]" started-at="2023-08-18T15:26:52 IST" name="BaseURI" finished-at="2023-08-18T15:26:52 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BaseURI -->
        <test-method is-config="true" signature="StatusCode()[pri:0, instance:com.ripplestreet.AllGetApis.EventControllerGetApi@63eef88a]" started-at="2023-08-18T15:26:54 IST" name="StatusCode" finished-at="2023-08-18T15:26:54 IST" duration-ms="119" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- StatusCode -->
        <test-method is-config="true" signature="BaseURI()[pri:0, instance:com.ripplestreet.AllGetApis.EventControllerGetApi@63eef88a]" started-at="2023-08-18T15:26:54 IST" name="BaseURI" finished-at="2023-08-18T15:26:54 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BaseURI -->
        <test-method signature="getAllMileStonesByEvent()[pri:3, instance:com.ripplestreet.AllGetApis.EventControllerGetApi@63eef88a]" started-at="2023-08-18T15:26:54 IST" name="getAllMileStonesByEvent" finished-at="2023-08-18T15:26:56 IST" duration-ms="1518" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getAllMileStonesByEvent -->
        <test-method is-config="true" signature="StatusCode()[pri:0, instance:com.ripplestreet.AllGetApis.EventControllerGetApi@63eef88a]" started-at="2023-08-18T15:26:56 IST" name="StatusCode" finished-at="2023-08-18T15:26:56 IST" duration-ms="102" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- StatusCode -->
        <test-method signature="getAllProductByEvents()[pri:4, instance:com.ripplestreet.AllGetApis.EventControllerGetApi@63eef88a]" started-at="2023-08-18T15:26:56 IST" name="getAllProductByEvents" finished-at="2023-08-18T15:26:57 IST" duration-ms="1534" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getAllProductByEvents -->
        <test-method is-config="true" signature="BaseURI()[pri:0, instance:com.ripplestreet.AllGetApis.EventControllerGetApi@63eef88a]" started-at="2023-08-18T15:26:56 IST" name="BaseURI" finished-at="2023-08-18T15:26:56 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BaseURI -->
        <test-method is-config="true" signature="StatusCode()[pri:0, instance:com.ripplestreet.AllGetApis.EventControllerGetApi@63eef88a]" started-at="2023-08-18T15:26:57 IST" name="StatusCode" finished-at="2023-08-18T15:26:57 IST" duration-ms="115" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- StatusCode -->
        <test-method signature="getAllServices()[pri:5, instance:com.ripplestreet.AllGetApis.EventControllerGetApi@63eef88a]" started-at="2023-08-18T15:26:57 IST" name="getAllServices" finished-at="2023-08-18T15:26:59 IST" duration-ms="1520" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getAllServices -->
        <test-method is-config="true" signature="BaseURI()[pri:0, instance:com.ripplestreet.AllGetApis.EventControllerGetApi@63eef88a]" started-at="2023-08-18T15:26:57 IST" name="BaseURI" finished-at="2023-08-18T15:26:57 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BaseURI -->
        <test-method is-config="true" signature="StatusCode()[pri:0, instance:com.ripplestreet.AllGetApis.EventControllerGetApi@63eef88a]" started-at="2023-08-18T15:26:59 IST" name="StatusCode" finished-at="2023-08-18T15:26:59 IST" duration-ms="128" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- StatusCode -->
        <test-method signature="getAllSubscriptionsByEvent()[pri:6, instance:com.ripplestreet.AllGetApis.EventControllerGetApi@63eef88a]" started-at="2023-08-18T15:26:59 IST" name="getAllSubscriptionsByEvent" finished-at="2023-08-18T15:27:00 IST" duration-ms="1303" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getAllSubscriptionsByEvent -->
        <test-method is-config="true" signature="BaseURI()[pri:0, instance:com.ripplestreet.AllGetApis.EventControllerGetApi@63eef88a]" started-at="2023-08-18T15:26:59 IST" name="BaseURI" finished-at="2023-08-18T15:26:59 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BaseURI -->
        <test-method is-config="true" signature="StatusCode()[pri:0, instance:com.ripplestreet.AllGetApis.EventControllerGetApi@63eef88a]" started-at="2023-08-18T15:27:00 IST" name="StatusCode" finished-at="2023-08-18T15:27:00 IST" duration-ms="90" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- StatusCode -->
        <test-method is-config="true" signature="BaseURI()[pri:0, instance:com.ripplestreet.AllGetApis.EventControllerGetApi@63eef88a]" started-at="2023-08-18T15:27:00 IST" name="BaseURI" finished-at="2023-08-18T15:27:00 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BaseURI -->
        <test-method signature="getAllSubscriptionsByServiceName()[pri:7, instance:com.ripplestreet.AllGetApis.EventControllerGetApi@63eef88a]" started-at="2023-08-18T15:27:00 IST" name="getAllSubscriptionsByServiceName" finished-at="2023-08-18T15:27:02 IST" duration-ms="1549" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getAllSubscriptionsByServiceName -->
        <test-method is-config="true" signature="StatusCode()[pri:0, instance:com.ripplestreet.AllGetApis.EventControllerGetApi@63eef88a]" started-at="2023-08-18T15:27:02 IST" name="StatusCode" finished-at="2023-08-18T15:27:02 IST" duration-ms="123" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- StatusCode -->
        <test-method signature="getEventById()[pri:8, instance:com.ripplestreet.AllGetApis.EventControllerGetApi@63eef88a]" started-at="2023-08-18T15:27:02 IST" name="getEventById" finished-at="2023-08-18T15:27:03 IST" duration-ms="1408" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getEventById -->
        <test-method is-config="true" signature="BaseURI()[pri:0, instance:com.ripplestreet.AllGetApis.EventControllerGetApi@63eef88a]" started-at="2023-08-18T15:27:02 IST" name="BaseURI" finished-at="2023-08-18T15:27:02 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BaseURI -->
        <test-method is-config="true" signature="StatusCode()[pri:0, instance:com.ripplestreet.AllGetApis.EventControllerGetApi@63eef88a]" started-at="2023-08-18T15:27:03 IST" name="StatusCode" finished-at="2023-08-18T15:27:04 IST" duration-ms="111" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- StatusCode -->
        <test-method signature="getEventDetailBySlug()[pri:9, instance:com.ripplestreet.AllGetApis.EventControllerGetApi@63eef88a]" started-at="2023-08-18T15:27:04 IST" name="getEventDetailBySlug" finished-at="2023-08-18T15:27:05 IST" duration-ms="1526" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getEventDetailBySlug -->
        <test-method is-config="true" signature="BaseURI()[pri:0, instance:com.ripplestreet.AllGetApis.EventControllerGetApi@63eef88a]" started-at="2023-08-18T15:27:04 IST" name="BaseURI" finished-at="2023-08-18T15:27:04 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BaseURI -->
        <test-method is-config="true" signature="StatusCode()[pri:0, instance:com.ripplestreet.AllGetApis.EventControllerGetApi@63eef88a]" started-at="2023-08-18T15:27:05 IST" name="StatusCode" finished-at="2023-08-18T15:27:05 IST" duration-ms="97" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- StatusCode -->
        <test-method signature="getProductDetailEventIdAndProductId()[pri:10, instance:com.ripplestreet.AllGetApis.EventControllerGetApi@63eef88a]" started-at="2023-08-18T15:27:05 IST" name="getProductDetailEventIdAndProductId" finished-at="2023-08-18T15:27:07 IST" duration-ms="1437" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getProductDetailEventIdAndProductId -->
        <test-method is-config="true" signature="BaseURI()[pri:0, instance:com.ripplestreet.AllGetApis.EventControllerGetApi@63eef88a]" started-at="2023-08-18T15:27:05 IST" name="BaseURI" finished-at="2023-08-18T15:27:05 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BaseURI -->
        <test-method is-config="true" signature="StatusCode()[pri:0, instance:com.ripplestreet.AllGetApis.EventControllerGetApi@63eef88a]" started-at="2023-08-18T15:27:07 IST" name="StatusCode" finished-at="2023-08-18T15:27:07 IST" duration-ms="129" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- StatusCode -->
        <test-method signature="getpackAndApplicationCountByEventId()[pri:11, instance:com.ripplestreet.AllGetApis.EventControllerGetApi@63eef88a]" started-at="2023-08-18T15:27:07 IST" name="getpackAndApplicationCountByEventId" finished-at="2023-08-18T15:27:08 IST" duration-ms="1508" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getpackAndApplicationCountByEventId -->
        <test-method is-config="true" signature="BaseURI()[pri:0, instance:com.ripplestreet.AllGetApis.EventControllerGetApi@63eef88a]" started-at="2023-08-18T15:27:07 IST" name="BaseURI" finished-at="2023-08-18T15:27:07 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BaseURI -->
        <test-method is-config="true" signature="StatusCode()[pri:0, instance:com.ripplestreet.AllGetApis.EventControllerGetApi@63eef88a]" started-at="2023-08-18T15:27:08 IST" name="StatusCode" finished-at="2023-08-18T15:27:08 IST" duration-ms="93" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- StatusCode -->
        <test-method signature="getByEventName()[pri:12, instance:com.ripplestreet.AllGetApis.EventControllerGetApi@63eef88a]" started-at="2023-08-18T15:27:08 IST" name="getByEventName" finished-at="2023-08-18T15:27:10 IST" duration-ms="1543" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getByEventName -->
        <test-method is-config="true" signature="BaseURI()[pri:0, instance:com.ripplestreet.AllGetApis.EventControllerGetApi@63eef88a]" started-at="2023-08-18T15:27:08 IST" name="BaseURI" finished-at="2023-08-18T15:27:08 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BaseURI -->
        <test-method is-config="true" signature="StatusCode()[pri:0, instance:com.ripplestreet.AllGetApis.EventControllerGetApi@63eef88a]" started-at="2023-08-18T15:27:10 IST" name="StatusCode" finished-at="2023-08-18T15:27:10 IST" duration-ms="97" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- StatusCode -->
        <test-method is-config="true" signature="BaseURI()[pri:0, instance:com.ripplestreet.AllGetApis.EventControllerGetApi@63eef88a]" started-at="2023-08-18T15:27:10 IST" name="BaseURI" finished-at="2023-08-18T15:27:10 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BaseURI -->
        <test-method signature="getCurrentMileStonesByEvent()[pri:13, instance:com.ripplestreet.AllGetApis.EventControllerGetApi@63eef88a]" started-at="2023-08-18T15:27:10 IST" name="getCurrentMileStonesByEvent" finished-at="2023-08-18T15:27:11 IST" duration-ms="1540" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getCurrentMileStonesByEvent -->
        <test-method is-config="true" signature="StatusCode()[pri:0, instance:com.ripplestreet.AllGetApis.EventControllerGetApi@63eef88a]" started-at="2023-08-18T15:27:11 IST" name="StatusCode" finished-at="2023-08-18T15:27:12 IST" duration-ms="145" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- StatusCode -->
        <test-method signature="getEventDetailForWorkFlow()[pri:14, instance:com.ripplestreet.AllGetApis.EventControllerGetApi@63eef88a]" started-at="2023-08-18T15:27:12 IST" name="getEventDetailForWorkFlow" finished-at="2023-08-18T15:27:13 IST" duration-ms="1492" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getEventDetailForWorkFlow -->
        <test-method is-config="true" signature="BaseURI()[pri:0, instance:com.ripplestreet.AllGetApis.EventControllerGetApi@63eef88a]" started-at="2023-08-18T15:27:12 IST" name="BaseURI" finished-at="2023-08-18T15:27:12 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BaseURI -->
        <test-method is-config="true" signature="StatusCode()[pri:0, instance:com.ripplestreet.AllGetApis.EventControllerGetApi@63eef88a]" started-at="2023-08-18T15:27:13 IST" name="StatusCode" finished-at="2023-08-18T15:27:13 IST" duration-ms="78" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- StatusCode -->
        <test-method signature="getFilteredEvents()[pri:189, instance:com.ripplestreet.AllGetApis.EventControllerGetApi@63eef88a]" started-at="2023-08-18T15:27:13 IST" name="getFilteredEvents" finished-at="2023-08-18T15:27:15 IST" duration-ms="1560" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getFilteredEvents -->
        <test-method is-config="true" signature="BaseURI()[pri:0, instance:com.ripplestreet.AllGetApis.EventControllerGetApi@63eef88a]" started-at="2023-08-18T15:27:13 IST" name="BaseURI" finished-at="2023-08-18T15:27:13 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BaseURI -->
        <test-method is-config="true" signature="StatusCode()[pri:0, instance:com.ripplestreet.AllGetApis.EventControllerGetApi@63eef88a]" started-at="2023-08-18T15:27:15 IST" name="StatusCode" finished-at="2023-08-18T15:27:15 IST" duration-ms="139" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- StatusCode -->
        <test-method signature="getEventMileStoneByIdAndDate()[pri:190, instance:com.ripplestreet.AllGetApis.EventControllerGetApi@63eef88a]" started-at="2023-08-18T15:27:15 IST" name="getEventMileStoneByIdAndDate" finished-at="2023-08-18T15:27:16 IST" duration-ms="1393" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getEventMileStoneByIdAndDate -->
        <test-method is-config="true" signature="BaseURI()[pri:0, instance:com.ripplestreet.AllGetApis.EventControllerGetApi@63eef88a]" started-at="2023-08-18T15:27:15 IST" name="BaseURI" finished-at="2023-08-18T15:27:15 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BaseURI -->
        <test-method is-config="true" signature="StatusCode()[pri:0, instance:com.ripplestreet.AllGetApis.EventControllerGetApi@63eef88a]" started-at="2023-08-18T15:27:16 IST" name="StatusCode" finished-at="2023-08-18T15:27:16 IST" duration-ms="134" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- StatusCode -->
      </class> <!-- com.ripplestreet.AllGetApis.EventControllerGetApi -->
      <class name="com.ripplestreet.AllGetApis.RewardCatalogControllerGetAPi">
        <test-method is-config="true" signature="BaseURI()[pri:0, instance:com.ripplestreet.AllGetApis.RewardCatalogControllerGetAPi@4416d64f]" started-at="2023-08-18T15:25:23 IST" name="BaseURI" finished-at="2023-08-18T15:25:23 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BaseURI -->
        <test-method signature="getAllRewardCatalogItems()[pri:110, instance:com.ripplestreet.AllGetApis.RewardCatalogControllerGetAPi@4416d64f]" started-at="2023-08-18T15:25:23 IST" name="getAllRewardCatalogItems" finished-at="2023-08-18T15:25:26 IST" duration-ms="2585" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getAllRewardCatalogItems -->
        <test-method is-config="true" signature="StatusCode()[pri:0, instance:com.ripplestreet.AllGetApis.RewardCatalogControllerGetAPi@4416d64f]" started-at="2023-08-18T15:25:26 IST" name="StatusCode" finished-at="2023-08-18T15:25:26 IST" duration-ms="123" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- StatusCode -->
      </class> <!-- com.ripplestreet.AllGetApis.RewardCatalogControllerGetAPi -->
      <class name="com.ripplestreet.AllGetApis.SponserControllerGetApi">
        <test-method signature="findSponsorById()[pri:176, instance:com.ripplestreet.AllGetApis.SponserControllerGetApi@3eb77ea8]" started-at="2023-08-18T15:28:38 IST" name="findSponsorById" finished-at="2023-08-18T15:28:40 IST" duration-ms="1513" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- findSponsorById -->
        <test-method is-config="true" signature="BaseURI()[pri:0, instance:com.ripplestreet.AllGetApis.SponserControllerGetApi@3eb77ea8]" started-at="2023-08-18T15:28:38 IST" name="BaseURI" finished-at="2023-08-18T15:28:38 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BaseURI -->
        <test-method is-config="true" signature="StatusCode()[pri:0, instance:com.ripplestreet.AllGetApis.SponserControllerGetApi@3eb77ea8]" started-at="2023-08-18T15:28:40 IST" name="StatusCode" finished-at="2023-08-18T15:28:40 IST" duration-ms="119" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- StatusCode -->
        <test-method signature="getAllSponsors()[pri:177, instance:com.ripplestreet.AllGetApis.SponserControllerGetApi@3eb77ea8]" started-at="2023-08-18T15:28:40 IST" name="getAllSponsors" finished-at="2023-08-18T15:28:41 IST" duration-ms="1518" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getAllSponsors -->
        <test-method is-config="true" signature="BaseURI()[pri:0, instance:com.ripplestreet.AllGetApis.SponserControllerGetApi@3eb77ea8]" started-at="2023-08-18T15:28:40 IST" name="BaseURI" finished-at="2023-08-18T15:28:40 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BaseURI -->
        <test-method is-config="true" signature="StatusCode()[pri:0, instance:com.ripplestreet.AllGetApis.SponserControllerGetApi@3eb77ea8]" started-at="2023-08-18T15:28:41 IST" name="StatusCode" finished-at="2023-08-18T15:28:42 IST" duration-ms="140" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- StatusCode -->
        <test-method signature="findAllsponsorAssetsbysponsorId()[pri:178, instance:com.ripplestreet.AllGetApis.SponserControllerGetApi@3eb77ea8]" started-at="2023-08-18T15:28:42 IST" name="findAllsponsorAssetsbysponsorId" finished-at="2023-08-18T15:28:43 IST" duration-ms="1497" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- findAllsponsorAssetsbysponsorId -->
        <test-method is-config="true" signature="BaseURI()[pri:0, instance:com.ripplestreet.AllGetApis.SponserControllerGetApi@3eb77ea8]" started-at="2023-08-18T15:28:42 IST" name="BaseURI" finished-at="2023-08-18T15:28:42 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BaseURI -->
        <test-method is-config="true" signature="StatusCode()[pri:0, instance:com.ripplestreet.AllGetApis.SponserControllerGetApi@3eb77ea8]" started-at="2023-08-18T15:28:43 IST" name="StatusCode" finished-at="2023-08-18T15:28:43 IST" duration-ms="127" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- StatusCode -->
      </class> <!-- com.ripplestreet.AllGetApis.SponserControllerGetApi -->
      <class name="com.ripplestreet.AllGetApis.TaskControllerGetApi">
        <test-method is-config="true" signature="BaseURI()[pri:0, instance:com.ripplestreet.AllGetApis.TaskControllerGetApi@75d2da2d]" started-at="2023-08-18T15:26:18 IST" name="BaseURI" finished-at="2023-08-18T15:26:18 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BaseURI -->
        <test-method signature="getListOfTasks()[pri:73, instance:com.ripplestreet.AllGetApis.TaskControllerGetApi@75d2da2d]" started-at="2023-08-18T15:26:18 IST" name="getListOfTasks" finished-at="2023-08-18T15:26:20 IST" duration-ms="1760" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getListOfTasks -->
        <test-method is-config="true" signature="StatusCode()[pri:0, instance:com.ripplestreet.AllGetApis.TaskControllerGetApi@75d2da2d]" started-at="2023-08-18T15:26:20 IST" name="StatusCode" finished-at="2023-08-18T15:26:20 IST" duration-ms="124" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- StatusCode -->
        <test-method signature="getTask()[pri:74, instance:com.ripplestreet.AllGetApis.TaskControllerGetApi@75d2da2d]" started-at="2023-08-18T15:26:20 IST" name="getTask" finished-at="2023-08-18T15:26:22 IST" duration-ms="1451" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getTask -->
        <test-method is-config="true" signature="BaseURI()[pri:0, instance:com.ripplestreet.AllGetApis.TaskControllerGetApi@75d2da2d]" started-at="2023-08-18T15:26:20 IST" name="BaseURI" finished-at="2023-08-18T15:26:20 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BaseURI -->
        <test-method is-config="true" signature="StatusCode()[pri:0, instance:com.ripplestreet.AllGetApis.TaskControllerGetApi@75d2da2d]" started-at="2023-08-18T15:26:22 IST" name="StatusCode" finished-at="2023-08-18T15:26:22 IST" duration-ms="125" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- StatusCode -->
      </class> <!-- com.ripplestreet.AllGetApis.TaskControllerGetApi -->
      <class name="com.ripplestreet.AllGetApis.RewardsItemsControllerGetApi">
        <test-method signature="getRewarditems()[pri:121, instance:com.ripplestreet.AllGetApis.RewardsItemsControllerGetApi@3b8f0a79]" started-at="2023-08-18T15:28:27 IST" name="getRewarditems" finished-at="2023-08-18T15:28:28 IST" duration-ms="1535" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getRewarditems -->
        <test-method is-config="true" signature="BaseURI()[pri:0, instance:com.ripplestreet.AllGetApis.RewardsItemsControllerGetApi@3b8f0a79]" started-at="2023-08-18T15:28:27 IST" name="BaseURI" finished-at="2023-08-18T15:28:27 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BaseURI -->
        <test-method is-config="true" signature="StatusCode()[pri:0, instance:com.ripplestreet.AllGetApis.RewardsItemsControllerGetApi@3b8f0a79]" started-at="2023-08-18T15:28:28 IST" name="StatusCode" finished-at="2023-08-18T15:28:28 IST" duration-ms="127" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- StatusCode -->
      </class> <!-- com.ripplestreet.AllGetApis.RewardsItemsControllerGetApi -->
      <class name="com.ripplestreet.AllGetApis.RoleControllerGetApi">
        <test-method signature="getLlistOfPeopleByRoleID()[pri:174, instance:com.ripplestreet.AllGetApis.RoleControllerGetApi@21129f1f]" started-at="2023-08-18T15:27:37 IST" name="getLlistOfPeopleByRoleID" finished-at="2023-08-18T15:27:39 IST" duration-ms="1514" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getLlistOfPeopleByRoleID -->
        <test-method is-config="true" signature="BaseURI()[pri:0, instance:com.ripplestreet.AllGetApis.RoleControllerGetApi@21129f1f]" started-at="2023-08-18T15:27:37 IST" name="BaseURI" finished-at="2023-08-18T15:27:37 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BaseURI -->
        <test-method is-config="true" signature="StatusCode()[pri:0, instance:com.ripplestreet.AllGetApis.RoleControllerGetApi@21129f1f]" started-at="2023-08-18T15:27:39 IST" name="StatusCode" finished-at="2023-08-18T15:27:39 IST" duration-ms="138" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- StatusCode -->
        <test-method signature="getListOfRoles()[pri:175, instance:com.ripplestreet.AllGetApis.RoleControllerGetApi@21129f1f]" started-at="2023-08-18T15:27:39 IST" name="getListOfRoles" finished-at="2023-08-18T15:27:40 IST" duration-ms="1394" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getListOfRoles -->
        <test-method is-config="true" signature="BaseURI()[pri:0, instance:com.ripplestreet.AllGetApis.RoleControllerGetApi@21129f1f]" started-at="2023-08-18T15:27:39 IST" name="BaseURI" finished-at="2023-08-18T15:27:39 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BaseURI -->
        <test-method is-config="true" signature="StatusCode()[pri:0, instance:com.ripplestreet.AllGetApis.RoleControllerGetApi@21129f1f]" started-at="2023-08-18T15:27:40 IST" name="StatusCode" finished-at="2023-08-18T15:27:40 IST" duration-ms="110" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- StatusCode -->
      </class> <!-- com.ripplestreet.AllGetApis.RoleControllerGetApi -->
      <class name="com.ripplestreet.AllGetApis.TremendouesControllerGetApi">
        <test-method is-config="true" signature="BaseURI()[pri:0, instance:com.ripplestreet.AllGetApis.TremendouesControllerGetApi@418c5a9c]" started-at="2023-08-18T15:25:45 IST" name="BaseURI" finished-at="2023-08-18T15:25:45 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BaseURI -->
        <test-method signature="getTremendousCampaigns()[pri:125, instance:com.ripplestreet.AllGetApis.TremendouesControllerGetApi@418c5a9c]" started-at="2023-08-18T15:25:45 IST" name="getTremendousCampaigns" finished-at="2023-08-18T15:25:47 IST" duration-ms="1918" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getTremendousCampaigns -->
        <test-method is-config="true" signature="StatusCode()[pri:0, instance:com.ripplestreet.AllGetApis.TremendouesControllerGetApi@418c5a9c]" started-at="2023-08-18T15:25:47 IST" name="StatusCode" finished-at="2023-08-18T15:25:47 IST" duration-ms="132" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- StatusCode -->
        <test-method signature="getTremendousFundingSources()[pri:126, instance:com.ripplestreet.AllGetApis.TremendouesControllerGetApi@418c5a9c]" started-at="2023-08-18T15:25:47 IST" name="getTremendousFundingSources" finished-at="2023-08-18T15:25:49 IST" duration-ms="1726" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getTremendousFundingSources -->
        <test-method is-config="true" signature="BaseURI()[pri:0, instance:com.ripplestreet.AllGetApis.TremendouesControllerGetApi@418c5a9c]" started-at="2023-08-18T15:25:47 IST" name="BaseURI" finished-at="2023-08-18T15:25:47 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BaseURI -->
        <test-method is-config="true" signature="StatusCode()[pri:0, instance:com.ripplestreet.AllGetApis.TremendouesControllerGetApi@418c5a9c]" started-at="2023-08-18T15:25:49 IST" name="StatusCode" finished-at="2023-08-18T15:25:49 IST" duration-ms="115" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- StatusCode -->
      </class> <!-- com.ripplestreet.AllGetApis.TremendouesControllerGetApi -->
      <class name="com.ripplestreet.AllGetApis.AudienceSearchControllerGetApi">
        <test-method signature="searchableFields()[pri:76, instance:com.ripplestreet.AllGetApis.AudienceSearchControllerGetApi@10f7f7de]" started-at="2023-08-18T15:25:17 IST" name="searchableFields" finished-at="2023-08-18T15:25:18 IST" duration-ms="1501" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- searchableFields -->
        <test-method is-config="true" signature="BaseURI()[pri:0, instance:com.ripplestreet.AllGetApis.AudienceSearchControllerGetApi@10f7f7de]" started-at="2023-08-18T15:25:17 IST" name="BaseURI" finished-at="2023-08-18T15:25:17 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BaseURI -->
        <test-method is-config="true" signature="StatusCode()[pri:0, instance:com.ripplestreet.AllGetApis.AudienceSearchControllerGetApi@10f7f7de]" started-at="2023-08-18T15:25:18 IST" name="StatusCode" finished-at="2023-08-18T15:25:18 IST" duration-ms="107" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- StatusCode -->
      </class> <!-- com.ripplestreet.AllGetApis.AudienceSearchControllerGetApi -->
      <class name="com.ripplestreet.AllGetApis.CampaignControllerGetApi">
        <test-method is-config="true" signature="BaseURI()[pri:0, instance:com.ripplestreet.AllGetApis.CampaignControllerGetApi@2ce6c6ec]" started-at="2023-08-18T15:24:44 IST" name="BaseURI" finished-at="2023-08-18T15:24:44 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BaseURI -->
        <test-method signature="findCampaignById()[pri:144, instance:com.ripplestreet.AllGetApis.CampaignControllerGetApi@2ce6c6ec]" started-at="2023-08-18T15:24:44 IST" name="findCampaignById" finished-at="2023-08-18T15:24:46 IST" duration-ms="1460" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- findCampaignById -->
        <test-method is-config="true" signature="StatusCode()[pri:0, instance:com.ripplestreet.AllGetApis.CampaignControllerGetApi@2ce6c6ec]" started-at="2023-08-18T15:24:46 IST" name="StatusCode" finished-at="2023-08-18T15:24:46 IST" duration-ms="157" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- StatusCode -->
        <test-method is-config="true" signature="BaseURI()[pri:0, instance:com.ripplestreet.AllGetApis.CampaignControllerGetApi@2ce6c6ec]" started-at="2023-08-18T15:24:46 IST" name="BaseURI" finished-at="2023-08-18T15:24:46 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BaseURI -->
        <test-method signature="findAllCampaingn()[pri:145, instance:com.ripplestreet.AllGetApis.CampaignControllerGetApi@2ce6c6ec]" started-at="2023-08-18T15:24:46 IST" name="findAllCampaingn" finished-at="2023-08-18T15:24:47 IST" duration-ms="1583" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- findAllCampaingn -->
        <test-method is-config="true" signature="StatusCode()[pri:0, instance:com.ripplestreet.AllGetApis.CampaignControllerGetApi@2ce6c6ec]" started-at="2023-08-18T15:24:47 IST" name="StatusCode" finished-at="2023-08-18T15:24:48 IST" duration-ms="191" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- StatusCode -->
      </class> <!-- com.ripplestreet.AllGetApis.CampaignControllerGetApi -->
      <class name="com.ripplestreet.AllGetApis.OptinInflightActivationControllerGetApi">
        <test-method is-config="true" signature="BaseURI()[pri:0, instance:com.ripplestreet.AllGetApis.OptinInflightActivationControllerGetApi@18e36d14]" started-at="2023-08-18T15:25:49 IST" name="BaseURI" finished-at="2023-08-18T15:25:49 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BaseURI -->
        <test-method signature="getListOfAllocationTransientRecordByEventId()[pri:38, instance:com.ripplestreet.AllGetApis.OptinInflightActivationControllerGetApi@18e36d14]" started-at="2023-08-18T15:25:49 IST" name="getListOfAllocationTransientRecordByEventId" finished-at="2023-08-18T15:25:50 IST" duration-ms="1521" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getListOfAllocationTransientRecordByEventId -->
        <test-method is-config="true" signature="StatusCode()[pri:0, instance:com.ripplestreet.AllGetApis.OptinInflightActivationControllerGetApi@18e36d14]" started-at="2023-08-18T15:25:50 IST" name="StatusCode" finished-at="2023-08-18T15:25:51 IST" duration-ms="130" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- StatusCode -->
        <test-method signature="getAllocationTransientRecordByEventIdAndPersonId()[pri:39, instance:com.ripplestreet.AllGetApis.OptinInflightActivationControllerGetApi@18e36d14]" started-at="2023-08-18T15:25:51 IST" name="getAllocationTransientRecordByEventIdAndPersonId" finished-at="2023-08-18T15:25:52 IST" duration-ms="1510" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getAllocationTransientRecordByEventIdAndPersonId -->
        <test-method is-config="true" signature="BaseURI()[pri:0, instance:com.ripplestreet.AllGetApis.OptinInflightActivationControllerGetApi@18e36d14]" started-at="2023-08-18T15:25:51 IST" name="BaseURI" finished-at="2023-08-18T15:25:51 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BaseURI -->
        <test-method is-config="true" signature="StatusCode()[pri:0, instance:com.ripplestreet.AllGetApis.OptinInflightActivationControllerGetApi@18e36d14]" started-at="2023-08-18T15:25:52 IST" name="StatusCode" finished-at="2023-08-18T15:25:52 IST" duration-ms="116" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- StatusCode -->
      </class> <!-- com.ripplestreet.AllGetApis.OptinInflightActivationControllerGetApi -->
      <class name="com.ripplestreet.AllGetApis.IntrestesControllerGetApi">
        <test-method signature="Allcategorieslist()[pri:34, instance:com.ripplestreet.AllGetApis.IntrestesControllerGetApi@1672fe87]" started-at="2023-08-18T15:24:58 IST" name="Allcategorieslist" finished-at="2023-08-18T15:24:59 IST" duration-ms="1802" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Allcategorieslist -->
        <test-method is-config="true" signature="BaseURI()[pri:0, instance:com.ripplestreet.AllGetApis.IntrestesControllerGetApi@1672fe87]" started-at="2023-08-18T15:24:58 IST" name="BaseURI" finished-at="2023-08-18T15:24:58 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BaseURI -->
        <test-method is-config="true" signature="StatusCode()[pri:0, instance:com.ripplestreet.AllGetApis.IntrestesControllerGetApi@1672fe87]" started-at="2023-08-18T15:24:59 IST" name="StatusCode" finished-at="2023-08-18T15:25:00 IST" duration-ms="141" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- StatusCode -->
        <test-method is-config="true" signature="BaseURI()[pri:0, instance:com.ripplestreet.AllGetApis.IntrestesControllerGetApi@1672fe87]" started-at="2023-08-18T15:25:00 IST" name="BaseURI" finished-at="2023-08-18T15:25:00 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BaseURI -->
        <test-method signature="getUserInterestByPersonId()[pri:35, instance:com.ripplestreet.AllGetApis.IntrestesControllerGetApi@1672fe87]" started-at="2023-08-18T15:25:00 IST" name="getUserInterestByPersonId" finished-at="2023-08-18T15:25:01 IST" duration-ms="1499" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getUserInterestByPersonId -->
        <test-method is-config="true" signature="StatusCode()[pri:0, instance:com.ripplestreet.AllGetApis.IntrestesControllerGetApi@1672fe87]" started-at="2023-08-18T15:25:01 IST" name="StatusCode" finished-at="2023-08-18T15:25:01 IST" duration-ms="146" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- StatusCode -->
      </class> <!-- com.ripplestreet.AllGetApis.IntrestesControllerGetApi -->
      <class name="com.ripplestreet.AllGetApis.SegmentationDataControllerGetApi">
        <test-method signature="FindIfUserExistInGivenSegment()[pri:77, instance:com.ripplestreet.AllGetApis.SegmentationDataControllerGetApi@282cb7c7]" started-at="2023-08-18T15:27:44 IST" name="FindIfUserExistInGivenSegment" finished-at="2023-08-18T15:27:45 IST" duration-ms="1501" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- FindIfUserExistInGivenSegment -->
        <test-method is-config="true" signature="BaseURI()[pri:0, instance:com.ripplestreet.AllGetApis.SegmentationDataControllerGetApi@282cb7c7]" started-at="2023-08-18T15:27:44 IST" name="BaseURI" finished-at="2023-08-18T15:27:44 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BaseURI -->
        <test-method is-config="true" signature="StatusCode()[pri:0, instance:com.ripplestreet.AllGetApis.SegmentationDataControllerGetApi@282cb7c7]" started-at="2023-08-18T15:27:45 IST" name="StatusCode" finished-at="2023-08-18T15:27:45 IST" duration-ms="108" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- StatusCode -->
        <test-method signature="GetSegmentIdBySegmentName()[pri:78, instance:com.ripplestreet.AllGetApis.SegmentationDataControllerGetApi@282cb7c7]" started-at="2023-08-18T15:27:45 IST" name="GetSegmentIdBySegmentName" finished-at="2023-08-18T15:27:47 IST" duration-ms="1631" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GetSegmentIdBySegmentName -->
        <test-method is-config="true" signature="BaseURI()[pri:0, instance:com.ripplestreet.AllGetApis.SegmentationDataControllerGetApi@282cb7c7]" started-at="2023-08-18T15:27:45 IST" name="BaseURI" finished-at="2023-08-18T15:27:45 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BaseURI -->
        <test-method is-config="true" signature="StatusCode()[pri:0, instance:com.ripplestreet.AllGetApis.SegmentationDataControllerGetApi@282cb7c7]" started-at="2023-08-18T15:27:47 IST" name="StatusCode" finished-at="2023-08-18T15:27:47 IST" duration-ms="135" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- StatusCode -->
        <test-method signature="GetSegmentsOfaUser()[pri:79, instance:com.ripplestreet.AllGetApis.SegmentationDataControllerGetApi@282cb7c7]" started-at="2023-08-18T15:27:47 IST" name="GetSegmentsOfaUser" finished-at="2023-08-18T15:27:49 IST" duration-ms="1504" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GetSegmentsOfaUser -->
        <test-method is-config="true" signature="BaseURI()[pri:0, instance:com.ripplestreet.AllGetApis.SegmentationDataControllerGetApi@282cb7c7]" started-at="2023-08-18T15:27:47 IST" name="BaseURI" finished-at="2023-08-18T15:27:47 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BaseURI -->
        <test-method is-config="true" signature="StatusCode()[pri:0, instance:com.ripplestreet.AllGetApis.SegmentationDataControllerGetApi@282cb7c7]" started-at="2023-08-18T15:27:49 IST" name="StatusCode" finished-at="2023-08-18T15:27:49 IST" duration-ms="123" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- StatusCode -->
        <test-method signature="GetUsersOfaSegment()[pri:80, instance:com.ripplestreet.AllGetApis.SegmentationDataControllerGetApi@282cb7c7]" started-at="2023-08-18T15:27:49 IST" name="GetUsersOfaSegment" finished-at="2023-08-18T15:27:50 IST" duration-ms="1465" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GetUsersOfaSegment -->
        <test-method is-config="true" signature="BaseURI()[pri:0, instance:com.ripplestreet.AllGetApis.SegmentationDataControllerGetApi@282cb7c7]" started-at="2023-08-18T15:27:49 IST" name="BaseURI" finished-at="2023-08-18T15:27:49 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BaseURI -->
        <test-method is-config="true" signature="StatusCode()[pri:0, instance:com.ripplestreet.AllGetApis.SegmentationDataControllerGetApi@282cb7c7]" started-at="2023-08-18T15:27:50 IST" name="StatusCode" finished-at="2023-08-18T15:27:50 IST" duration-ms="126" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- StatusCode -->
        <test-method signature="GetUserDetailsOfaSegment()[pri:81, instance:com.ripplestreet.AllGetApis.SegmentationDataControllerGetApi@282cb7c7]" started-at="2023-08-18T15:27:50 IST" name="GetUserDetailsOfaSegment" finished-at="2023-08-18T15:27:52 IST" duration-ms="1661" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GetUserDetailsOfaSegment -->
        <test-method is-config="true" signature="BaseURI()[pri:0, instance:com.ripplestreet.AllGetApis.SegmentationDataControllerGetApi@282cb7c7]" started-at="2023-08-18T15:27:50 IST" name="BaseURI" finished-at="2023-08-18T15:27:50 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BaseURI -->
        <test-method is-config="true" signature="StatusCode()[pri:0, instance:com.ripplestreet.AllGetApis.SegmentationDataControllerGetApi@282cb7c7]" started-at="2023-08-18T15:27:52 IST" name="StatusCode" finished-at="2023-08-18T15:27:52 IST" duration-ms="108" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- StatusCode -->
      </class> <!-- com.ripplestreet.AllGetApis.SegmentationDataControllerGetApi -->
    </test> <!-- Test -->
  </suite> <!-- Suite -->
</testng-results>
